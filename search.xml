<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo发布时Git出现警告</title>
      <link href="/2019/02/28/record-git-problem-solution/"/>
      <url>/2019/02/28/record-git-problem-solution/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>执行<code>hexo d</code>时出现以下问题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend dirs...</span><br><span class="line">warning: LF will be replaced by CRLF in 2017/09/01/hello-First/index.html.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in 2017/09/01/hello-world/index.html.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in 2017/09/03/Vue-second/index.html.</span><br></pre></td></tr></table></figure></p><h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><p><code>CR</code>    回车<br><code>LF</code>    换行<br>Windows/Dos     CRLF    <code>\r\n</code><br>Linux/Unix      LF      <code>\n</code><br>MacOS           CR      <code>\r</code></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>打开命令行，进行设置，在Windows下开发，建议设置autocrlf为true。<br>如果文件编码是UTF8并且包含中文文字，那还是把autocrlf设置为false，并且把所有文件转换为Linux编码（即LF\n），开启safecrlf检查。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">一、AutoCRLF</span><br><span class="line">#提交时转换为LF，检出时转换为CRLF</span><br><span class="line">git config --global core.autocrlf true</span><br><span class="line"></span><br><span class="line">#提交时转换为LF，检出时不转换</span><br><span class="line">git config --global core.autocrlf input</span><br><span class="line"></span><br><span class="line">#提交检出均不转换</span><br><span class="line">git config --global core.autocrlf false</span><br><span class="line"></span><br><span class="line">二、SafeCRLF</span><br><span class="line">#拒绝提交包含混合换行符的文件</span><br><span class="line">git config --global core.safecrlf true</span><br><span class="line"></span><br><span class="line">#允许提交包含混合换行符的文件</span><br><span class="line">git config --global core.safecrlf false</span><br><span class="line"></span><br><span class="line">#提交包含混合换行符的文件时给出警告</span><br><span class="line">git config --global core.safecrlf warn</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 实践检验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在windows中使用SSH连接VMware Linux虚拟机</title>
      <link href="/2018/09/28/ssh-login-linux/"/>
      <url>/2018/09/28/ssh-login-linux/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="测试环境配置"><a href="#测试环境配置" class="headerlink" title="测试环境配置"></a>测试环境配置</h2><ul><li>主机：window10  64位 专业版</li><li>虚拟机：VMware workstation 15</li><li>虚拟机操作系统：deepin-15.7-amd64</li><li>目标: 在deepin运行SSH服务，从宿主操作系统windows10中，登录deepin</li></ul><h2 id="设置虚拟VMware网络适配器"><a href="#设置虚拟VMware网络适配器" class="headerlink" title="设置虚拟VMware网络适配器"></a>设置虚拟VMware网络适配器</h2><p><img src="https://ichenxiaobin.cn/blog/images/20180928133309.png" alt="设置虚拟VMware网络适配器"></p><blockquote><p>设置虚拟VMware网络适配器为<code>NAT模式</code>，其实一般装完虚拟机Linux系统就是这种模式。</p></blockquote><h2 id="虚拟机Deepin内设置"><a href="#虚拟机Deepin内设置" class="headerlink" title="虚拟机Deepin内设置"></a>虚拟机Deepin内设置</h2><h3 id="检查ssh-server有没有启动"><a href="#检查ssh-server有没有启动" class="headerlink" title="检查ssh-server有没有启动"></a>检查ssh-server有没有启动</h3><p>运行以下命令，如果没有sshd，说明ssh-server没有启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -e | grep ssh</span><br></pre></td></tr></table></figure></p><h3 id="安装OpenSSH服务器"><a href="#安装OpenSSH服务器" class="headerlink" title="安装OpenSSH服务器"></a>安装OpenSSH服务器</h3><ol><li><p>请确保虚拟机Deepin内可上网，一般设置为NAT模式是可以上网的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure></li><li><p>再次检查ssh-server是否启动，看到sshd说明服务已经启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ps -e | grep ssh</span><br><span class="line">667 ?        00:00:00 sshd</span><br></pre></td></tr></table></figure></li><li><p>查看linux网卡地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://ichenxiaobin.cn/blog/images/20180928141820.png" alt="查看linux网卡地址"></p><blockquote><p>如上图所示，Deepin的网卡地址是<code>192.168.76.128</code>。</p></blockquote><h2 id="设置windows"><a href="#设置windows" class="headerlink" title="设置windows"></a>设置windows</h2><h3 id="检查是否ping得通Deepin"><a href="#检查是否ping得通Deepin" class="headerlink" title="检查是否ping得通Deepin"></a>检查是否ping得通Deepin</h3><p>检查本机window10是否ping得通虚拟机的Deepin系统。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">λ ping 192.168.76.128</span><br><span class="line"></span><br><span class="line">正在 Ping 192.168.76.128 具有 32 字节的数据:</span><br><span class="line">来自 192.168.76.128 的回复: 字节=32 时间&lt;1ms TTL=64</span><br><span class="line">来自 192.168.76.128 的回复: 字节=32 时间&lt;1ms TTL=64</span><br><span class="line">来自 192.168.76.128 的回复: 字节=32 时间&lt;1ms TTL=64</span><br><span class="line">来自 192.168.76.128 的回复: 字节=32 时间&lt;1ms TTL=64</span><br><span class="line"></span><br><span class="line">192.168.76.128 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，</span><br><span class="line">往返行程的估计时间(以毫秒为单位):</span><br><span class="line">    最短 = 0ms，最长 = 0ms，平均 = 0ms</span><br></pre></td></tr></table></figure><h3 id="使用XShell验证SSH连接"><a href="#使用XShell验证SSH连接" class="headerlink" title="使用XShell验证SSH连接"></a>使用XShell验证SSH连接</h3><p><img src="https://ichenxiaobin.cn/blog/images/20180928143145.gif" alt="使用XShell验证SSH连接"></p>]]></content>
      
      
      <categories>
          
          <category> 实践检验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用pyenv进行python多版本控制</title>
      <link href="/2018/05/01/use-pyenv-manage-python/"/>
      <url>/2018/05/01/use-pyenv-manage-python/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="安装pyenv"><a href="#安装pyenv" class="headerlink" title="安装pyenv"></a>安装pyenv</h2><h3 id="使用homebrew安装pyenv"><a href="#使用homebrew安装pyenv" class="headerlink" title="使用homebrew安装pyenv"></a>使用homebrew安装pyenv</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">brew update</span><br><span class="line">brew install pyenv</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 只需要执行一次即可 </span></span><br><span class="line">echo 'eval "$(pyenv init -)"' &gt;&gt; ~/.bash_profile </span><br><span class="line">或者：</span><br><span class="line">echo 'eval "$(pyenv init -)"' &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><p>之后如果需要更新pyenv，可以直接使用<code>brew upgrade pyenv</code></p><h3 id="基于GitHub的安装pyenv"><a href="#基于GitHub的安装pyenv" class="headerlink" title="基于GitHub的安装pyenv"></a>基于GitHub的安装pyenv</h3><h4 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/pyenv/pyenv.git  ~/.pyenv</span><br></pre></td></tr></table></figure><h4 id="指明环境变量"><a href="#指明环境变量" class="headerlink" title="指明环境变量"></a>指明环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo 'export PYENV_ROOT="$HOME/.pyenv"' &gt;&gt; ~/.bash_profile </span><br><span class="line">echo 'export PATH="$PYENV_ROOT/bin:$PATH"' &gt;&gt; ~/.bash_profile </span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line">echo 'export PYENV_ROOT="$HOME/.pyenv"' &gt;&gt; ~/.zshrc </span><br><span class="line">echo 'export PATH="$PYENV_ROOT/bin:$PATH"' &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><h4 id="开启shims-and-autocompletion"><a href="#开启shims-and-autocompletion" class="headerlink" title="开启shims and autocompletion"></a>开启shims and autocompletion</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo 'eval "$(pyenv init -)"' &gt;&gt; ~/.bash_profile</span><br><span class="line"></span><br><span class="line">或者：</span><br><span class="line">echo 'eval "$(pyenv init -)"' &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><h4 id="重新启动shell让其生效"><a href="#重新启动shell让其生效" class="headerlink" title="重新启动shell让其生效"></a>重新启动shell让其生效</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec $SHELL</span><br></pre></td></tr></table></figure><h4 id="升级pyenv"><a href="#升级pyenv" class="headerlink" title="升级pyenv"></a>升级pyenv</h4><ul><li>升级到最新版</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.pyenv </span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><ul><li>升级到指定版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.pyenv</span><br><span class="line">git fetch</span><br><span class="line">git tag</span><br><span class="line">git checkout v0.1.0</span><br></pre></td></tr></table></figure><h2 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a>安装python</h2><h3 id="查看已安装python版本"><a href="#查看已安装python版本" class="headerlink" title="查看已安装python版本"></a>查看已安装python版本</h3><p>  带星号的为当前路径下所使用的python版本。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pyenv versions</span><br><span class="line"></span><br><span class="line">* system</span><br><span class="line">  3.4.1</span><br></pre></td></tr></table></figure><h3 id="查看可安装的python版本"><a href="#查看可安装的python版本" class="headerlink" title="查看可安装的python版本"></a>查看可安装的python版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv install -l</span><br></pre></td></tr></table></figure><h3 id="安装python-1"><a href="#安装python-1" class="headerlink" title="安装python"></a>安装python</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pyenv install &lt;version&gt;</span><br><span class="line"></span><br><span class="line">比如：</span><br><span class="line">pyenv install 3.6.5</span><br></pre></td></tr></table></figure><h3 id="python版本管理命令"><a href="#python版本管理命令" class="headerlink" title="python版本管理命令"></a>python版本管理命令</h3><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">pyenv commands</td><td style="text-align:center">列出可以使用的命令</td></tr><tr><td style="text-align:center">pyenv versions</td><td style="text-align:center">列出pyenv安装的所有组件，包括site package</td></tr><tr><td style="text-align:center">pyenv version</td><td style="text-align:center">查看当前的python version</td></tr><tr><td style="text-align:center">pyenv install  3.5.4</td><td style="text-align:center">安装python3.5.4</td></tr><tr><td style="text-align:center">pyenv which python3.5</td><td style="text-align:center">列出给定的python version可执行文件位置</td></tr><tr><td style="text-align:center">pyenv install –list</td><td style="text-align:center">列出所有可以安装的包括python version，pypy等</td></tr><tr><td style="text-align:center">pyenv rehash</td><td style="text-align:center">在安装新版本的Python之后运行此命令，或安装提供二进制文件的软件包。</td></tr><tr><td style="text-align:center">pyenv uninstall 3.5.4</td><td style="text-align:center">拆卸python指代版本</td></tr><tr><td style="text-align:center">pyenv global version</td><td style="text-align:center">全局设置python版本为指定版本</td></tr><tr><td style="text-align:center">pyenv local version</td><td style="text-align:center">设置当前路径下python版本为指定版本</td></tr><tr><td style="text-align:center">pyenv shell version</td><td style="text-align:center">设置当前shell窗口使用的python版本为指定版本</td></tr></tbody></table><blockquote><p>使用pyenv切换python版本之后可以通过which python或者是python –version查看是否生效</p></blockquote><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ol><li>python版本控制器pyenv：<a href="https://my.oschina.net/songmingming/blog/226292" target="_blank" rel="noopener">https://my.oschina.net/songmingming/blog/226292</a></li><li>pyenv官方文档：<a href="https://github.com/pyenv/pyenv" target="_blank" rel="noopener">https://github.com/pyenv/pyenv</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 实用技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7安装Docker CE</title>
      <link href="/2018/04/28/CentOS-7%E5%AE%89%E8%A3%85Docker/"/>
      <url>/2018/04/28/CentOS-7%E5%AE%89%E8%A3%85Docker/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　Docker CE 支持 64 位版本 CentOS 7，并且要求内核版本不低于 3.10。 CentOS 7 满足最低内核的要求，但由于内核版本比较低，部分功能（如 overlay2 存储层驱动）无法使用，并且部分功能可能不太稳定。</p><a id="more"></a><h2 id="检查系统内核版本"><a href="#检查系统内核版本" class="headerlink" title="检查系统内核版本"></a>检查系统内核版本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure><h2 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h2><p>旧版本的 Docker 称为 docker 或者 docker-engine，使用以下命令卸载旧版本：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                docker-client \</span><br><span class="line">                docker-client-latest \</span><br><span class="line">                docker-common \</span><br><span class="line">                docker-latest \</span><br><span class="line">                docker-latest-logrotate \</span><br><span class="line">                docker-logrotate \</span><br><span class="line">                docker-selinux \</span><br><span class="line">                docker-engine-selinux \</span><br><span class="line">                docker-engine</span><br></pre></td></tr></table></figure></p><h2 id="使用-yum-安装"><a href="#使用-yum-安装" class="headerlink" title="使用 yum 安装"></a>使用 yum 安装</h2><h3 id="安装所需依赖包："><a href="#安装所需依赖包：" class="headerlink" title="安装所需依赖包："></a>安装所需依赖包：</h3><p>  <code>yum-utils</code>提供yum-config-manager实用程序，devicemapper存储驱动程序需要<code>device-mapper-persistent-data</code>和<code>lvm2</code>。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils \</span><br><span class="line">         device-mapper-persistent-data \</span><br><span class="line">         lvm2</span><br></pre></td></tr></table></figure></p><h3 id="使用国内镜像加速安装"><a href="#使用国内镜像加速安装" class="headerlink" title="使用国内镜像加速安装"></a>使用国内镜像加速安装</h3><p>  鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。执行下面的命令添加 yum 软件源：<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo https://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 官方源</span><br><span class="line"># sudo yum-config-manager --add-repo  https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></p><h3 id="安装-Docker-CE"><a href="#安装-Docker-CE" class="headerlink" title="安装 Docker CE"></a>安装 Docker CE</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum makecache fast</span><br><span class="line">sudo yum install docker-ce</span><br></pre></td></tr></table></figure><h3 id="启动-Docker-CE"><a href="#启动-Docker-CE" class="headerlink" title="启动 Docker CE"></a>启动 Docker CE</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><h2 id="测试-Docker-是否安装正确"><a href="#测试-Docker-是否安装正确" class="headerlink" title="测试 Docker 是否安装正确"></a>测试 Docker 是否安装正确</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@hugo ~]#  docker run hello-world</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Unable to find image 'hello-world:latest' locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">9bb5a5d4561a: Pull complete </span><br><span class="line">Digest: sha256:f5233545e43561214ca4891fd1157e1c3c563316ed8e237750d59bde73361e77</span><br><span class="line">Status: Downloaded newer image for hello-world:latest</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"><span class="meta"> $</span><span class="bash"> docker run -it ubuntu bash</span></span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/engine/userguide/</span><br></pre></td></tr></table></figure><h2 id="镜像加速"><a href="#镜像加速" class="headerlink" title="镜像加速"></a>镜像加速</h2><p>鉴于国内网络问题，后续拉取 Docker 镜像十分缓慢，强烈建议安装 Docker 之后配置 国内镜像加速。</p><h3 id="使用Docker提供的中国镜像"><a href="#使用Docker提供的中国镜像" class="headerlink" title="使用Docker提供的中国镜像"></a>使用Docker提供的中国镜像</h3><p>对于使用 systemd 的系统，请在 <code>/etc/docker/daemon.json</code> 中写入如下内容（如果文件不存在请新建该文件）<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [</span><br><span class="line">    <span class="string">"https://registry.docker-cn.com"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p><strong>注意：</strong>一定要保证该文件符合 json 规范，否则 Docker 将不能启动。</p></blockquote><h3 id="使用DaoCloud加速器"><a href="#使用DaoCloud加速器" class="headerlink" title="使用DaoCloud加速器"></a>使用DaoCloud加速器</h3><ul><li>除了使用以上的Docker官方提供的中国镜像加速下载镜像，还可以使用DaoCloud加速器提供的镜像加速下载镜像。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://4094c782.m.daocloud.io</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>该脚本可以将 –registry-mirror 加入到你的 Docker 配置文件 /etc/docker/daemon.json 中。适用于 Ubuntu14.04、Debian、CentOS6 、CentOS7、Fedora、Arch Linux、openSUSE Leap 42.1。</p></blockquote><h3 id="重新启动服务"><a href="#重新启动服务" class="headerlink" title="重新启动服务"></a>重新启动服务</h3><ul><li>使用以上的加速服务后重新启动docker。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure></li></ul><h3 id="检查加速器是否生效"><a href="#检查加速器是否生效" class="headerlink" title="检查加速器是否生效"></a>检查加速器是否生效</h3><p>配置加速器之后，如果拉取镜像仍然十分缓慢，请手动检查加速器配置是否生效，在命令行执行 <code>docker info</code>，如果从结果中看到了如下内容，说明配置成功。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br><span class="line"></span><br><span class="line">Registry Mirrors:</span><br><span class="line"> https://registry.docker-cn.com/</span><br></pre></td></tr></table></figure></p><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ol><li>docker官方文档：<a href="https://docs.docker.com/install/linux/docker-ce/centos/#install-docker-ce-1" target="_blank" rel="noopener">https://docs.docker.com/install/linux/docker-ce/centos/#install-docker-ce-1</a></li><li>Docker —— 从入门到实践：<a href="https://yeasy.gitbooks.io/docker_practice/content/install/centos.html" target="_blank" rel="noopener">https://yeasy.gitbooks.io/docker_practice/content/install/centos.html</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 实践检验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA 下实现 Spring Boot 中页面的热加载</title>
      <link href="/2018/04/25/idea-dev-hotswap/"/>
      <url>/2018/04/25/idea-dev-hotswap/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>　　当你写完一段代码后，要看到效果，必须点击 IDEA 的停止按钮，然后再次重启启动项目，你是否觉得这样很烦呢？启用 Spring Boot 热加载解决你的烦恼，提高开发效率！</p><a id="more"></a><h2 id="项目中添加-spring-dev-tools-依赖"><a href="#项目中添加-spring-dev-tools-依赖" class="headerlink" title="项目中添加 spring-dev-tools 依赖"></a>项目中添加 spring-dev-tools 依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 热部署模块 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这个需要为 true 热部署才有效 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="项目-pom-文件中添加-maven-插件"><a href="#项目-pom-文件中添加-maven-插件" class="headerlink" title="项目 pom 文件中添加 maven 插件"></a>项目 pom 文件中添加 maven 插件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--如果没有该项配置，devtools不会起作用，即应用不会restart --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="修改-IDEA-配置"><a href="#修改-IDEA-配置" class="headerlink" title="修改 IDEA 配置"></a>修改 IDEA 配置</h2><h3 id="设置自动构建项目"><a href="#设置自动构建项目" class="headerlink" title="设置自动构建项目"></a>设置自动构建项目</h3><p>打开 <code>Settings</code> –&gt; <code>Build-Execution-Deployment</code> –&gt; <code>Compiler</code>，将 <code>Build project automatically</code>勾上。</p><p><img src="/resources/post_images/BuildProjectAutomatically.png" title="设置自动构建项目"></p><h3 id="修改编译设置"><a href="#修改编译设置" class="headerlink" title="修改编译设置"></a>修改编译设置</h3><p>点击 <code>Help</code> –&gt; <code>Find Action</code>，或使用快捷键 <code>Ctrl+Shift+A</code>来打开 <code>Registry...</code>，将 其中的<code>compiler.automake.allow.when.app.running</code>勾上。</p><p><img src="/resources/post_images/Registry.png" title="修改编译设置"></p><h2 id="个性化热部署配置"><a href="#个性化热部署配置" class="headerlink" title="个性化热部署配置"></a>个性化热部署配置</h2><p>在项目的<code>src/main/resources/application.properties</code>中配置自定义热部署配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#热部署生效</span><br><span class="line">spring.devtools.restart.enabled=true</span><br><span class="line"></span><br><span class="line">#设置重启的目录</span><br><span class="line">spring.devtools.restart.additional-paths=src/main/java</span><br><span class="line"></span><br><span class="line">#classpath目录下的WEB-INF文件夹内容修改不重启</span><br><span class="line">spring.devtools.restart.exclude=WEB-INF/**</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 术业专攻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo使用 hexo-tag-dplayer 播放视频</title>
      <link href="/2018/04/24/user-hexo-tag-dplayer/"/>
      <url>/2018/04/24/user-hexo-tag-dplayer/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><style type="text/css">    .dplayer-video-container {        max-width: 800px;        margin: 0 auto;        margin-top: -1rem;    }</style><h2 id="使用效果"><a href="#使用效果" class="headerlink" title="使用效果"></a>使用效果</h2><p><div class="dplayer-video-container"><br>   <div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","loop":true,"video":{"url":"/resources/video/火星人来过.mp4","pic":"/resources/video/火星人来过.jpg"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script></div></p><div><h2 id="如何使用？"><a href="#如何使用？" class="headerlink" title="如何使用？"></a>如何使用？</h2><h3 id="设置样式居中"><a href="#设置样式居中" class="headerlink" title="设置样式居中"></a>设置样式居中</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    .dplayer-video-container &#123;</span></span><br><span class="line"><span class="undefined">        max-width: 800px;</span></span><br><span class="line"><span class="undefined">        margin: 0 auto;</span></span><br><span class="line"><span class="undefined">        margin-top: -1rem;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用标签"><a href="#使用标签" class="headerlink" title="使用标签"></a>使用标签</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;dplayer-video-container&quot;&gt;</span><br><span class="line">&#123;% </span><br><span class="line">    dplayer     &quot;url=/resources/video/火星人来过.mp4&quot;   &quot;pic=/resources/video/火星人来过.jpg&quot;  </span><br><span class="line">    &quot;loop=yes&quot;  &quot;theme=#FADFA3&quot;     &quot;autoplay=false&quot; </span><br><span class="line">%&#125;</span><br><span class="line">&lt;div&gt;</span><br></pre></td></tr></table></figure><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><blockquote><ol><li>hexo-tag-dplayer官方文档：<a href="https://github.com/MoePlayer/hexo-tag-dplayer" target="_blank" rel="noopener">https://github.com/MoePlayer/hexo-tag-dplayer</a></li><li>Dplayer官方文档： <a href="http://dplayer.js.org/#/zh-Hans/" target="_blank" rel="noopener">http://dplayer.js.org/#/zh-Hans/</a></li></ol></blockquote></div>]]></content>
      
      
      <categories>
          
          <category> 实践检验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> DPlayer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo使用 Dplayer 播放视频</title>
      <link href="/2018/04/23/user-dplayer/"/>
      <url>/2018/04/23/user-dplayer/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><style type="text/css">    #dplayer-video-container {        max-width: 800px;        margin: 0 auto;        margin-top: -1rem;    }    @media screen and (max-device-width: 400px) {        #dplayer {            width: 100%;        }    }</style><h2 id="使用Dplayer效果"><a href="#使用Dplayer效果" class="headerlink" title="使用Dplayer效果"></a>使用Dplayer效果</h2><p><link rel="stylesheet" href="/assets/css/DPlayer.min.css"></p><p><div id="dplayer-video-container"><br>    <div id="dplayer"></div></div></p><p><div></div></p><script src="/assets/js/DPlayer.min.js"></script><script>    const dp = new DPlayer({        container: document.getElementById('dplayer'),  <!-- 播放器容器元素 -->        autoplay: false,                                <!-- 视频自动播放 -->        theme:    '#b7daff',                                  <!-- 主题色 -->        loop: true,                                    <!-- 视频循环播放 -->        lang: 'zh-cn',                                  <!-- 播放器语言设置 -->        screenshot: false,                              <!-- 开启截图 -->        hotkey: true,                                      <!-- 开启热键 -->                                preload: 'auto',                                <!-- 开启预加载 -->        volume    : 0.7,                                    <!-- 默认音量 -->        mutex: true,                                    <!-- 互斥，阻止多个播放器同时播放 -->        video: {            url: '/resources/video/火星人来过.mp4',            pic: '/resources/video/火星人来过.jpg'        },        contextmenu: [                                 <!-- 自定义右键菜单-->             {                text: '本博客地址',                link: 'https://helloblack2017.github.io/'            },            {                text: '播放器信息',                click: (player) => {                    console.log(player);                }            }        ]    });</script><h2 id="如何使用？"><a href="#如何使用？" class="headerlink" title="如何使用？"></a>如何使用？</h2><h3 id="设置-div-容器并引入css和-js"><a href="#设置-div-容器并引入css和-js" class="headerlink" title="设置 div 容器并引入css和 js"></a>设置 div 容器并引入css和 js</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    #dplayer-video-container &#123;</span></span><br><span class="line"><span class="undefined">        max-width: 800px;</span></span><br><span class="line"><span class="undefined">        margin: 0 auto;</span></span><br><span class="line"><span class="undefined">        margin-top: -1rem;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    @media screen and (max-device-width: 400px) &#123;</span></span><br><span class="line"><span class="undefined">        #dplayer &#123;</span></span><br><span class="line"><span class="undefined">            width: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/assets/css/DPlayer.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"dplayer-video-container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"dplayer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/assets/js/DPlayer.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="设置播放视频"><a href="#设置播放视频" class="headerlink" title="设置播放视频"></a>设置播放视频</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">const</span> dp = <span class="keyword">new</span> DPlayer(&#123;</span><br><span class="line">        container: <span class="built_in">document</span>.getElementById(<span class="string">'dplayer'</span>),  &lt;!-- 播放器容器元素 --&gt;</span><br><span class="line">        autoplay: <span class="literal">false</span>,                                &lt;!-- 视频自动播放 --&gt;</span><br><span class="line">        theme:<span class="string">'#b7daff'</span>,                               &lt;!-- 主题色 --&gt;</span><br><span class="line">        loop: <span class="literal">true</span>,                                    &lt;!-- 视频循环播放 --&gt;</span><br><span class="line">        lang: <span class="string">'zh-cn'</span>,                                  &lt;!-- 播放器语言设置 --&gt;</span><br><span class="line">        screenshot: <span class="literal">false</span>,                              &lt;!-- 开启截图 --&gt;</span><br><span class="line">        hotkey: <span class="literal">true</span>,                                  &lt;!-- 开启热键 --&gt;                        </span><br><span class="line">        preload: <span class="string">'auto'</span>,                                &lt;!-- 开启预加载 --&gt;</span><br><span class="line">        volume: <span class="number">0.7</span>,                                    &lt;!-- 默认音量 --&gt;</span><br><span class="line">        mutex: <span class="literal">true</span>,                                    &lt;!-- 互斥，阻止多个播放器同时播放 --&gt;</span><br><span class="line">        video: &#123;</span><br><span class="line">            url: <span class="string">'/resources/video/火星人来过.mp4'</span>,      &lt;!-- 视频地址 --&gt;</span><br><span class="line">            pic: <span class="string">'/resources/video/火星人来过.jpg'</span>         &lt;!-- 视频封面 --&gt;</span><br><span class="line">        &#125;,</span><br><span class="line">        contextmenu: [                                 <span class="xml"><span class="comment">&lt;!-- 自定义右键菜单--&gt;</span> </span></span><br><span class="line"><span class="xml">            &#123;</span></span><br><span class="line"><span class="xml">                text: '本博客地址',</span></span><br><span class="line"><span class="xml">                link: 'https://helloblack2017.github.io/'</span></span><br><span class="line"><span class="xml">            &#125;,</span></span><br><span class="line"><span class="xml">            &#123;</span></span><br><span class="line"><span class="xml">                text: '播放器信息',</span></span><br><span class="line"><span class="xml">                click: (player) =&gt; &#123;</span></span><br><span class="line"><span class="xml">                    console.log(player);</span></span><br><span class="line"><span class="xml">                &#125;</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        ]</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><blockquote><p>🍭 DPlayer 官方文档： <a href="http://dplayer.js.org/#/zh-Hans/" target="_blank" rel="noopener">http://dplayer.js.org/#/zh-Hans/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 实践检验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> DPlayer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo使用 hexo-tag-aplayer 播放音乐</title>
      <link href="/2018/04/22/use-hexo-tag-aplayer/"/>
      <url>/2018/04/22/use-hexo-tag-aplayer/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><style>    .aplayer {        width: 50%;        margin: 0 auto;    }    #metingJs{        width: 50%;        display: block;        margin: 0 auto;    }    @media screen and (max-device-width: 400px) {        .aplayer {            width: 100%;        }        #metingJs{            width: 100%;        }    }</style><h2 id="使用效果"><a href="#使用效果" class="headerlink" title="使用效果"></a>使用效果</h2>        <div id="aplayer-AsSWwBCB" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-AsSWwBCB"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "演员",              author: "薛之谦",              url: "/resources/music/演员.mp3",              pic: "/resources/music/演员.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>        <div id="aplayer-dtIKtwwu" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"mode":"random","mutex":true,"theme":"#e6d0b2","preload":"metadata","listmaxheight":"513px","width":"50%","music":[{"title":"认真的雪","author":"薛之谦","url":"/resources/music/你还要我怎样.mp3","pic":"/resources/music/认真的雪.jpg","lrc":"/resources/music/认真的雪.lrc"},{"title":"演员","author":"薛之谦","url":"/resources/music/演员.mp3","pic":"/resources/music/演员.jpg","lrc":"/resources/music/认真的雪.lrc"}]};  options.element = document.getElementById("aplayer-dtIKtwwu");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script><h2 id="使用-hexo-tag-aplayer"><a href="#使用-hexo-tag-aplayer" class="headerlink" title="使用 hexo-tag-aplayer"></a>使用 hexo-tag-aplayer</h2><h3 id="歌曲单曲标签使用"><a href="#歌曲单曲标签使用" class="headerlink" title="歌曲单曲标签使用"></a>歌曲单曲标签使用</h3><h4 id="标签模版："><a href="#标签模版：" class="headerlink" title="标签模版："></a><strong>标签模版：</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span><br></pre></td></tr></table></figure><h4 id="使用实例："><a href="#使用实例：" class="headerlink" title="使用实例："></a>使用实例：</h4><ol><li>设置标签：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;caffeine.mp3&quot; &quot;picture.jpg&quot; &quot;narrow&quot; &quot;autoplay&quot; &quot;width:70%&quot; &quot;lrc:caffeine.txt&quot; %&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>设置居中并适应 pc 和手机端宽度</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    .aplayer &#123;</span></span><br><span class="line"><span class="undefined">        margin: 0 auto;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    @media screen and (max-device-width: 400px) &#123;</span></span><br><span class="line"><span class="undefined">        .aplayer &#123;</span></span><br><span class="line"><span class="undefined">            width: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>3. 更多标签参数设置:</strong></p><ul><li><code>title</code> <strong>:</strong> 曲目标题</li><li><code>author</code> <strong>:</strong> 曲目作者</li><li><code>url</code> <strong>:</strong> 音乐文件 URL 地址</li><li><code>picture_url</code> <strong>:</strong> (可选) 音乐对应的图片地址</li><li><code>narrow</code> <strong>:</strong>（可选）播放器袖珍风格</li><li><code>autoplay</code> <strong>:</strong> (可选) 自动播放，移动端浏览器暂时不支持此功能</li><li><code>width</code> <strong>:</strong> xxx (可选) 播放器宽度 (默认: 100%)</li><li><code>lrc</code> <strong>: </strong>xxx（可选）歌词文件 URL 地址</li></ul><h3 id="歌曲列表标签使用"><a href="#歌曲列表标签使用" class="headerlink" title="歌曲列表标签使用"></a>歌曲列表标签使用</h3><h4 id="标签模版：-1"><a href="#标签模版：-1" class="headerlink" title="标签模版："></a>标签模版：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;narrow&quot;: false,                          // （可选）播放器袖珍风格</span><br><span class="line">    &quot;autoplay&quot;: true,                         // （可选) 自动播放，移动端浏览器暂时不支持此功能</span><br><span class="line">    &quot;mode&quot;: &quot;random&quot;,                         // （可选）曲目循环类型，有 &apos;random&apos;（随机播放）, &apos;single&apos; (单曲播放), &apos;circulation&apos; (循环播放), &apos;order&apos; (列表播放)， 默认：&apos;circulation&apos;</span><br><span class="line">    &quot;showlrc&quot;: 3,                             // （可选）歌词显示配置项，可选项有：1,2,3</span><br><span class="line">    &quot;mutex&quot;: true,                            // （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</span><br><span class="line">    &quot;theme&quot;: &quot;#e6d0b2&quot;,                      // （可选）播放器风格色彩设置，默认：#b7daff</span><br><span class="line">    &quot;preload&quot;: &quot;metadata&quot;,                    // （可选）音乐文件预载入模式，可选项： &apos;none&apos; &apos;metadata&apos; &apos;auto&apos;, 默认: &apos;auto&apos;</span><br><span class="line">    &quot;listmaxheight&quot;: &quot;513px&quot;,                 // (可选) 该播放列表的最大长度</span><br><span class="line">    &quot;music&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;CoCo&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;Jeff Williams&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;caffeine.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;caffeine.jpeg&quot;,</span><br><span class="line">            &quot;lrc&quot;: &quot;caffeine.txt&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;アイロニ&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;鹿乃&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;irony.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;irony.jpg&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure><h4 id="使用示例："><a href="#使用示例：" class="headerlink" title="使用示例："></a>使用示例：</h4><ol><li>设置标签：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;narrow&quot;: false,</span><br><span class="line">    &quot;autoplay&quot;: false,</span><br><span class="line">    &quot;mode&quot;: &quot;random&quot;,</span><br><span class="line">    &quot;showlrc&quot;: 3,</span><br><span class="line">    &quot;mutex&quot;: true,</span><br><span class="line">    &quot;theme&quot;: &quot;#e6d0b2&quot;,</span><br><span class="line">    &quot;preload&quot;: &quot;metadata&quot;,</span><br><span class="line">    &quot;listmaxheight&quot;: &quot;513px&quot;,</span><br><span class="line">    &quot;width&quot;: &quot;50%&quot;,</span><br><span class="line">    &quot;music&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;认真的雪&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;薛之谦&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;/resources/music/你还要我怎样.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;/resources/music/认真的雪.jpg&quot;,</span><br><span class="line">            &quot;lrc&quot;: &quot;认真的雪.lrc&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;演员&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;薛之谦&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;/resources/music/演员.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;/resources/music//演员.jpg&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>设置居中并适应 pc 和手机端宽度</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    .aplayer &#123;</span></span><br><span class="line"><span class="undefined">        margin: 0 auto;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    @media screen and (max-device-width: 400px) &#123;</span></span><br><span class="line"><span class="undefined">        .aplayer &#123;</span></span><br><span class="line"><span class="undefined">            width: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="高级使用：MetingJS-支持"><a href="#高级使用：MetingJS-支持" class="headerlink" title="高级使用：MetingJS 支持"></a>高级使用：MetingJS 支持</h2><h3 id="1-使用"><a href="#1-使用" class="headerlink" title="1. 使用"></a>1. 使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;%</span><br><span class="line">    meting   &quot;2180172149&quot;    &quot;netease&quot;       &quot;playlist&quot;    &quot;mutex:true&quot;</span><br><span class="line">    &quot;listmaxheight:340px&quot;    &quot;preload:auto&quot;  &quot;theme:#ad7a86</span><br><span class="line">%&#125;</span><br></pre></td></tr></table></figure><h3 id="2-设置"><a href="#2-设置" class="headerlink" title="2. 设置"></a>2. 设置</h3><table><thead><tr><th><strong>选项</strong></th><th><strong>默认值</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>id</td><td><strong>必须值</strong></td><td>歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td></tr><tr><td>server</td><td><strong>必须值</strong></td><td>音乐平台: netease, tencent, kugou, xiami, baidu</td></tr><tr><td>type</td><td><strong>必须值</strong></td><td>列表播放模式, circulation, random, single, order</td></tr><tr><td>autoplay</td><td>true</td><td>自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td>mutex</td><td>true</td><td>该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td></tr><tr><td>listmaxheight</td><td>340px</td><td>播放列表的最大长度</td></tr><tr><td>preload</td><td>auto</td><td>音乐文件预载入模式，可选项： none, metadata, auto</td></tr><tr><td>theme</td><td>#ad7a86</td><td><div>播放器风格色彩设置</div></td></tr></tbody></table><h3 id="3-使用效果"><a href="#3-使用效果" class="headerlink" title="3. 使用效果"></a>3. 使用效果</h3><p><a href="/404.html" target="_blank"> <img id="metingJs" src="/resources/post_images/metingJs.png" title="使用MetingJS效果"> </a></p><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><blockquote><p>官方使用手册：<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md" target="_blank" rel="noopener">https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 实践检验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Aplayer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 使用 APlayer 播放音乐</title>
      <link href="/2018/04/22/use-aplayer/"/>
      <url>/2018/04/22/use-aplayer/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><style>    #aplayer {        width: 50%;        margin: 0 auto;    }    #player {        width: 50%;        margin: 0 auto;    }    @media screen and (max-device-width: 400px) {        #aplayer {            width: 100%;        }    }     @media screen and (max-device-width: 400px) {        #player {            width: 100%;        }    }</style><h2 id="使用-Aplayer-效果"><a href="#使用-Aplayer-效果" class="headerlink" title="使用 Aplayer 效果"></a>使用 Aplayer 效果</h2><p><link rel="stylesheet" href="/assets/css/APlayer.min.css"></p><div id="player"></div><br><div id="aplayer"></div><script src="/assets/js/APlayer.min.js"></script><script>const app = new APlayer({    container: document.getElementById('player'),    audio: [        {            name: '你还要我怎样',            artist: '薛之谦',            url: '/resources/music/你还要我怎样.mp3',            cover: '/resources/music/你还要我怎样.jpg',            theme: '#46718b'        }    ]});const application = new APlayer({    container: document.getElementById('aplayer'),    mini: false,    autoplay: false,    theme: '#FADFA3',    loop: 'all',    order: 'random',    preload: 'auto',    volume: 0.7,    mutex: true,    listFolded: false,    listMaxHeight: '150px',    lrcType: 0,    audio: [        {            name: '丑八怪',            artist: '薛之谦',            url: '/resources/music/丑八怪.mp3',            cover: '/resources/music/丑八怪.jpg',            theme: '#46718b'        },        {            name: '认真的雪',            artist: '薛之谦',            url: '/resources/music/认真的雪.mp3',            cover: '/resources/music/认真的雪.jpg',            theme: '#46718b'        },        {            name: '演员',            artist: '薛之谦',            url: '/resources/music/演员.mp3',            cover: '/resources/music/演员.jpg',            theme: '#46718b'        },        {            name: '你还要我怎样',            artist: '薛之谦',            url: '/resources/music/你还要我怎样.mp3',            cover: '/resources/music/你还要我怎样.jpg',            theme: '#46718b'        }    ]});</script><h2 id="如何使用？"><a href="#如何使用？" class="headerlink" title="如何使用？"></a>如何使用？</h2><h3 id="设置-div-容器并引css和-js"><a href="#设置-div-容器并引css和-js" class="headerlink" title="设置 div 容器并引css和 js"></a>设置 div 容器并引css和 js</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    #aplayer &#123;</span></span><br><span class="line"><span class="undefined">        width: 50%;</span></span><br><span class="line"><span class="undefined">        margin: 0 auto;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    @media screen and (max-device-width: 400px) &#123;</span></span><br><span class="line"><span class="undefined">        #aplayer &#123;</span></span><br><span class="line"><span class="undefined">            width: 100%;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/assets/css/APlayer.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"aplayer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/assets/js/APlayer.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="设置单曲"><a href="#设置单曲" class="headerlink" title="设置单曲"></a>设置单曲</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> APlayer(&#123;</span><br><span class="line">    container: <span class="built_in">document</span>.getElementById(<span class="string">'aplayer'</span>),</span><br><span class="line">    audio: [&#123;</span><br><span class="line">        name: <span class="string">'丑八怪'</span>,                          &lt;!-- 歌曲名称--&gt;</span><br><span class="line">        artist: <span class="string">'薛之谦'</span>,                        &lt;!-- 歌曲作者--&gt;</span><br><span class="line">        url: <span class="string">'/resources/music/丑八怪.mp3'</span>,      &lt;!-- 歌曲路径--&gt;</span><br><span class="line">        cover: <span class="string">'/resources/music/认真的雪.jpg'</span>,  &lt;!-- 歌曲封面图片--&gt;</span><br><span class="line">        theme: <span class="string">'#46718b'</span>                        &lt;!-- 选中歌曲的主题--&gt;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="设置歌曲列表"><a href="#设置歌曲列表" class="headerlink" title="设置歌曲列表"></a>设置歌曲列表</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">const</span> ap = <span class="keyword">new</span> APlayer(&#123;</span><br><span class="line">    container: <span class="built_in">document</span>.getElementById(<span class="string">'aplayer'</span>),</span><br><span class="line">    mini: <span class="literal">false</span>,            &lt;!-- 不启用迷你播放模式 --&gt;</span><br><span class="line">    autoplay: <span class="literal">false</span>,        &lt;!-- 音频不自动播放 --&gt;</span><br><span class="line">    theme: <span class="string">'#FADFA3'</span>,       &lt;!-- 主题色 --&gt;</span><br><span class="line">    loop: <span class="string">'all'</span>,            &lt;!-- 音频循环播放, 可选值: <span class="string">'all'</span>, <span class="string">'one'</span>, <span class="string">'none'</span>--&gt;</span><br><span class="line">    order: <span class="string">'random'</span>,        &lt;!-- 音频循环顺序, 可选值: <span class="string">'list'</span>, <span class="string">'random'</span>--&gt;</span><br><span class="line">    preload: <span class="string">'auto'</span>,        &lt;!-- 预加载，可选值: <span class="string">'none'</span>, <span class="string">'metadata'</span>, <span class="string">'auto'</span>--&gt;</span><br><span class="line">    volume: <span class="number">0.7</span>,            &lt;!-- 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效--&gt;</span><br><span class="line">    mutex: <span class="literal">true</span>,            &lt;!-- 互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器 --&gt;</span><br><span class="line">    listFolded: <span class="literal">false</span>,      &lt;!-- 列表默认折叠， <span class="literal">false</span>表示不折叠--&gt;</span><br><span class="line">    listMaxHeight: <span class="string">'120px'</span>, &lt;!-- 列表最大高度，超出此高度将有滚动条--&gt;</span><br><span class="line">    lrcType: <span class="number">0</span>,             &lt;!-- 歌词类型，<span class="number">0</span>表示不显示歌词--&gt;</span><br><span class="line">    audio: [</span><br><span class="line">        &#123;</span><br><span class="line">            name: <span class="string">'丑八怪'</span>,                         &lt;!-- 歌曲名称--&gt;</span><br><span class="line">            artist: <span class="string">'薛之谦'</span>,                       &lt;!-- 歌曲作者--&gt;</span><br><span class="line">            url: <span class="string">'/resources/music/丑八怪.mp3'</span>,     &lt;!-- 歌曲路径--&gt;</span><br><span class="line">            cover: <span class="string">'/resources/music/认真的雪.jpg'</span>, &lt;!-- 歌曲封面图片--&gt;</span><br><span class="line">            theme: <span class="string">'#46718b'</span>                       &lt;!-- 选中歌曲的主题--&gt;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            name: <span class="string">'丑八怪'</span>,</span><br><span class="line">            artist: <span class="string">'薛之谦'</span>,</span><br><span class="line">            url: <span class="string">'/resources/music/丑八怪.mp3'</span>,</span><br><span class="line">            cover: <span class="string">'/resources/music/认真的雪.jpg'</span>,</span><br><span class="line">            theme: <span class="string">'#46718b'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            name: <span class="string">'丑八怪'</span>,</span><br><span class="line">            artist: <span class="string">'薛之谦'</span>,</span><br><span class="line">            url: <span class="string">'/resources/music/丑八怪.mp3'</span>,</span><br><span class="line">            cover: <span class="string">'/resources/music/认真的雪.jpg'</span>,</span><br><span class="line">            theme: <span class="string">'#46718b'</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><blockquote><p>🍭 APlayer 官方文档： <a href="https://aplayer.js.org/#/zh-Hans/" target="_blank" rel="noopener">https://aplayer.js.org/#/zh-Hans/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 实践检验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Aplayer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo日常使用技巧</title>
      <link href="/2018/04/17/common-hexo-commands/"/>
      <url>/2018/04/17/common-hexo-commands/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><style>    .article-entry h2 {        border-bottom: none;    }</style><h2 id="hexo命令"><a href="#hexo命令" class="headerlink" title="hexo命令"></a>hexo命令</h2><h3 id="hexo-s"><a href="#hexo-s" class="headerlink" title="hexo s"></a>hexo s</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>启动本地服务器，用于预览主题。默认地址： <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><ul><li><code>hexo s</code> 是 <code>hexo server</code> 的缩写，命令效果一致；</li><li>预览的同时可以修改文章内容或主题代码，保存后刷新页面即可；</li><li>对 Hexo 根目录 <code>_config.yml</code> 的修改，需要重启本地服务器后才能预览效果。</li></ul><h3 id="hexo-n"><a href="#hexo-n" class="headerlink" title="hexo n"></a>hexo n</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;学习笔记  六&quot;</span><br></pre></td></tr></table></figure><p>新建一篇标题为 <code>学习笔记  六</code> 的文章，因为标题里有空格，所以加上了引号。</p><ul><li>文章标题可以在对应 md 文件里改，新建时标题可以写的简单些；</li><li><code>hexo n</code> 是 <code>hexo new</code> 的缩写，命令效果一致。</li></ul><h3 id="hexo-d"><a href="#hexo-d" class="headerlink" title="hexo d"></a>hexo d</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>自动生成网站静态文件，并部署到设定的仓库。</p><ul><li><code>hexo d</code> 是 <code>hexo deploy</code> 的缩写，命令效果一致。</li></ul><h3 id="hexo-clean"><a href="#hexo-clean" class="headerlink" title="hexo clean"></a>hexo clean</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>清除缓存文件 <code>db.json</code> 和已生成的静态文件 <code>public</code>。</p><ul><li>网站显示异常时可以执行这条命令试试。</li></ul><h3 id="hexo-g"><a href="#hexo-g" class="headerlink" title="hexo g"></a>hexo g</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>生成网站静态文件到默认设置的 <code>public</code> 文件夹。</p><ul><li>便于查看网站生成的静态文件或者手动部署网站；</li><li>如果使用自动部署，不需要先执行该命令；</li><li><code>hexo g</code> 是 <code>hexo generate</code> 的缩写，命令效果一致。</li></ul><h3 id="hexo-n-page"><a href="#hexo-n-page" class="headerlink" title="hexo n page"></a>hexo n page</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n page aboutme</span><br></pre></td></tr></table></figure><p>新建一个标题为 <code>aboutme</code> 的页面，默认链接地址为 <code>主页地址/aboutme/</code></p><ul><li>标题可以为中文，但一般习惯用英文；</li><li>页面标题和文章一样可以随意修改；</li><li>页面不会出现在首页文章列表和归档中，也不支持设置分类和标签。</li></ul><h3 id="常用组合"><a href="#常用组合" class="headerlink" title="常用组合"></a>常用组合</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>可以用输入法等软件为这些命令设置快捷键，方便调用。</p><h3 id="相关说明"><a href="#相关说明" class="headerlink" title="相关说明"></a>相关说明</h3><ul><li>以上命令使用基于 Hexo 3.7.0 版本；</li><li>需要删掉用命令新建的文章或页面时，只需要进入 Hexo 根目录下的 <code>source</code> 文件夹，删除对应文件或文件夹即可；</li><li>更多命令用法请查询 <a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">官方文档</a>。</li></ul><h2 id="日常操作技巧"><a href="#日常操作技巧" class="headerlink" title="日常操作技巧"></a>日常操作技巧</h2><h3 id="忽略渲染指定文件-夹"><a href="#忽略渲染指定文件-夹" class="headerlink" title="忽略渲染指定文件(夹)"></a>忽略渲染指定文件(夹)</h3><p><strong>使用_config.yml下的skip_render参数</strong>。</p><p>skip_render使用了minimatch，开始匹配的位置是基于你的source_dir的，一般来说，是你的source文件夹下。下面我分别列举几种常见的情况进行说明：</p><ol><li>单个文件夹下全部文件：<code>skip_render: test/*</code></li><li>单个文件夹下指定类型文件：<code>skip_render: test/*.md</code></li><li>单个文件夹下全部文件以及子目录:<code>skip_render: test/**</code></li><li>多个文件夹以及各种复杂情况：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"><span class="bullet"> -</span> <span class="string">`test1/*.html`</span></span><br><span class="line"><span class="bullet"> -</span> <span class="string">`test2/**`</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>请注意yml中的文件格式，输入单个数据请注意空格，输入数组请进行缩进</p></blockquote><h3 id="文章头注释介绍"><a href="#文章头注释介绍" class="headerlink" title="文章头注释介绍"></a>文章头注释介绍</h3><ul><li><code>toc: true</code>                      显示目录</li><li><code>toc_list_number: true</code>          显示目录数字</li><li><code>comments: false</code>                不显示评论</li><li><code>original: true</code>                 显示最文章下方的原创</li><li><code>permalink: ssh-login-linux</code>     自定义文章链接地址</li><li><code>fancybox: true</code>                 图片点击单独显示</li></ul>]]></content>
      
      
      <categories>
          
          <category> 借鉴学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> command </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo页面自动刷新与移动端调试</title>
      <link href="/2018/04/16/hexo-browsersync/"/>
      <url>/2018/04/16/hexo-browsersync/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><style type="text/css">    .article-entry img:first-child {          display: block;    }</style><p></p><h2 id="intro">前言</h2>经常本地调试 Hexo 主题, 如果有工具能监视文件更改幷自动刷新页面，那一定能提高不少效率，<a href="http://www.browsersync.cn/" target="_blank" rel="noopener">Browsersync</a> 就是这样一款浏览器同步测试工具。<p></p><a id="more"></a><h2 id="自动刷新"><a href="#自动刷新" class="headerlink" title="自动刷新"></a>自动刷新</h2><h3 id="安装-Browsersync"><a href="#安装-Browsersync" class="headerlink" title="安装 Browsersync"></a>安装 Browsersync</h3><ul><li>Browsersync 依赖包较多，Mac 和 Linux 中建议加上 <code>sudo</code> 避免安装时因权限不足而报错</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g browser-sync</span><br></pre></td></tr></table></figure><ul><li>安装结束后执行下面命令，能显示对应版本则表示安装成功</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">browser-sync --version</span><br></pre></td></tr></table></figure><blockquote><p>如果显示无此命令，请尝试使用 <a href="http://npm.taobao.org/" target="_blank" rel="noopener">淘宝 NPM 镜像</a>，或者全局科学上网后再安装</p></blockquote><h3 id="安装-Hexo-端插件"><a href="#安装-Hexo-端插件" class="headerlink" title="安装 Hexo 端插件"></a>安装 Hexo 端插件</h3><ul><li>要把 Browsersync 应用到 Hexo 上，还需要安装一个小插件 <a href="https://github.com/hexojs/hexo-browsersync" target="_blank" rel="noopener">hexo-browsersync</a> 。命令行中进入 Hexo 根目录，执行以下命令:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-browsersync --save</span><br></pre></td></tr></table></figure><ul><li>安装后像往常一样执行 <code>hexo s</code> 开启本地服务器，当相关文件被修改或者保存时，关联的浏览器页面会自带刷新</li></ul><h3 id="一些不足"><a href="#一些不足" class="headerlink" title="一些不足"></a>一些不足</h3><ul><li>变动后将重新加载整个页面，不能局部刷新；</li><li>使用 Hexo 自带服务器时，无法在移动端调试；</li><li>偶尔会报错，需要多保存几次；</li></ul><h2 id="移动端调试"><a href="#移动端调试" class="headerlink" title="移动端调试"></a>移动端调试</h2><p>如果只是为了自动刷新页面，或许使用 LiveReload 就够了。Browsersync 真正强大之处在于其多设备调试功能，局域网设备访问同一网址，页面同步变动。</p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><ul><li>要在移动端调试，需要先生成 Hexo 站点的静态文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><h3 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h3><ul><li>命令行进入静态文件所在的文件夹，默认为 Hexo 根目录下的 <code>public</code>，然后执行以下命令：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">browser-sync start --server --files <span class="string">"css/*.css, *.html"</span></span><br></pre></td></tr></table></figure><ul><li>输入完毕按回车，会自动打开网站首页</li><li>更多命令行用法请参考 <a href="http://www.browsersync.cn/docs/command-line/" target="_blank" rel="noopener">官方文档</a></li></ul><h3 id="局域网访问"><a href="#局域网访问" class="headerlink" title="局域网访问"></a>局域网访问</h3><ul><li>回到命令行窗口，External 那行的 IP 地址就是局域网地址，打开你的手机平板访问即可，各种操作和文件修改都会同步变动，调试极为便利</li></ul><p><img src="/resources/post_images/browsersync.gif" align="center" width="95%" title="browsersync-2"></p><blockquote><p>此种方式不是直接修改主题源文件，所以平时一般使用 Hexo 本地服务修改样式，有需要时再生成静态文件在移动端测试页面效果</p></blockquote><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ol><li>Browsersync: <a href="http://www.browsersync.cn/" target="_blank" rel="noopener">http://www.browsersync.cn/</a></li><li>hexo-browsersync: <a href="https://github.com/hexojs/hexo-browsersync" target="_blank" rel="noopener">https://github.com/hexojs/hexo-browsersync</a></li><li>淘宝 NPM 镜像: <a href="http://npm.taobao.org/" target="_blank" rel="noopener">http://npm.taobao.org/</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 借鉴学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Browsersync </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo建立谷歌站点地图</title>
      <link href="/2018/04/10/hexo-generate-google-sitemap/"/>
      <url>/2018/04/10/hexo-generate-google-sitemap/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><style type="text/css">    .article-entry img:first-child {          display: block;    }</style><h2 id="1-什么是站点地图"><a href="#1-什么是站点地图" class="headerlink" title="1. 什么是站点地图"></a>1. 什么是站点地图</h2><p>　　站点地图是一种文件，您可以通过该文件列出您网站上的网页，从而将您网站内容的组织架构告知Google和其他搜索引擎。Googlebot等搜索引擎网页抓取工具会读取此文件，以便更加智能地抓取您的网站。</p><a id="more"></a><p><img src="/resources/post_images/google.png" title="Google SiteMap"></p><h2 id="2-使用npm安装谷歌站点地图插件"><a href="#2-使用npm安装谷歌站点地图插件" class="headerlink" title="2. 使用npm安装谷歌站点地图插件"></a>2. 使用npm安装谷歌站点地图插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p><img src="/resources/post_images/npm.png" title="Google SiteMap" width="90%"></p><h2 id="3-开始生成站点地图文件"><a href="#3-开始生成站点地图文件" class="headerlink" title="3. 开始生成站点地图文件"></a>3. 开始生成站点地图文件</h2><ol><li>安装好插件后，插件会在每次<code>hexo g</code> 命令将 markdown 文件转化为 html 文件时执行时，在存放 html 文件根目录下，即 <code>[hexo install location]/public</code> 下生成一个 <code>sitemap.xml</code>文件。</li></ol><p><img src="/resources/post_images/sitemap.png" title="sitemap.xml" width="800px"></p><ol start="2"><li>紧接着在执行 <code>hexo d</code> 将站点地图文件部署到 github 仓库上之后，就完成了网站站点地图文件的生成。</li></ol><h2 id="4-在谷歌站长控制台添加地图url"><a href="#4-在谷歌站长控制台添加地图url" class="headerlink" title="4. 在谷歌站长控制台添加地图url"></a>4. 在谷歌站长控制台添加地图url</h2><p>打开<a href="https://search.google.com/search-console" target="_blank" rel="noopener">谷歌站长控制台</a>, 点击<code>抓取 ——&gt; 站点地图 ——&gt; 添加/删除站点地图</code>， 在其中填入<code>sitemap.xml</code>网站站点地图url就完成，等待差不多一天，然后在谷歌搜索中搜索<code>site helloblack2017.github.io</code>,查询到自己网站的页面就表明谷歌搜索已在抓取你的页面，站点地图生成成功。</p><h3 id="4-1-新版谷歌站长控制台"><a href="#4-1-新版谷歌站长控制台" class="headerlink" title="4.1 新版谷歌站长控制台"></a>4.1 新版谷歌站长控制台</h3><p><img src="/resources/post_images/NewSearchConsole.png" title="NewSearchConsole" width="100%"></p><h3 id="4-2-旧版谷歌站长控制台"><a href="#4-2-旧版谷歌站长控制台" class="headerlink" title="4.2 旧版谷歌站长控制台"></a>4.2 旧版谷歌站长控制台</h3><p><img src="/resources/post_images/SearchConsole.png" title="SearchConsole" width="100%"></p>]]></content>
      
      
      <categories>
          
          <category> 实践检验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Slf4j集成Log4j2</title>
      <link href="/2018/03/02/slf4-integrate-log42/"/>
      <url>/2018/03/02/slf4-integrate-log42/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-添加slf4j和log4j2的依赖"><a href="#1-添加slf4j和log4j2的依赖" class="headerlink" title="1. 添加slf4j和log4j2的依赖"></a>1. 添加slf4j和log4j2的依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- slf4j + log4j2 begin --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- slf4j核心包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jcl-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--用于与slf4j保持桥接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-slf4j-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 桥接：告诉commons logging使用Log4j2 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-jcl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- log4j2 核心包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--web工程需要包含log4j-web，非web工程不需要, 感觉可有可无--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--需要使用log4j2的AsyncLogger需要包含disruptor--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lmax<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>disruptor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- log4j end--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-web-xml中设置log4j2的监听器和过滤器"><a href="#2-web-xml中设置log4j2的监听器和过滤器" class="headerlink" title="2. web.xml中设置log4j2的监听器和过滤器"></a>2. web.xml中设置log4j2的监听器和过滤器</h2><p><strong>注意：servlet3.0及以上版本不需要该步操作</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--对于log4j2，Servlet2.5以前的版本需要--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.apache.logging.log4j.web.Log4jServletContextListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>log4jServletFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.logging.log4j.web.Log4jServletFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>log4jServletFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>REQUEST<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>FORWARD<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>INCLUDE<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></p><blockquote><p>注意：log4j2不指定位置的情况下默认在src/main/resources下查找。</p></blockquote><p><strong>如果需要自定义位置，需要在上面的web.xml中添加以下代码</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jConfiguration<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/WEB-INF/classes/log4j2.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 术业专攻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> log4j </tag>
            
            <tag> Slf4j </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>log4j2基础讲解</title>
      <link href="/2018/03/02/log4j-base-knowledge/"/>
      <url>/2018/03/02/log4j-base-knowledge/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-配置文件加载顺序"><a href="#1-配置文件加载顺序" class="headerlink" title="1. 配置文件加载顺序"></a>1. 配置文件加载顺序</h2><h3 id="log4j会按照以下顺序寻找classpath的配置文件："><a href="#log4j会按照以下顺序寻找classpath的配置文件：" class="headerlink" title="log4j会按照以下顺序寻找classpath的配置文件："></a>log4j会按照以下顺序寻找classpath的配置文件：</h3><ol><li>log4j2-test.properties</li><li>log4j2-test.yaml or log4j2-test.yml </li><li>log4j2-test.json or log4j2-test.jsn</li><li>log4j2-test.xml </li><li>log4j2.properties</li><li>log4j2.yaml or log4j2.yml</li><li>log4j2.json or log4j2.jsn</li><li>log4j2.xml</li></ol><h2 id="2-配置文件节点解析"><a href="#2-配置文件节点解析" class="headerlink" title="2. 配置文件节点解析"></a>2. 配置文件节点解析</h2><h3 id="2-1-根节点Configuration"><a href="#2-1-根节点Configuration" class="headerlink" title="2.1 根节点Configuration"></a>2.1 根节点Configuration</h3><p><strong> 根节点Configuration有两个属性: <code>status</code>和<code>monitorinterval</code></strong></p><ul><li><code>status</code>用来指定log4j本身的打印日志的级别.</li><li><code>monitorinterval</code>用于指定log4j自动重新配置的监测间隔时间，单位是s,最小是5s.</li></ul><h3 id="2-2-子节点-Appenders"><a href="#2-2-子节点-Appenders" class="headerlink" title="2.2 子节点 Appenders"></a>2.2 子节点 Appenders</h3><p> <strong>Appenders子节点，常见的有三种子节点: Console、RollingFile、File</strong></p><h4 id="2-2-1-Console节点用来定义输出到控制台的Appender"><a href="#2-2-1-Console节点用来定义输出到控制台的Appender" class="headerlink" title="2.2.1. Console节点用来定义输出到控制台的Appender."></a>2.2.1. Console节点用来定义输出到控制台的Appender.</h4><ul><li><strong>属性</strong><ul><li>name: 指定Appender的名字.</li><li>target: SYSTEM_OUT 或 SYSTEM_ERR,一般只设置默认:SYSTEM_OUT.</li></ul></li><li><strong>子节点</strong><ul><li>PatternLayout子节点: 输出格式，不设置默认为:%m%n.</li></ul></li></ul><h4 id="2-2-2-File节点用来定义输出到指定位置的文件的Appender"><a href="#2-2-2-File节点用来定义输出到指定位置的文件的Appender" class="headerlink" title="2.2.2. File节点用来定义输出到指定位置的文件的Appender."></a>2.2.2. File节点用来定义输出到指定位置的文件的Appender.</h4><ul><li><strong>属性</strong><ul><li><code>name</code>:指定Appender的名字.</li><li><code>fileName</code>:指定输出日志的目的文件带全路径的文件名.</li></ul></li><li><strong>子节点</strong><ul><li><code>PatternLayout</code>:输出格式，不设置默认为:%m%n.</li></ul></li></ul><h4 id="2-2-3-RollingFile节点用来定义超过指定大小自动删除旧的创建新的的Appender"><a href="#2-2-3-RollingFile节点用来定义超过指定大小自动删除旧的创建新的的Appender" class="headerlink" title="2.2.3. RollingFile节点用来定义超过指定大小自动删除旧的创建新的的Appender."></a>2.2.3. RollingFile节点用来定义超过指定大小自动删除旧的创建新的的Appender.</h4><ul><li><strong>属性</strong><ul><li><code>name</code>:指定Appender的名字.</li><li><code>fileName</code>:指定输出日志的目的文件带全路径的文件名.</li><li>f<code>ilePattern</code>:指定新建日志文件的名称格式.</li></ul></li><li><strong>子节点</strong><ul><li><code>PatternLayout</code>:输出格式，不设置默认为:%m%n.</li><li><code>Policies</code>:指定滚动日志的策略，就是什么时候进行新建日志文件输出日志.<ul><li><code>TimeBasedTriggeringPolicy</code>: Policies子节点，基于时间的滚动策略，interval属性用来指定多久滚动一次，默认是1hour。modulate=true用来调整时间：比如现在是早上3am，interval是4，那么第一次滚动是在4am，接着是8am，12am…而不是7am.</li><li><code>SizeBasedTriggeringPolicy</code>:  Policies子节点，基于指定文件大小的滚动策略，size属性用来定义每个日志文件的大小.</li></ul></li><li><code>DefaultRolloverStrategy</code>:用来指定同一个文件夹下最多有几个日志文件时开始删除最旧的，创建新的(通过max属性)。</li></ul></li></ul><h3 id="2-3-Loggers节点，常见的有两种-Root和Logger"><a href="#2-3-Loggers节点，常见的有两种-Root和Logger" class="headerlink" title="2.3 Loggers节点，常见的有两种:Root和Logger."></a>2.3 Loggers节点，常见的有两种:Root和Logger.</h3><h4 id="2-3-1-Root节点"><a href="#2-3-1-Root节点" class="headerlink" title="2.3.1. Root节点"></a>2.3.1. Root节点</h4><ul><li>Root节点用来指定项目的根日志，如果没有单独指定Logger，那么就会默认使用该Root日志输出<ul><li><strong>属性</strong><ul><li>level:日志输出级别，共有8个级别，详情见2.4.</li></ul></li><li><strong>子节点</strong><ul><li>AppenderRef：Root的子节点，用来指定该日志输出到哪个Appender.</li></ul></li></ul></li></ul><h4 id="2-3-2-Logger节点"><a href="#2-3-2-Logger节点" class="headerlink" title="2.3.2. Logger节点"></a>2.3.2. Logger节点</h4><ul><li>Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。<ul><li><strong>属性</strong><ul><li>level:日志输出级别，共有8个级别，详情见2.4：</li><li>name:用来指定该Logger所适用的类或者类所在的包全路径,继承自Root节点.</li></ul></li><li><strong>子节点</strong><ul><li>AppenderRef：用来指定该日志输出到哪个Appender,如果没有指定，就会默认继承自Root.如果指定了，那么会在指定的这个Appender和Root的Appender中都会输出，此时我们可以设置Logger的additivity=”false”只在自定义的Appender中进行输出。</li></ul></li></ul></li></ul><h3 id="2-4-日志level"><a href="#2-4-日志level" class="headerlink" title="2.4 日志level"></a>2.4 日志level</h3><ul><li>共有8个级别，按照<strong>从低到高</strong>为：<blockquote><p><strong>All &lt; Trace &lt; Debug &lt; Info &lt; Warn &lt; Error &lt; Fatal &lt; OFF</strong>.</p></blockquote></li></ul><ol><li>All:最低等级的，用于打开所有日志记录.</li><li>Trace:是追踪，就是程序推进以下，你就可以写个trace输出，所以trace应该会特别多，不过没关系，我们可以设置最低日志级别不让他输出.</li><li>Debug:指出细粒度信息事件对调试应用程序是非常有帮助的.</li><li>Info:消息在粗粒度级别上突出强调应用程序的运行过程.</li><li>Warn:输出警告及warn以下级别的日志.</li><li>Error:输出错误信息日志.</li><li>Fatal:输出每个严重的错误事件将会导致应用程序的退出的日志.</li><li>OFF:最高等级的，用于关闭所有日志记录.</li></ol><blockquote><p>注意；程序会打印高于或等于所设置级别的日志，设置的日志等级越高，打印出来的日志就越少。</p></blockquote><h2 id="3-比较完整的log4j2-xml配置模板"><a href="#3-比较完整的log4j2-xml配置模板" class="headerlink" title="3. 比较完整的log4j2.xml配置模板"></a>3. 比较完整的log4j2.xml配置模板</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--日志级别以及优先级排序: OFF &gt; FATAL &gt; ERROR &gt; WARN &gt; INFO &gt; DEBUG &gt; TRACE &gt; ALL --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">status</span>=<span class="string">"OFF"</span> <span class="attr">monitorInterval</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--先定义所有的appender--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appenders</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--这个输出控制台的配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">"Console"</span> <span class="attr">target</span>=<span class="string">"SYSTEM_OUT"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--输出日志的格式--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"%d&#123;HH:mm:ss.SSS&#125; [%-5level] [%t] - %l - %m%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">File</span> <span class="attr">name</span>=<span class="string">"log"</span> <span class="attr">fileName</span>=<span class="string">"logs/test.log"</span> <span class="attr">append</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"[%d&#123;HH:mm:ss.SSS&#125;] [%-5level] [%t] - %l - %m%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">"RollingFileInfo"</span> <span class="attr">fileName</span>=<span class="string">"logs/info.log"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">filePattern</span>=<span class="string">"logs/$$&#123;date:yyyy-MM&#125;/info-%d&#123;yyyy-MM-dd&#125;-%i.log"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"info"</span> <span class="attr">onMatch</span>=<span class="string">"ACCEPT"</span> <span class="attr">onMismatch</span>=<span class="string">"DENY"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] [%t] - %l - %m%n"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">"100 MB"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">"RollingFileWarn"</span> <span class="attr">fileName</span>=<span class="string">"logs/warn.log"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">filePattern</span>=<span class="string">"logs/$$&#123;date:yyyy-MM&#125;/warn-%d&#123;yyyy-MM-dd&#125;-%i.log"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"warn"</span> <span class="attr">onMatch</span>=<span class="string">"ACCEPT"</span> <span class="attr">onMismatch</span>=<span class="string">"DENY"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"[%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;] [%-5level] [%t] - %l - %m%n"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">"100 MB"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DefaultRolloverStrategy</span> <span class="attr">max</span>=<span class="string">"20"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">"RollingFileError"</span> <span class="attr">fileName</span>=<span class="string">"logs/error.log"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">filePattern</span>=<span class="string">"logs/$$&#123;date:yyyy-MM&#125;/error-%d&#123;yyyy-MM-dd&#125;-%i.log"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">"error"</span> <span class="attr">onMatch</span>=<span class="string">"ACCEPT"</span> <span class="attr">onMismatch</span>=<span class="string">"DENY"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">"[%d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125;] [%-5level] [%t] - %l - %m%n"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">"100 MB"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appenders</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--然后定义logger，只有定义了logger并引入的appender，appender才会生效--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">loggers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--过滤掉spring和mybatis的一些无用的DEBUG信息--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.springframework"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>&gt;</span><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.mybatis"</span> <span class="attr">level</span>=<span class="string">"INFO"</span>&gt;</span><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.bin.controller"</span> <span class="attr">level</span>=<span class="string">"INFO"</span> <span class="attr">includeLocation</span>=<span class="string">"true"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"log"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"Console"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"INFO"</span> <span class="attr">includeLocation</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"Console"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"log"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"RollingFileInfo"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"RollingFileWarn"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"RollingFileError"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>　　　　　　　</p>]]></content>
      
      
      <categories>
          
          <category> 术业专攻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> log4j </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oracle更改表结构</title>
      <link href="/2018/02/20/oracle-modify-table/"/>
      <url>/2018/02/20/oracle-modify-table/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-编辑表的字段"><a href="#1-编辑表的字段" class="headerlink" title="1. 编辑表的字段"></a>1. 编辑表的字段</h2><ul><li>修改一个列的数据类型(一般限于修改长度，修改为一个不同类型时有诸多限制):<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">MODIFY</span>(列名 数据类型);</span><br><span class="line"></span><br><span class="line">eg:  <span class="keyword">alter</span> <span class="keyword">table</span> skate_test <span class="keyword">modify</span> (author <span class="built_in">number</span>(<span class="number">10</span>,<span class="number">0</span>))</span><br><span class="line">eg:  <span class="keyword">alter</span> <span class="keyword">table</span> skate_test <span class="keyword">modify</span> (author varchar2(<span class="number">10</span>) )</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>注意：</p><ol><li>在修改列的长度时候,只能编辑比现有字段实际存的长度还要大,否则提示下面的错误:  ORA-01441: 无法减小列长度, 因为一些值过大。</li><li>在修改列的数据类型的时候,所修改的列必须为空,否则提示下面的错误:  ORA-01439: 要更改数据类型, 则要修改的列必须为空。</li></ol></blockquote><h2 id="2-增加列"><a href="#2-增加列" class="headerlink" title="2. 增加列"></a>2. 增加列</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span>(列名 数据类型, 列明 数据类型 ...);</span><br><span class="line"></span><br><span class="line">eg： <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> skate_test <span class="keyword">ADD</span>(author <span class="built_in">NUMBER</span>(<span class="number">38</span>,<span class="number">0</span>) <span class="keyword">not</span> <span class="literal">null</span>);</span><br></pre></td></tr></table></figure><h2 id="3-列改名"><a href="#3-列改名" class="headerlink" title="3. 列改名"></a>3. 列改名</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">RENAME</span> <span class="keyword">COLUMN</span> 当前列名 <span class="keyword">TO</span> 新列名;</span><br><span class="line"></span><br><span class="line">eg：<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> skate_test <span class="keyword">RENAME</span> <span class="keyword">COLUMN</span> author <span class="keyword">TO</span> authorer_new</span><br></pre></td></tr></table></figure><h2 id="4-删除列"><a href="#4-删除列" class="headerlink" title="4. 删除列"></a>4. 删除列</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> 列名;</span><br><span class="line">  </span><br><span class="line">eg：<span class="keyword">alter</span> <span class="keyword">table</span> skate_test <span class="keyword">drop</span> <span class="keyword">column</span> author</span><br></pre></td></tr></table></figure><h2 id="5-更改表名"><a href="#5-更改表名" class="headerlink" title="5.更改表名"></a>5.更改表名</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 当前表名 <span class="keyword">RENAME</span> <span class="keyword">TO</span> 新表名;</span><br><span class="line">  </span><br><span class="line">eg：<span class="keyword">alter</span> <span class="keyword">table</span> skate_test <span class="keyword">rename</span> <span class="keyword">to</span> test_sakte</span><br></pre></td></tr></table></figure><h2 id="6-加注释"><a href="#6-加注释" class="headerlink" title="6. 加注释"></a>6. 加注释</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">comment</span> <span class="keyword">column</span> <span class="keyword">on</span> 表名.列名 <span class="keyword">is</span> <span class="string">'注释内容'</span>;   //修改表的列的注释</span><br><span class="line"> </span><br><span class="line">eg：<span class="keyword">COMMENT</span> <span class="keyword">ON</span> <span class="keyword">TABLE</span> MOVO_NEW.TEST_SAKTE  <span class="keyword">IS</span> <span class="string">'注释内容'</span>;  //修改表的注释</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 术业专攻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsp 自定义标签</title>
      <link href="/2017/12/17/jsp%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E7%AD%BE/"/>
      <url>/2017/12/17/jsp%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E7%AD%BE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="jsp-自定义标签-tld-文件说明"><a href="#jsp-自定义标签-tld-文件说明" class="headerlink" title="jsp 自定义标签.tld 文件说明"></a>jsp 自定义标签.tld 文件说明</h2><h3 id="jsp-描述性文件-tld"><a href="#jsp-描述性文件-tld" class="headerlink" title="jsp 描述性文件.tld"></a>jsp 描述性文件.tld</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">taglib</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">version</span>=<span class="string">"2.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">short-name</span>&gt;</span>WensTaglib<span class="tag">&lt;/<span class="name">short-name</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- 定义该标签库的URI --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uri</span>&gt;</span>https://oa.wens.com.cn/taglib<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>first tag<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义标签名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>showSystemTime<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义标签处理类 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>weaver.interfaces.wens.jdpurchase.test.ShowSystemTime<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义标签体为空 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">body-content</span>&gt;</span>empty<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：将该 tld 描述性文件复制到 Web 应用的 WEB-INF/ 路径，或 WEB-INF 的任意子路径下</p></blockquote><p><strong>1.  taglib 下有三个子元素：</strong></p><ul><li><code>tlib-version</code>：指定该标签库实现的版本，这是一个作为标识的内部版本号，对程序没有太大的作用。</li><li><code>short-name</code>：该标签库的默认短名，该名称通常也没有太大的用处。</li><li><code>uri</code>：这个属性非常重要，它指定该标签库的 URI，相当于指定该标签库的唯一标识。JSP 页面中使用标签库时就是根据该 URI 属性来定位标签库的。</li></ul><p><strong>2.  taglib 元素下可以包含多个 tag 元素，每个 tag 元素定义一个标签，tag 元素下至少应包含如下三个子元素:</strong></p><ul><li><code>name</code>：该标签库的名称，这个属性很重要，JSP 页面中就是根据该名称来使用此标签。</li><li><code>tag-class</code>：指定标签的处理类，毋庸置疑，这个属性非常重要，指定了标签由哪个 Java 类来处理。</li><li><code>body-content</code>：这个属性也很重要，它指定标签体内容。该元素的值可以是如下几个：<ul><li><code>tagdependent</code>：指定标签处理类自己负责处理标签体。</li><li><code>empty</code>：指定该标签只能作用空标签使用。</li><li><code>scriptless</code>：指定该标签的标签体可以是静态 HTML 元素，表达式语言，但不允许出现 JSP 脚本。</li><li><code>JSP</code>：指定该标签的标签体可以使用 JSP 脚本。</li></ul></li></ul><p><strong>3.  简单标签既没有属性，也没有标签体，用法、功能都比较简单。实际上还有如下两种常用的标签：</strong></p><ul><li>带属性的标签。</li><li>带标签体的标签。</li></ul><blockquote><p>注意： 带属性标签必须为每个属性提供对应的 setter 和 getter 方法。带标签体的标签，可以在标签内嵌入其他内容（包括静态的 HTML 内容和动态的 JSP 内容），通常用于完成一些逻辑运算，例如判断和循环等。</p></blockquote><h2 id="jsp-自定义标签之-TagSupport，BodyTagSupport-不推荐"><a href="#jsp-自定义标签之-TagSupport，BodyTagSupport-不推荐" class="headerlink" title="jsp 自定义标签之 TagSupport，BodyTagSupport(不推荐)"></a>jsp 自定义标签之 TagSupport，BodyTagSupport(不推荐)</h2><blockquote><p>TagSupport，BodyTagSupport 自定义 jsp 标签是 jsp1.0 版本的功能，自定义标签比 jsp2.0 较难理解而且繁琐，推荐使用 jsp2.0 自定义标签。</p></blockquote><h3 id="自定义标签开发步骤"><a href="#自定义标签开发步骤" class="headerlink" title="自定义标签开发步骤"></a>自定义标签开发步骤</h3><ol><li>第一步，编写标签处理类，继承自 TagSupport</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bin.tag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.TagSupport;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hugo Black</span></span><br><span class="line"><span class="comment"> * 自定义标签</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginDateTag</span> <span class="keyword">extends</span> <span class="title">TagSupport</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">doStartTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException </span>&#123;</span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line">        Date currentTime = calendar.getTime();</span><br><span class="line">        SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"YYYY-MM-dd HH:mm:ss"</span>);</span><br><span class="line">        String time = simpleDateFormat.format(currentTime);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            pageContext.getOut().print(time);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.doStartTag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>第二步，定义标签库描述文件，放在 WEB-INF 根目录</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE taglib</span></span><br><span class="line"><span class="meta">        PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"</span></span><br><span class="line"><span class="meta">        "http://java.sun.com/j2ee/dtd/web-jsptaglibrary_1_2.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">taglib</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">jsp-version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">jsp-version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">short-name</span>&gt;</span>simple<span class="tag">&lt;/<span class="name">short-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uri</span>&gt;</span>/my-tag<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>loginDate<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>com.bin.tag.LoginDateTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body-content</span>&gt;</span>empty<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>第三步，在 jsp 中引入定义声明自定义标签, 使用标签</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix=&quot;cxb&quot; uri=&quot;/my-tag&quot;%&gt;</span><br><span class="line">&lt;cxb:loginDate/&gt;</span><br></pre></td></tr></table></figure><h3 id="控制标签体内容显示"><a href="#控制标签体内容显示" class="headerlink" title="控制标签体内容显示"></a>控制标签体内容显示</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bin.tag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.TagSupport;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hugo Black</span></span><br><span class="line"><span class="comment"> * 控制标签体内容显示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SkipBodyOrEvalBodyIncludeTag</span> <span class="keyword">extends</span> <span class="title">TagSupport</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">doStartTag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String name = pageContext.getRequest().getParameter(<span class="string">"name"</span>);</span><br><span class="line">        String hello = <span class="string">"hello"</span>;</span><br><span class="line">        <span class="comment">//name为空不显示标签体内容</span></span><br><span class="line">        <span class="keyword">if</span>(name==<span class="keyword">null</span> || hello.equals(name))&#123;</span><br><span class="line">            <span class="keyword">return</span> SKIP_BODY;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> EVAL_BODY_INCLUDE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="控制是否执行标签结束后的内容"><a href="#控制是否执行标签结束后的内容" class="headerlink" title="控制是否执行标签结束后的内容"></a>控制是否执行标签结束后的内容</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bin.tag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.TagSupport;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hugo Black</span></span><br><span class="line"><span class="comment"> * 控制是否执行标签结束后的内容</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SkipPageOrEvalPageTag</span> <span class="keyword">extends</span> <span class="title">TagSupport</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">doEndTag</span><span class="params">()</span></span>&#123;</span><br><span class="line">        HttpServletRequest httpServletRequest = (HttpServletRequest) pageContext.getRequest();</span><br><span class="line">        String referer = httpServletRequest.getHeader(<span class="string">"referer"</span>);</span><br><span class="line">        String url = <span class="string">"http://"</span>+ httpServletRequest.getServerName();</span><br><span class="line">        <span class="keyword">if</span>(referer!=<span class="keyword">null</span> &amp;&amp; referer.startsWith(url))&#123;</span><br><span class="line">            <span class="keyword">return</span> EVAL_PAGE;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                pageContext.getOut().print(<span class="string">"不能访问"</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> SKIP_PAGE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义标签的属性"><a href="#自定义标签的属性" class="headerlink" title="自定义标签的属性"></a>自定义标签的属性</h3><h4 id="编写标签处理类"><a href="#编写标签处理类" class="headerlink" title="编写标签处理类"></a>编写标签处理类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bin.tag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.bin.entity.Employee;</span><br><span class="line"><span class="keyword">import</span> com.bin.util.JdbcUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbutils.handlers.BeanListHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.TagSupport;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hugo Black</span></span><br><span class="line"><span class="comment"> * 定义标签属性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AttributeTag</span> <span class="keyword">extends</span> <span class="title">TagSupport</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String sql;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSql</span><span class="params">(String sql)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sql = sql;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">doEndTag</span><span class="params">()</span></span>&#123;</span><br><span class="line">        QueryRunner qr = JdbcUtils.getQueryRuner();</span><br><span class="line">        List&lt;Employee&gt; list;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            list = qr.query(sql, <span class="keyword">new</span> BeanListHandler&lt;&gt;(Employee.class));</span><br><span class="line">            <span class="keyword">for</span>(Employee employee: list)&#123;</span><br><span class="line">                pageContext.getOut().println(employee.toString());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> EVAL_PAGE;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException | IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> SKIP_PAGE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在-WEB-INF-根目录的标签库描述文件增加以下内容"><a href="#在-WEB-INF-根目录的标签库描述文件增加以下内容" class="headerlink" title="在 WEB-INF 根目录的标签库描述文件增加以下内容"></a>在 WEB-INF 根目录的标签库描述文件增加以下内容</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>ConnectionTag<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>com.bin.tag.AttributeTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body-content</span>&gt;</span>empty<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">attribute</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>sql<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">required</span>&gt;</span>true<span class="tag">&lt;/<span class="name">required</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rtexprvalue</span>&gt;</span>true<span class="tag">&lt;/<span class="name">rtexprvalue</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">attribute</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="使用标签"><a href="#使用标签" class="headerlink" title="使用标签"></a>使用标签</h4><ul><li>属性值为正常字符串</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cxb:ConnectionTag</span> <span class="attr">sql</span>=<span class="string">"select * from employee"</span>&gt;</span><span class="tag">&lt;/<span class="name">cxb:ConnectionTag</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>属性值为 el 表达式</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    String sql = <span class="string">"select * from employee"</span>;</span><br><span class="line">    pageContext.setAttribute(<span class="string">"sql"</span>, sql);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;cxb:ConnectionTag sql="$&#123;sql&#125;"&gt;&lt;/cxb:ConnectionTag&gt;</span><br></pre></td></tr></table></figure><h3 id="修改标签体的内容"><a href="#修改标签体的内容" class="headerlink" title="修改标签体的内容"></a>修改标签体的内容</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bin.tag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspWriter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.BodyTagSupport;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hugo Black</span></span><br><span class="line"><span class="comment"> * 修改标签体内容</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BodyTagSupportDemo</span> <span class="keyword">extends</span> <span class="title">BodyTagSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">doEndTag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String content = <span class="keyword">this</span>.bodyContent.getString();</span><br><span class="line">        System.out.println(content);</span><br><span class="line"></span><br><span class="line">        String newStr = <span class="string">"hello world"</span>;</span><br><span class="line">        JspWriter jspWriter = bodyContent.getEnclosingWriter();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jspWriter.write(newStr);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> EVAL_PAGE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="jsp-自定义标签之-Simple-推荐"><a href="#jsp-自定义标签之-Simple-推荐" class="headerlink" title="jsp 自定义标签之 Simple(推荐)"></a>jsp 自定义标签之 Simple(推荐)</h2><h3 id="自定义标签开发步骤-1"><a href="#自定义标签开发步骤-1" class="headerlink" title="自定义标签开发步骤"></a>自定义标签开发步骤</h3><ol><li>第一步，编写标签处理类，继承自 SimpleTagSupport</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bin.tag.simple;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspWriter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hugo Black</span></span><br><span class="line"><span class="comment"> * 自定义标签</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginDateTag</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span>  IOException </span>&#123;</span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line">        Date currentTime = calendar.getTime();</span><br><span class="line">        SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">        String time = simpleDateFormat.format(currentTime);</span><br><span class="line"></span><br><span class="line">        JspWriter jspWriter = <span class="keyword">this</span>.getJspContext().getOut();</span><br><span class="line">        jspWriter.write(time);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>第二步，定义标签库描述文件，放在 WEB-INF 根目录</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">taglib</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">version</span>=<span class="string">"2.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>jsp自定义标签2.0<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">short-name</span>&gt;</span>SimpleTagLibrary<span class="tag">&lt;/<span class="name">short-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uri</span>&gt;</span>/my-tag2<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>loginDate<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>com.bin.tag.simple.LoginDateTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body-content</span>&gt;</span>empty<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>第三步，在 jsp 中引入定义声明自定义标签, 使用标签</li></ol><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">"cxb2"</span> uri=<span class="string">"/my-tag2"</span> %&gt;</span><br><span class="line">&lt;cxb2:loginDate/&gt;</span><br></pre></td></tr></table></figure><h3 id="显示或者忽略标签体"><a href="#显示或者忽略标签体" class="headerlink" title="显示或者忽略标签体"></a>显示或者忽略标签体</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bin.tag.simple;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.PageContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hugo Black</span></span><br><span class="line"><span class="comment"> * 显示或者忽略标签体</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DisplayOrSkipBody</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> IOException, JspException </span>&#123;</span><br><span class="line">        PageContext pageContext = (PageContext) <span class="keyword">this</span>.getJspContext();</span><br><span class="line">        String name = pageContext.getRequest().getParameter(<span class="string">"name"</span>);</span><br><span class="line">        String hello= <span class="string">"hello"</span>;</span><br><span class="line">        <span class="keyword">if</span>(name!=<span class="keyword">null</span> &amp;&amp; name.equals(hello))&#123;</span><br><span class="line">            <span class="keyword">this</span>.getJspBody().invoke(<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">super</span>.doTag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="显示或忽略标签体后的内容"><a href="#显示或忽略标签体后的内容" class="headerlink" title="显示或忽略标签体后的内容"></a>显示或忽略标签体后的内容</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bin.tag.simple;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.PageContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.SkipPageException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hugo Black</span></span><br><span class="line"><span class="comment"> * 显示或忽略标签体后的内容</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SkipOrEvalPage</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException, IOException </span>&#123;</span><br><span class="line">        PageContext pageContext = (PageContext) <span class="keyword">this</span>.getJspContext();</span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) pageContext.getRequest();</span><br><span class="line">        String referer = request.getHeader(<span class="string">"referer"</span>);</span><br><span class="line">        <span class="keyword">if</span>(referer == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SkipPageException();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">super</span>.doTag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="迭代标签体内容"><a href="#迭代标签体内容" class="headerlink" title="迭代标签体内容"></a>迭代标签体内容</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bin.tag.simple;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.PageContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hugo Black</span></span><br><span class="line"><span class="comment"> * 迭代标签体内容</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InterationTagBody</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String[] items;</span><br><span class="line">    <span class="keyword">private</span> String <span class="keyword">var</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setItems</span><span class="params">(String[] items)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.items = items;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setVar</span><span class="params">(String <span class="keyword">var</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.<span class="keyword">var</span> = <span class="keyword">var</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setI</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.i = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (items != <span class="keyword">null</span> &amp;&amp; items.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            PageContext pageContext = (PageContext) <span class="keyword">this</span>.getJspContext();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; items.length; i++) &#123;</span><br><span class="line">                pageContext.setAttribute(<span class="string">"name"</span>, items[i]);</span><br><span class="line">                getJspBody().invoke(<span class="keyword">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改标签体内容"><a href="#修改标签体内容" class="headerlink" title="修改标签体内容"></a>修改标签体内容</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bin.tag.simple;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.PageContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.JspFragment;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.StringWriter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Hugo Black</span></span><br><span class="line"><span class="comment"> * 修改标签体内容</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ModifyTagBodyContent</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException, IOException </span>&#123;</span><br><span class="line">        StringWriter stringWriter = <span class="keyword">new</span> StringWriter();</span><br><span class="line">        JspFragment jspFragment = <span class="keyword">this</span>.getJspBody();</span><br><span class="line">        jspFragment.invoke(stringWriter);</span><br><span class="line">        String content = stringWriter.toString();</span><br><span class="line">        content = <span class="string">"hello word"</span>;</span><br><span class="line">        PageContext pageContext = (PageContext)getJspContext();</span><br><span class="line">        pageContext.getOut().write(content);</span><br><span class="line">        <span class="keyword">super</span>.doTag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>总结：</strong>自定义标签有以下四个功能：</p><ol><li>控制标签内容是否显示</li><li>控制标签结束后的代码是否执行</li><li>控制标签体内容重复执行</li><li>改变标签体内容再输出</li></ol></blockquote><blockquote><p><strong>注意：</strong>jsp2.0 中的描述性文件<code>.tld</code>中的<code>&lt;body-content&gt;scriptless&lt;/body-content&gt;</code>的内容不能为 JSP。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 术业专攻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jsp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git命令日常使用难点</title>
      <link href="/2017/12/07/learn-git-daily-command/"/>
      <url>/2017/12/07/learn-git-daily-command/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-本地初始化后的项目提交到远程"><a href="#1-本地初始化后的项目提交到远程" class="headerlink" title="1. 本地初始化后的项目提交到远程"></a>1. 本地初始化后的项目提交到远程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:hello20170205/gitCommandTest.git</span><br><span class="line"></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2-本地创建新分支后提交到远程"><a href="#2-本地创建新分支后提交到远程" class="headerlink" title="2. 本地创建新分支后提交到远程"></a>2. 本地创建新分支后提交到远程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git push  -u origin 分支名</span><br><span class="line">或者</span><br><span class="line">git push --set-upstream origin 分支名</span><br><span class="line"></span><br><span class="line">比如：</span><br><span class="line">git push -u origin feature/addAuthor</span><br><span class="line">或者</span><br><span class="line">git push --set-upstream origin feature/addAuthor</span><br></pre></td></tr></table></figure><h2 id="3-同时删除本地分支和远程分支"><a href="#3-同时删除本地分支和远程分支" class="headerlink" title="3. 同时删除本地分支和远程分支"></a>3. 同时删除本地分支和远程分支</h2><p>(1). 切换到其他分支（除要删除的分支外）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout hello</span><br></pre></td></tr></table></figure><p>(2). 删除本地分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d test2</span><br></pre></td></tr></table></figure><p>(3). 删除远程分支(注意：分支前的分号)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push or :test2</span><br></pre></td></tr></table></figure><h2 id="4-临时做新功能，创建新分支"><a href="#4-临时做新功能，创建新分支" class="headerlink" title="4. 临时做新功能，创建新分支"></a>4. 临时做新功能，创建新分支</h2><h3 id="4-1-其他功能尚未完成，该代码不应该带到新功能分支下"><a href="#4-1-其他功能尚未完成，该代码不应该带到新功能分支下" class="headerlink" title="4.1 其他功能尚未完成，该代码不应该带到新功能分支下"></a>4.1 其他功能尚未完成，该代码不应该带到新功能分支下</h3><p>(1). 先将其他功能加入版本控制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>(2). 将其他功能存储起来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br></pre></td></tr></table></figure><p>(3). 创建并切换新分支,新分支写完代码 push 后不包含其他功能代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b feature/addTODO</span><br></pre></td></tr></table></figure><h3 id="4-2-其他功能尚未完成，该代码带到新功能分支下"><a href="#4-2-其他功能尚未完成，该代码带到新功能分支下" class="headerlink" title="4.2 其他功能尚未完成，该代码带到新功能分支下"></a>4.2 其他功能尚未完成，该代码带到新功能分支下</h3><p>创建并切换新分支,新分支写完代码 push 后包含其他功能代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b feature/addTODO</span><br></pre></td></tr></table></figure><h2 id="5-新功能完成后，本地合并新功能分支"><a href="#5-新功能完成后，本地合并新功能分支" class="headerlink" title="5. 新功能完成后，本地合并新功能分支"></a>5. 新功能完成后，本地合并新功能分支</h2><p>(1). 将新功能加入版本控制后提交</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -am &quot;commit feature/addTODO&quot;</span><br></pre></td></tr></table></figure><p>(2). 切换到要合并到的分支</p><p>比如想要将 feature/addTODO 合并到 develop，那么就切换到 develop 分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout develop</span><br></pre></td></tr></table></figure><p>(3). 合并分支</p><p>将 feature/addTODO 合并到 develop</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge feature/addTODO</span><br></pre></td></tr></table></figure><p>(4). 合并成功后删除分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d feature/addTODO</span><br></pre></td></tr></table></figure><h2 id="6-忽略已加入版本控制的文件或者文件夹"><a href="#6-忽略已加入版本控制的文件或者文件夹" class="headerlink" title="6. 忽略已加入版本控制的文件或者文件夹"></a>6. 忽略已加入版本控制的文件或者文件夹</h2><p>(1). 使用以下命令删除 Git 对于该文件(夹)的追踪</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git rm --cached src/main/resources/spring-context.xml</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">git rm -r --cached .idea</span><br></pre></td></tr></table></figure><p>(2). 更新 .gitignore 忽略掉目标文件, 在.gitignore 添加以下一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">src/main/resources/spring-context.xml</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">.idea</span><br></pre></td></tr></table></figure><h2 id="7-取消修改的文件-已加入版本控制"><a href="#7-取消修改的文件-已加入版本控制" class="headerlink" title="7. 取消修改的文件(已加入版本控制)"></a>7. 取消修改的文件(已加入版本控制)</h2><h3 id="7-1-文件尚未存在暂存区"><a href="#7-1-文件尚未存在暂存区" class="headerlink" title="7.1 文件尚未存在暂存区"></a>7.1 文件尚未存在暂存区</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- &lt;file&gt;</span><br><span class="line"></span><br><span class="line">如： git checkout --  src/test/java/com/bin/reflect/StringTest.java</span><br></pre></td></tr></table></figure><h3 id="7-2-文件已存在暂存区-即用-git-add-命令后"><a href="#7-2-文件已存在暂存区-即用-git-add-命令后" class="headerlink" title="7.2 文件已存在暂存区(即用 git add 命令后)"></a>7.2 文件已存在暂存区(即用 git add 命令后)</h3><p>(1). 让文件脱离暂存区</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD &lt;file&gt;</span><br><span class="line"></span><br><span class="line">如： git reset HEAD src/test/java/com/bin/reflect/StringTest.java</span><br></pre></td></tr></table></figure><p>(2). 撤销文件修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- &lt;file&gt;</span><br><span class="line"></span><br><span class="line">如： git checkout --  src/test/java/com/bin/reflect/StringTest.java</span><br></pre></td></tr></table></figure><h2 id="8-恢复删除的文件-已加入版本控制"><a href="#8-恢复删除的文件-已加入版本控制" class="headerlink" title="8. 恢复删除的文件(已加入版本控制)"></a>8. 恢复删除的文件(已加入版本控制)</h2><p>(1) 使用 reset 命令，先将删除文件找回来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD  hello.yaml</span><br></pre></td></tr></table></figure><p>(2) 使用 checkout 命令恢复到版本控制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- hello.yaml</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 术业专攻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tmux实用技巧</title>
      <link href="/2017/12/01/tmux-command-usage/"/>
      <url>/2017/12/01/tmux-command-usage/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install tmux</span><br></pre></td></tr></table></figure><h2 id="使用Github配置"><a href="#使用Github配置" class="headerlink" title="使用Github配置"></a><a href="https://github.com/gpakosz/.tmux" target="_blank" rel="noopener">使用Github配置</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">git clone https://github.com/gpakosz/.tmux.git</span><br><span class="line">ln -s -f .tmux/.tmux.conf</span><br><span class="line">cp .tmux/.tmux.conf.local .</span><br></pre></td></tr></table></figure><h2 id="tmux快捷键"><a href="#tmux快捷键" class="headerlink" title="tmux快捷键"></a>tmux快捷键</h2><blockquote><p><strong>注意</strong>： 以下快捷键使用均得先激活控制台，即先按下<code>Ctrl+a</code>再按下快捷键！</p></blockquote><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><p> <code>Ctrl+a</code> : 激活控制台；此时以下按键生效( 自定义，默认是 <code>Ctrl+b</code> )<br> <code>?</code> : 列出所有快捷键；按q返回<br> <code>d</code>: 脱离当前会话；这样可以暂时返回Shell界面，输入<code>tmux attach</code>能够重新进入之前的会话<br> <code>D</code>: 选择要脱离的会话；在同时开启了多个会话时使用<br> <code>Ctrl+z</code>: 挂起当前会话<br> <code>r</code>: 强制重绘未脱离的会话<br> <code>s</code>: 选择并切换会话；在同时开启了多个会话时使用<br> <code>:</code>: 进入命令行模式；此时可以输入支持的命令，例如kill-server可以关闭服务器<br> <code>[</code> : 进入复制模式；此时的操作与vi/emacs相同，<code>按q/Esc</code>退出<br> <code>~</code>: 列出提示信息缓存；其中包含了之前tmux返回的各种提示信息</p><h3 id="窗口操作"><a href="#窗口操作" class="headerlink" title="窗口操作"></a>窗口操作</h3><p> <code>c</code>: 创建新窗口<br> <code>&amp;</code>: 关闭当前窗口<br> <code>数字键</code>: 切换至指定窗口<br> <code>{</code>: 向前置换当前面板<br> <code>}</code>: 向后置换当前面板<br> <code>l</code>: 在前后两个窗口间互相切换<br> <code>w</code>: 通过窗口列表切换窗口<br> <code>,</code>: 重命名当前窗口；这样便于识别<br> <code>: 修改当前窗口编号；相当于窗口重新排序</code><br> f`: 在所有窗口中查找指定文本</p><h3 id="面板操作"><a href="#面板操作" class="headerlink" title="面板操作"></a>面板操作</h3><p> <code>”</code>: 将当前面板平分为上下两块<br> <code>%</code>: 将当前面板平分为左右两块<br> <code>x</code> 或者 <code>exit</code>: 关闭当前面板<br> <code>!</code>: 将当前面板置于新窗口;即新建一个窗口，其中仅包含当前面板<br> <code>Ctrl+方向键</code>: 以1个单元格为单位移动边缘以调整当前面板大小<br> <code>Alt+方向键</code>: 以5个单元格为单位移动边缘以调整当前面板大小<br> <code>Space</code>: 在预置的面板布局中循环切换；依次包括<code>even-horizontal</code>、<code>even-vertical</code>、<code>main-horizontal</code>、<code>main-vertical</code>、<code>tiled</code><br> <code>q</code>: 显示面板编号<br> <code>o</code>: 在当前窗口中选择下一面板<br> <code>方向键</code>: 移动光标以选择面板<br> <code>Alt+o</code>:逆时针旋转当前窗口的面板<br> <code>Ctrl+o</code>: 顺时针旋转当前窗口的面板<br> <code>Ctrl+l</code>: 清空面板历史<br> <code>Enter</code>: 进入复制模式， <code>v</code>: 选择复制；</p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tool </tag>
            
            <tag> mac </tag>
            
            <tag> tmux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA日常开发问题集锦</title>
      <link href="/2017/11/21/idea-problem-and-solution/"/>
      <url>/2017/11/21/idea-problem-and-solution/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-IDEA运行tomcat项目编码错误及如何指定tomcat编码"><a href="#1-IDEA运行tomcat项目编码错误及如何指定tomcat编码" class="headerlink" title="1. IDEA运行tomcat项目编码错误及如何指定tomcat编码"></a>1. IDEA运行tomcat项目编码错误及如何指定tomcat编码</h2><p>IDEA里配置的Tomcat. 凡是在tomcat里启动的java应用, 不管源码是什么编码, 运行后都是GBK.</p><blockquote><p>解决方法:<br>Run/Debug Configuration -&gt; Tomcat Server -&gt; Tomcat 7, 在VM Options里面加上 <code>-Dfile.encoding=UTF-8</code> 并应用, 以上更改后, 控制台输出会乱码, 还需要将IDEA的启动环境也配成UTF-8, 在IDEA安装目录下, 打开 idea64.exe.vmoptions , 最后一行加上 <code>-Dfile.encoding=UTF-8</code></p></blockquote><h2 id="2-项目使用java6，注解-Override出现红色，详情是Cannot-resolve-symbol-override"><a href="#2-项目使用java6，注解-Override出现红色，详情是Cannot-resolve-symbol-override" class="headerlink" title="2. 项目使用java6，注解@Override出现红色，详情是Cannot resolve symbol override"></a>2. 项目使用java6，注解@Override出现红色，详情是Cannot resolve symbol override</h2><p>查看项目Project-settings -&gt; Project -&gt; Project SDK已经选中java6, Project language level也已经是6啦， 再查看Modules -&gt; Source 的language level也选择6啦。</p><blockquote><p>解决方法： SDKs settings , 添加java6，并选中它。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 实践检验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot基础</title>
      <link href="/2017/10/01/springboot-base-knowledge/"/>
      <url>/2017/10/01/springboot-base-knowledge/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一-注解"><a href="#一-注解" class="headerlink" title="一. 注解"></a>一. 注解</h2><h3 id="1-SpringBootApplication"><a href="#1-SpringBootApplication" class="headerlink" title="1. @SpringBootApplication"></a>1. @SpringBootApplication</h3><ul><li>位置：类</li><li>属性<ul><li>exclude  排除自定义配置</li><li>scanBasePackages 扫描指定目录的包，不设置就是扫描注解所在类的同级目录以及它的子目录。</li></ul></li><li>作用：Spring Boot的核心注解</li></ul><blockquote><p><strong>注： @SpringBootApplication注解是SpringBoot的核心注解，它其实是一个组合注解：</strong><br><strong>1.</strong>    <strong>@SpringBootConfiguration</strong>：这是SpringBoot项目的配置注解，这也是一个组合注解：在Spring Boot项目中推荐使用@SpringBootConfiguration替代@Configuration<br><strong>2.</strong>    <strong>@EnableAutoConfiguration</strong>：启用自动配置，该注解会使Spring Boot根据项目中依赖的jar包自动配置项目的配置项：<br><strong>3.</strong> <strong>@ComponentScan</strong>：默认扫描@SpringBootApplication所在类的同级目录以及它的子目录。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span>(exclude = &#123;RedisAutoConfiguration.class&#125;,  scanBasePackages = <span class="string">"com.bin"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// SpringApplication.run(HelloApplication.class, args);</span></span><br><span class="line">        SpringApplication application = <span class="keyword">new</span> SpringApplication(HelloApplication.class);</span><br><span class="line">        application.setBannerMode(Mode.OFF);</span><br><span class="line">    application.run(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二-Spring-Boot自动化配置原理"><a href="#二-Spring-Boot自动化配置原理" class="headerlink" title="二. Spring Boot自动化配置原理"></a>二. Spring Boot自动化配置原理</h2><p>Spring Boot在进行SpringApplication对象实例化时会加载META-INF/spring.factories文件，将该配置文件中的配置载入到Spring容器。</p><h2 id="三-xml-配置文件"><a href="#三-xml-配置文件" class="headerlink" title="三. xml 配置文件"></a>三. xml 配置文件</h2><p>Spring Boot 提倡零配置，即无xml配置，但再实际项目中，可能有一些特殊要求你必须使用xml配置，这时我们可通过Spring提供<code>@ImportResource</code>来加载xml配置。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ImportResource</span>(<span class="string">"classpath:jdbc.xml"</span>, <span class="string">"classpath:hello.xml"</span>)</span><br></pre></td></tr></table></figure></p><h2 id="四-自动配置静态资源"><a href="#四-自动配置静态资源" class="headerlink" title="四. 自动配置静态资源"></a>四. 自动配置静态资源</h2><h3 id="1-进入规则为"><a href="#1-进入规则为" class="headerlink" title="1. 进入规则为 /"></a>1. 进入规则为 <code>/</code></h3><p>如果进入SpringMVC的规则为/时，Spring Boot的默认静态资源的路径为：<br><code>spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.sevlet-path: /</span><br></pre></td></tr></table></figure><h3 id="2-进入规则为-xxx或者不指定静态文件路径"><a href="#2-进入规则为-xxx或者不指定静态文件路径" class="headerlink" title="2. 进入规则为*.xxx或者不指定静态文件路径"></a>2. 进入规则为*.xxx或者不指定静态文件路径</h3><p>将静态资源放置到webapp下的static目录中即可通过地址访问.</p><h2 id="五-web自定义消息转化器"><a href="#五-web自定义消息转化器" class="headerlink" title="五. web自定义消息转化器"></a>五. web自定义消息转化器</h2><p>自定义消息转化器，只需要在@Configuration的类中添加消息转化器的@bean加入到Spring容器，就会被Spring Boot自动加入到容器中。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationConifig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StringHttpMessageConverter <span class="title">stringHttpMessageConverter</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//其实spring boot 默认就是utf-8, 无须配置</span></span><br><span class="line">        StringHttpMessageConverter converter  = <span class="keyword">new</span> StringHttpMessageConverter(Charset.forName(<span class="string">"UTF-8"</span>)); </span><br><span class="line">        <span class="keyword">return</span> converter;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="六-5-4-自定义SpringMVC的配置"><a href="#六-5-4-自定义SpringMVC的配置" class="headerlink" title="六. 5.4.    自定义SpringMVC的配置"></a>六. 5.4.    自定义SpringMVC的配置</h2><p>有些时候我们需要自已配置SpringMVC而不是采用默认，比如说增加一个拦截器，这个时候就得通过继承WebMvcConfigurerAdapter然后重写父类中的方法进行扩展。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.converter.HttpMessageConverter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.converter.StringHttpMessageConverter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span> <span class="comment">//申明这是一个配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MySrpingMVCConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自定义拦截器</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        HandlerInterceptor handlerInterceptor = <span class="keyword">new</span> HandlerInterceptor() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span></span></span><br><span class="line"><span class="function">                    <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"自定义拦截器............"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler,</span></span></span><br><span class="line"><span class="function"><span class="params">                    ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler,</span></span></span><br><span class="line"><span class="function"><span class="params">                    Exception ex)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        registry.addInterceptor(handlerInterceptor).addPathPatterns(<span class="string">"/**"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自定义消息转化器的第二种方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureMessageConverters</span><span class="params">(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters)</span> </span>&#123;</span><br><span class="line">        StringHttpMessageConverter converter  = <span class="keyword">new</span> StringHttpMessageConverter(Charset.forName(<span class="string">"UTF-8"</span>));</span><br><span class="line">        converters.add(converter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七-全局配置文件"><a href="#七-全局配置文件" class="headerlink" title="七. 全局配置文件"></a>七. 全局配置文件</h2><p>Spring Boot项目使用一个全局的配置文件application.properties或者是application.yml，在resources目录下或者类路径下的/config下，一般我们放到resources下，以下使用application.properties配置文件。</p><h3 id="1-修改tomcat端口"><a href="#1-修改tomcat端口" class="headerlink" title="1. 修改tomcat端口"></a>1. 修改tomcat端口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.port: 8088</span><br></pre></td></tr></table></figure><h3 id="2-进入DispatcherServlet的规则"><a href="#2-进入DispatcherServlet的规则" class="headerlink" title="2. 进入DispatcherServlet的规则"></a>2. 进入DispatcherServlet的规则</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.sevlet-path: *.html</span><br></pre></td></tr></table></figure><h3 id="3-设置日志级别"><a href="#3-设置日志级别" class="headerlink" title="3. 设置日志级别"></a>3. 设置日志级别</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logging.level.org.springframework=DEBUG</span><br></pre></td></tr></table></figure><h3 id="4-更多配置"><a href="#4-更多配置" class="headerlink" title="4. 更多配置"></a>4. 更多配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br></pre></td><td class="code"><pre><span class="line"># ===================================================================</span><br><span class="line"># COMMON SPRING BOOT PROPERTIES</span><br><span class="line">#</span><br><span class="line"># This sample file is provided as a guideline. Do NOT copy it in its</span><br><span class="line"># entirety to your own application.               ^^^</span><br><span class="line"># ===================================================================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># CORE PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"></span><br><span class="line"># BANNER</span><br><span class="line">banner.charset=UTF-8 # Banner file encoding.</span><br><span class="line">banner.location=classpath:banner.txt # Banner file location.</span><br><span class="line">banner.image.location=classpath:banner.gif # Banner image file location (jpg/png can also be used).</span><br><span class="line">banner.image.width= # Width of the banner image in chars (default 76)</span><br><span class="line">banner.image.height= # Height of the banner image in chars (default based on image height)</span><br><span class="line">banner.image.margin= # Left hand image margin in chars (default 2)</span><br><span class="line">banner.image.invert= # If images should be inverted for dark terminal themes (default false)</span><br><span class="line"></span><br><span class="line"># LOGGING</span><br><span class="line">logging.config= # Location of the logging configuration file. For instance `classpath:logback.xml` for Logback</span><br><span class="line">logging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.</span><br><span class="line">logging.file= # Log file name. For instance `myapp.log`</span><br><span class="line">logging.level.*= # Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`</span><br><span class="line">logging.path= # Location of the log file. For instance `/var/log`</span><br><span class="line">logging.pattern.console= # Appender pattern for output to the console. Only supported with the default logback setup.</span><br><span class="line">logging.pattern.file= # Appender pattern for output to the file. Only supported with the default logback setup.</span><br><span class="line">logging.pattern.level= # Appender pattern for log level (default %5p). Only supported with the default logback setup.</span><br><span class="line">logging.register-shutdown-hook=false # Register a shutdown hook for the logging system when it is initialized.</span><br><span class="line"></span><br><span class="line"># AOP</span><br><span class="line">spring.aop.auto=true # Add @EnableAspectJAutoProxy.</span><br><span class="line">spring.aop.proxy-target-class=false # Whether subclass-based (CGLIB) proxies are to be created (true) as opposed to standard Java interface-based proxies (false).</span><br><span class="line"></span><br><span class="line"># IDENTITY (ContextIdApplicationContextInitializer)</span><br><span class="line">spring.application.index= # Application index.</span><br><span class="line">spring.application.name= # Application name.</span><br><span class="line"></span><br><span class="line"># ADMIN (SpringApplicationAdminJmxAutoConfiguration)</span><br><span class="line">spring.application.admin.enabled=false # Enable admin features for the application.</span><br><span class="line">spring.application.admin.jmx-name=org.springframework.boot:type=Admin,name=SpringApplication # JMX name of the application admin MBean.</span><br><span class="line"></span><br><span class="line"># AUTO-CONFIGURATION</span><br><span class="line">spring.autoconfigure.exclude= # Auto-configuration classes to exclude.</span><br><span class="line"></span><br><span class="line"># SPRING CORE</span><br><span class="line">spring.beaninfo.ignore=true # Skip search of BeanInfo classes.</span><br><span class="line"></span><br><span class="line"># SPRING CACHE (CacheProperties)</span><br><span class="line">spring.cache.cache-names= # Comma-separated list of cache names to create if supported by the underlying cache manager.</span><br><span class="line">spring.cache.caffeine.spec= # The spec to use to create caches. Check CaffeineSpec for more details on the spec format.</span><br><span class="line">spring.cache.couchbase.expiration=0 # Entry expiration in milliseconds. By default the entries never expire.</span><br><span class="line">spring.cache.ehcache.config= # The location of the configuration file to use to initialize EhCache.</span><br><span class="line">spring.cache.guava.spec= # The spec to use to create caches. Check CacheBuilderSpec for more details on the spec format.</span><br><span class="line">spring.cache.infinispan.config= # The location of the configuration file to use to initialize Infinispan.</span><br><span class="line">spring.cache.jcache.config= # The location of the configuration file to use to initialize the cache manager.</span><br><span class="line">spring.cache.jcache.provider= # Fully qualified name of the CachingProvider implementation to use to retrieve the JSR-107 compliant cache manager. Only needed if more than one JSR-107 implementation is available on the classpath.</span><br><span class="line">spring.cache.type= # Cache type, auto-detected according to the environment by default.</span><br><span class="line"></span><br><span class="line"># SPRING CONFIG - using environment property only (ConfigFileApplicationListener)</span><br><span class="line">spring.config.location= # Config file locations.</span><br><span class="line">spring.config.name=application # Config file name.</span><br><span class="line"></span><br><span class="line"># HAZELCAST (HazelcastProperties)</span><br><span class="line">spring.hazelcast.config= # The location of the configuration file to use to initialize Hazelcast.</span><br><span class="line"></span><br><span class="line"># PROJECT INFORMATION (ProjectInfoProperties)</span><br><span class="line">spring.info.build.location=classpath:META-INF/build-info.properties # Location of the generated build-info.properties file.</span><br><span class="line">spring.info.git.location=classpath:git.properties # Location of the generated git.properties file.</span><br><span class="line"></span><br><span class="line"># JMX</span><br><span class="line">spring.jmx.default-domain= # JMX domain name.</span><br><span class="line">spring.jmx.enabled=true # Expose management beans to the JMX domain.</span><br><span class="line">spring.jmx.server=mbeanServer # MBeanServer bean name.</span><br><span class="line"></span><br><span class="line"># Email (MailProperties)</span><br><span class="line">spring.mail.default-encoding=UTF-8 # Default MimeMessage encoding.</span><br><span class="line">spring.mail.host= # SMTP server host. For instance `smtp.example.com`</span><br><span class="line">spring.mail.jndi-name= # Session JNDI name. When set, takes precedence to others mail settings.</span><br><span class="line">spring.mail.password= # Login password of the SMTP server.</span><br><span class="line">spring.mail.port= # SMTP server port.</span><br><span class="line">spring.mail.properties.*= # Additional JavaMail session properties.</span><br><span class="line">spring.mail.protocol=smtp # Protocol used by the SMTP server.</span><br><span class="line">spring.mail.test-connection=false # Test that the mail server is available on startup.</span><br><span class="line">spring.mail.username= # Login user of the SMTP server.</span><br><span class="line"></span><br><span class="line"># APPLICATION SETTINGS (SpringApplication)</span><br><span class="line">spring.main.banner-mode=console # Mode used to display the banner when the application runs.</span><br><span class="line">spring.main.sources= # Sources (class name, package name or XML resource location) to include in the ApplicationContext.</span><br><span class="line">spring.main.web-environment= # Run the application in a web environment (auto-detected by default).</span><br><span class="line"></span><br><span class="line"># FILE ENCODING (FileEncodingApplicationListener)</span><br><span class="line">spring.mandatory-file-encoding= # Expected character encoding the application must use.</span><br><span class="line"></span><br><span class="line"># INTERNATIONALIZATION (MessageSourceAutoConfiguration)</span><br><span class="line">spring.messages.always-use-message-format=false # Set whether to always apply the MessageFormat rules, parsing even messages without arguments.</span><br><span class="line">spring.messages.basename=messages # Comma-separated list of basenames, each following the ResourceBundle convention.</span><br><span class="line">spring.messages.cache-seconds=-1 # Loaded resource bundle files cache expiration, in seconds. When set to -1, bundles are cached forever.</span><br><span class="line">spring.messages.encoding=UTF-8 # Message bundles encoding.</span><br><span class="line">spring.messages.fallback-to-system-locale=true # Set whether to fall back to the system Locale if no files for a specific Locale have been found.</span><br><span class="line"></span><br><span class="line"># OUTPUT</span><br><span class="line">spring.output.ansi.enabled=detect # Configure the ANSI output.</span><br><span class="line"></span><br><span class="line"># PID FILE (ApplicationPidFileWriter)</span><br><span class="line">spring.pid.fail-on-write-error= # Fail if ApplicationPidFileWriter is used but it cannot write the PID file.</span><br><span class="line">spring.pid.file= # Location of the PID file to write (if ApplicationPidFileWriter is used).</span><br><span class="line"></span><br><span class="line"># PROFILES</span><br><span class="line">spring.profiles.active= # Comma-separated list (or list if using YAML) of active profiles.</span><br><span class="line">spring.profiles.include= # Unconditionally activate the specified comma separated profiles (or list of profiles if using YAML).</span><br><span class="line"></span><br><span class="line"># SENDGRID (SendGridAutoConfiguration)</span><br><span class="line">spring.sendgrid.api-key= # SendGrid api key (alternative to username/password)</span><br><span class="line">spring.sendgrid.username= # SendGrid account username</span><br><span class="line">spring.sendgrid.password= # SendGrid account password</span><br><span class="line">spring.sendgrid.proxy.host= # SendGrid proxy host</span><br><span class="line">spring.sendgrid.proxy.port= # SendGrid proxy port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># WEB PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"></span><br><span class="line"># EMBEDDED SERVER CONFIGURATION (ServerProperties)</span><br><span class="line">server.address= # Network address to which the server should bind to.</span><br><span class="line">server.compression.enabled=false # If response compression is enabled.</span><br><span class="line">server.compression.excluded-user-agents= # List of user-agents to exclude from compression.</span><br><span class="line">server.compression.mime-types= # Comma-separated list of MIME types that should be compressed. For instance `text/html,text/css,application/json`</span><br><span class="line">server.compression.min-response-size= # Minimum response size that is required for compression to be performed. For instance 2048</span><br><span class="line">server.connection-timeout= # Time in milliseconds that connectors will wait for another HTTP request before closing the connection. When not set, the connector&apos;s container-specific default will be used. Use a value of -1 to indicate no (i.e. infinite) timeout.</span><br><span class="line">server.context-parameters.*= # Servlet context init parameters. For instance `server.context-parameters.a=alpha`</span><br><span class="line">server.context-path= # Context path of the application.</span><br><span class="line">server.display-name=application # Display name of the application.</span><br><span class="line">server.max-http-header-size=0 # Maximum size in bytes of the HTTP message header.</span><br><span class="line">server.error.include-stacktrace=never # When to include a &quot;stacktrace&quot; attribute.</span><br><span class="line">server.error.path=/error # Path of the error controller.</span><br><span class="line">server.error.whitelabel.enabled=true # Enable the default error page displayed in browsers in case of a server error.</span><br><span class="line">server.jetty.acceptors= # Number of acceptor threads to use.</span><br><span class="line">server.jetty.max-http-post-size=0 # Maximum size in bytes of the HTTP post or put content.</span><br><span class="line">server.jetty.selectors= # Number of selector threads to use.</span><br><span class="line">server.jsp-servlet.class-name=org.apache.jasper.servlet.JspServlet # The class name of the JSP servlet.</span><br><span class="line">server.jsp-servlet.init-parameters.*= # Init parameters used to configure the JSP servlet</span><br><span class="line">server.jsp-servlet.registered=true # Whether or not the JSP servlet is registered</span><br><span class="line">server.port=8080 # Server HTTP port.</span><br><span class="line">server.server-header= # Value to use for the Server response header (no header is sent if empty)</span><br><span class="line">server.servlet-path=/ # Path of the main dispatcher servlet.</span><br><span class="line">server.use-forward-headers= # If X-Forwarded-* headers should be applied to the HttpRequest.</span><br><span class="line">server.session.cookie.comment= # Comment for the session cookie.</span><br><span class="line">server.session.cookie.domain= # Domain for the session cookie.</span><br><span class="line">server.session.cookie.http-only= # &quot;HttpOnly&quot; flag for the session cookie.</span><br><span class="line">server.session.cookie.max-age= # Maximum age of the session cookie in seconds.</span><br><span class="line">server.session.cookie.name= # Session cookie name.</span><br><span class="line">server.session.cookie.path= # Path of the session cookie.</span><br><span class="line">server.session.cookie.secure= # &quot;Secure&quot; flag for the session cookie.</span><br><span class="line">server.session.persistent=false # Persist session data between restarts.</span><br><span class="line">server.session.store-dir= # Directory used to store session data.</span><br><span class="line">server.session.timeout= # Session timeout in seconds.</span><br><span class="line">server.session.tracking-modes= # Session tracking modes (one or more of the following: &quot;cookie&quot;, &quot;url&quot;, &quot;ssl&quot;).</span><br><span class="line">server.ssl.ciphers= # Supported SSL ciphers.</span><br><span class="line">server.ssl.client-auth= # Whether client authentication is wanted (&quot;want&quot;) or needed (&quot;need&quot;). Requires a trust store.</span><br><span class="line">server.ssl.enabled= # Enable SSL support.</span><br><span class="line">server.ssl.enabled-protocols= # Enabled SSL protocols.</span><br><span class="line">server.ssl.key-alias= # Alias that identifies the key in the key store.</span><br><span class="line">server.ssl.key-password= # Password used to access the key in the key store.</span><br><span class="line">server.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file).</span><br><span class="line">server.ssl.key-store-password= # Password used to access the key store.</span><br><span class="line">server.ssl.key-store-provider= # Provider for the key store.</span><br><span class="line">server.ssl.key-store-type= # Type of the key store.</span><br><span class="line">server.ssl.protocol=TLS # SSL protocol to use.</span><br><span class="line">server.ssl.trust-store= # Trust store that holds SSL certificates.</span><br><span class="line">server.ssl.trust-store-password= # Password used to access the trust store.</span><br><span class="line">server.ssl.trust-store-provider= # Provider for the trust store.</span><br><span class="line">server.ssl.trust-store-type= # Type of the trust store.</span><br><span class="line">server.tomcat.accept-count= # Maximum queue length for incoming connection requests when all possible request processing threads are in use.</span><br><span class="line">server.tomcat.accesslog.buffered=true # Buffer output such that it is only flushed periodically.</span><br><span class="line">server.tomcat.accesslog.directory=logs # Directory in which log files are created. Can be relative to the tomcat base dir or absolute.</span><br><span class="line">server.tomcat.accesslog.enabled=false # Enable access log.</span><br><span class="line">server.tomcat.accesslog.pattern=common # Format pattern for access logs.</span><br><span class="line">server.tomcat.accesslog.prefix=access_log # Log file name prefix.</span><br><span class="line">server.tomcat.accesslog.rename-on-rotate=false # Defer inclusion of the date stamp in the file name until rotate time.</span><br><span class="line">server.tomcat.accesslog.request-attributes-enabled=false # Set request attributes for IP address, Hostname, protocol and port used for the request.</span><br><span class="line">server.tomcat.accesslog.rotate=true # Enable access log rotation.</span><br><span class="line">server.tomcat.accesslog.suffix=.log # Log file name suffix.</span><br><span class="line">server.tomcat.additional-tld-skip-patterns= # Comma-separated list of additional patterns that match jars to ignore for TLD scanning.</span><br><span class="line">server.tomcat.background-processor-delay=30 # Delay in seconds between the invocation of backgroundProcess methods.</span><br><span class="line">server.tomcat.basedir= # Tomcat base directory. If not specified a temporary directory will be used.</span><br><span class="line">server.tomcat.internal-proxies=10\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span><br><span class="line">        192\\.168\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span><br><span class="line">        169\\.254\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span><br><span class="line">        127\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span><br><span class="line">        172\\.1[6-9]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span><br><span class="line">        172\\.2[0-9]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span><br><span class="line">        172\\.3[0-1]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125; # regular expression matching trusted IP addresses.</span><br><span class="line">server.tomcat.max-connections= # Maximum number of connections that the server will accept and process at any given time.</span><br><span class="line">server.tomcat.max-http-post-size=0 # Maximum size in bytes of the HTTP post content.</span><br><span class="line">server.tomcat.max-threads=0 # Maximum amount of worker threads.</span><br><span class="line">server.tomcat.min-spare-threads=0 # Minimum amount of worker threads.</span><br><span class="line">server.tomcat.port-header=X-Forwarded-Port # Name of the HTTP header used to override the original port value.</span><br><span class="line">server.tomcat.protocol-header= # Header that holds the incoming protocol, usually named &quot;X-Forwarded-Proto&quot;.</span><br><span class="line">server.tomcat.protocol-header-https-value=https # Value of the protocol header that indicates that the incoming request uses SSL.</span><br><span class="line">server.tomcat.redirect-context-root= # Whether requests to the context root should be redirected by appending a / to the path.</span><br><span class="line">server.tomcat.remote-ip-header= # Name of the http header from which the remote ip is extracted. For instance `X-FORWARDED-FOR`</span><br><span class="line">server.tomcat.uri-encoding=UTF-8 # Character encoding to use to decode the URI.</span><br><span class="line">server.undertow.accesslog.dir= # Undertow access log directory.</span><br><span class="line">server.undertow.accesslog.enabled=false # Enable access log.</span><br><span class="line">server.undertow.accesslog.pattern=common # Format pattern for access logs.</span><br><span class="line">server.undertow.accesslog.prefix=access_log. # Log file name prefix.</span><br><span class="line">server.undertow.accesslog.rotate=true # Enable access log rotation.</span><br><span class="line">server.undertow.accesslog.suffix=log # Log file name suffix.</span><br><span class="line">server.undertow.buffer-size= # Size of each buffer in bytes.</span><br><span class="line">server.undertow.buffers-per-region= # Number of buffer per region.</span><br><span class="line">server.undertow.direct-buffers= # Allocate buffers outside the Java heap.</span><br><span class="line">server.undertow.io-threads= # Number of I/O threads to create for the worker.</span><br><span class="line">server.undertow.max-http-post-size=0 # Maximum size in bytes of the HTTP post content.</span><br><span class="line">server.undertow.worker-threads= # Number of worker threads.</span><br><span class="line"></span><br><span class="line"># FREEMARKER (FreeMarkerAutoConfiguration)</span><br><span class="line">spring.freemarker.allow-request-override=false # Set whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.</span><br><span class="line">spring.freemarker.allow-session-override=false # Set whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.</span><br><span class="line">spring.freemarker.cache=false # Enable template caching.</span><br><span class="line">spring.freemarker.charset=UTF-8 # Template encoding.</span><br><span class="line">spring.freemarker.check-template-location=true # Check that the templates location exists.</span><br><span class="line">spring.freemarker.content-type=text/html # Content-Type value.</span><br><span class="line">spring.freemarker.enabled=true # Enable MVC view resolution for this technology.</span><br><span class="line">spring.freemarker.expose-request-attributes=false # Set whether all request attributes should be added to the model prior to merging with the template.</span><br><span class="line">spring.freemarker.expose-session-attributes=false # Set whether all HttpSession attributes should be added to the model prior to merging with the template.</span><br><span class="line">spring.freemarker.expose-spring-macro-helpers=true # Set whether to expose a RequestContext for use by Spring&apos;s macro library, under the name &quot;springMacroRequestContext&quot;.</span><br><span class="line">spring.freemarker.prefer-file-system-access=true # Prefer file system access for template loading. File system access enables hot detection of template changes.</span><br><span class="line">spring.freemarker.prefix= # Prefix that gets prepended to view names when building a URL.</span><br><span class="line">spring.freemarker.request-context-attribute= # Name of the RequestContext attribute for all views.</span><br><span class="line">spring.freemarker.settings.*= # Well-known FreeMarker keys which will be passed to FreeMarker&apos;s Configuration.</span><br><span class="line">spring.freemarker.suffix= # Suffix that gets appended to view names when building a URL.</span><br><span class="line">spring.freemarker.template-loader-path=classpath:/templates/ # Comma-separated list of template paths.</span><br><span class="line">spring.freemarker.view-names= # White list of view names that can be resolved.</span><br><span class="line"></span><br><span class="line"># GROOVY TEMPLATES (GroovyTemplateAutoConfiguration)</span><br><span class="line">spring.groovy.template.allow-request-override=false # Set whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.</span><br><span class="line">spring.groovy.template.allow-session-override=false # Set whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.</span><br><span class="line">spring.groovy.template.cache= # Enable template caching.</span><br><span class="line">spring.groovy.template.charset=UTF-8 # Template encoding.</span><br><span class="line">spring.groovy.template.check-template-location=true # Check that the templates location exists.</span><br><span class="line">spring.groovy.template.configuration.*= # See GroovyMarkupConfigurer</span><br><span class="line">spring.groovy.template.content-type=test/html # Content-Type value.</span><br><span class="line">spring.groovy.template.enabled=true # Enable MVC view resolution for this technology.</span><br><span class="line">spring.groovy.template.expose-request-attributes=false # Set whether all request attributes should be added to the model prior to merging with the template.</span><br><span class="line">spring.groovy.template.expose-session-attributes=false # Set whether all HttpSession attributes should be added to the model prior to merging with the template.</span><br><span class="line">spring.groovy.template.expose-spring-macro-helpers=true # Set whether to expose a RequestContext for use by Spring&apos;s macro library, under the name &quot;springMacroRequestContext&quot;.</span><br><span class="line">spring.groovy.template.prefix= # Prefix that gets prepended to view names when building a URL.</span><br><span class="line">spring.groovy.template.request-context-attribute= # Name of the RequestContext attribute for all views.</span><br><span class="line">spring.groovy.template.resource-loader-path=classpath:/templates/ # Template path.</span><br><span class="line">spring.groovy.template.suffix=.tpl # Suffix that gets appended to view names when building a URL.</span><br><span class="line">spring.groovy.template.view-names= # White list of view names that can be resolved.</span><br><span class="line"></span><br><span class="line"># SPRING HATEOAS (HateoasProperties)</span><br><span class="line">spring.hateoas.use-hal-as-default-json-media-type=true # Specify if application/hal+json responses should be sent to requests that accept application/json.</span><br><span class="line"></span><br><span class="line"># HTTP message conversion</span><br><span class="line">spring.http.converters.preferred-json-mapper=jackson # Preferred JSON mapper to use for HTTP message conversion. Set to &quot;gson&quot; to force the use of Gson when both it and Jackson are on the classpath.</span><br><span class="line"></span><br><span class="line"># HTTP encoding (HttpEncodingProperties)</span><br><span class="line">spring.http.encoding.charset=UTF-8 # Charset of HTTP requests and responses. Added to the &quot;Content-Type&quot; header if not set explicitly.</span><br><span class="line">spring.http.encoding.enabled=true # Enable http encoding support.</span><br><span class="line">spring.http.encoding.force= # Force the encoding to the configured charset on HTTP requests and responses.</span><br><span class="line">spring.http.encoding.force-request= # Force the encoding to the configured charset on HTTP requests. Defaults to true when &quot;force&quot; has not been specified.</span><br><span class="line">spring.http.encoding.force-response= # Force the encoding to the configured charset on HTTP responses.</span><br><span class="line">spring.http.encoding.mapping= # Locale to Encoding mapping.</span><br><span class="line"></span><br><span class="line"># MULTIPART (MultipartProperties)</span><br><span class="line">spring.http.multipart.enabled=true # Enable support of multi-part uploads.</span><br><span class="line">spring.http.multipart.file-size-threshold=0 # Threshold after which files will be written to disk. Values can use the suffixed &quot;MB&quot; or &quot;KB&quot; to indicate a Megabyte or Kilobyte size.</span><br><span class="line">spring.http.multipart.location= # Intermediate location of uploaded files.</span><br><span class="line">spring.http.multipart.max-file-size=1MB # Max file size. Values can use the suffixed &quot;MB&quot; or &quot;KB&quot; to indicate a Megabyte or Kilobyte size.</span><br><span class="line">spring.http.multipart.max-request-size=10MB # Max request size. Values can use the suffixed &quot;MB&quot; or &quot;KB&quot; to indicate a Megabyte or Kilobyte size.</span><br><span class="line">spring.http.multipart.resolve-lazily=false # Whether to resolve the multipart request lazily at the time of file or parameter access.</span><br><span class="line"></span><br><span class="line"># JACKSON (JacksonProperties)</span><br><span class="line">spring.jackson.date-format= # Date format string or a fully-qualified date format class name. For instance `yyyy-MM-dd HH:mm:ss`.</span><br><span class="line">spring.jackson.default-property-inclusion= # Controls the inclusion of properties during serialization.</span><br><span class="line">spring.jackson.deserialization.*= # Jackson on/off features that affect the way Java objects are deserialized.</span><br><span class="line">spring.jackson.generator.*= # Jackson on/off features for generators.</span><br><span class="line">spring.jackson.joda-date-time-format= # Joda date time format string. If not configured, &quot;date-format&quot; will be used as a fallback if it is configured with a format string.</span><br><span class="line">spring.jackson.locale= # Locale used for formatting.</span><br><span class="line">spring.jackson.mapper.*= # Jackson general purpose on/off features.</span><br><span class="line">spring.jackson.parser.*= # Jackson on/off features for parsers.</span><br><span class="line">spring.jackson.property-naming-strategy= # One of the constants on Jackson&apos;s PropertyNamingStrategy. Can also be a fully-qualified class name of a PropertyNamingStrategy subclass.</span><br><span class="line">spring.jackson.serialization.*= # Jackson on/off features that affect the way Java objects are serialized.</span><br><span class="line">spring.jackson.time-zone= # Time zone used when formatting dates. For instance `America/Los_Angeles`</span><br><span class="line"></span><br><span class="line"># JERSEY (JerseyProperties)</span><br><span class="line">spring.jersey.application-path= # Path that serves as the base URI for the application. Overrides the value of &quot;@ApplicationPath&quot; if specified.</span><br><span class="line">spring.jersey.filter.order=0 # Jersey filter chain order.</span><br><span class="line">spring.jersey.init.*= # Init parameters to pass to Jersey via the servlet or filter.</span><br><span class="line">spring.jersey.servlet.load-on-startup=-1 # Load on startup priority of the Jersey servlet.</span><br><span class="line">spring.jersey.type=servlet # Jersey integration type.</span><br><span class="line"></span><br><span class="line"># SPRING LDAP (LdapProperties)</span><br><span class="line">spring.ldap.urls= # LDAP URLs of the server.</span><br><span class="line">spring.ldap.base= # Base suffix from which all operations should originate.</span><br><span class="line">spring.ldap.username= # Login user of the server.</span><br><span class="line">spring.ldap.password= # Login password of the server.</span><br><span class="line">spring.ldap.base-environment.*= # LDAP specification settings.</span><br><span class="line"></span><br><span class="line"># EMBEDDED LDAP (EmbeddedLdapProperties)</span><br><span class="line">spring.ldap.embedded.base-dn= # The base DN</span><br><span class="line">spring.ldap.embedded.credential.username= # Embedded LDAP username.</span><br><span class="line">spring.ldap.embedded.credential.password= # Embedded LDAP password.</span><br><span class="line">spring.ldap.embedded.ldif=classpath:schema.ldif # Schema (LDIF) script resource reference.</span><br><span class="line">spring.ldap.embedded.port= # Embedded LDAP port.</span><br><span class="line">spring.ldap.embedded.validation.enabled=true # Enable LDAP schema validation.</span><br><span class="line">spring.ldap.embedded.validation.schema= # Path to the custom schema.</span><br><span class="line"></span><br><span class="line"># SPRING MOBILE DEVICE VIEWS (DeviceDelegatingViewResolverAutoConfiguration)</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.enable-fallback=false # Enable support for fallback resolution.</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.enabled=false # Enable device view resolver.</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.mobile-prefix=mobile/ # Prefix that gets prepended to view names for mobile devices.</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.mobile-suffix= # Suffix that gets appended to view names for mobile devices.</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.normal-prefix= # Prefix that gets prepended to view names for normal devices.</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.normal-suffix= # Suffix that gets appended to view names for normal devices.</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.tablet-prefix=tablet/ # Prefix that gets prepended to view names for tablet devices.</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.tablet-suffix= # Suffix that gets appended to view names for tablet devices.</span><br><span class="line"></span><br><span class="line"># SPRING MOBILE SITE PREFERENCE (SitePreferenceAutoConfiguration)</span><br><span class="line">spring.mobile.sitepreference.enabled=true # Enable SitePreferenceHandler.</span><br><span class="line"></span><br><span class="line"># MUSTACHE TEMPLATES (MustacheAutoConfiguration)</span><br><span class="line">spring.mustache.allow-request-override= # Set whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.</span><br><span class="line">spring.mustache.allow-session-override= # Set whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.</span><br><span class="line">spring.mustache.cache= # Enable template caching.</span><br><span class="line">spring.mustache.charset= # Template encoding.</span><br><span class="line">spring.mustache.check-template-location= # Check that the templates location exists.</span><br><span class="line">spring.mustache.content-type= # Content-Type value.</span><br><span class="line">spring.mustache.enabled= # Enable MVC view resolution for this technology.</span><br><span class="line">spring.mustache.expose-request-attributes= # Set whether all request attributes should be added to the model prior to merging with the template.</span><br><span class="line">spring.mustache.expose-session-attributes= # Set whether all HttpSession attributes should be added to the model prior to merging with the template.</span><br><span class="line">spring.mustache.expose-spring-macro-helpers= # Set whether to expose a RequestContext for use by Spring&apos;s macro library, under the name &quot;springMacroRequestContext&quot;.</span><br><span class="line">spring.mustache.prefix=classpath:/templates/ # Prefix to apply to template names.</span><br><span class="line">spring.mustache.request-context-attribute= # Name of the RequestContext attribute for all views.</span><br><span class="line">spring.mustache.suffix=.html # Suffix to apply to template names.</span><br><span class="line">spring.mustache.view-names= # White list of view names that can be resolved.</span><br><span class="line"></span><br><span class="line"># SPRING MVC (WebMvcProperties)</span><br><span class="line">spring.mvc.async.request-timeout= # Amount of time (in milliseconds) before asynchronous request handling times out.</span><br><span class="line">spring.mvc.date-format= # Date format to use. For instance `dd/MM/yyyy`.</span><br><span class="line">spring.mvc.dispatch-trace-request=false # Dispatch TRACE requests to the FrameworkServlet doService method.</span><br><span class="line">spring.mvc.dispatch-options-request=true # Dispatch OPTIONS requests to the FrameworkServlet doService method.</span><br><span class="line">spring.mvc.favicon.enabled=true # Enable resolution of favicon.ico.</span><br><span class="line">spring.mvc.formcontent.putfilter.enabled=true # Enable Spring&apos;s HttpPutFormContentFilter.</span><br><span class="line">spring.mvc.ignore-default-model-on-redirect=true # If the content of the &quot;default&quot; model should be ignored during redirect scenarios.</span><br><span class="line">spring.mvc.locale= # Locale to use. By default, this locale is overridden by the &quot;Accept-Language&quot; header.</span><br><span class="line">spring.mvc.locale-resolver=accept-header # Define how the locale should be resolved.</span><br><span class="line">spring.mvc.log-resolved-exception=false # Enable warn logging of exceptions resolved by a &quot;HandlerExceptionResolver&quot;.</span><br><span class="line">spring.mvc.media-types.*= # Maps file extensions to media types for content negotiation.</span><br><span class="line">spring.mvc.message-codes-resolver-format= # Formatting strategy for message codes. For instance `PREFIX_ERROR_CODE`.</span><br><span class="line">spring.mvc.servlet.load-on-startup=-1 # Load on startup priority of the Spring Web Services servlet.</span><br><span class="line">spring.mvc.static-path-pattern=/** # Path pattern used for static resources.</span><br><span class="line">spring.mvc.throw-exception-if-no-handler-found=false # If a &quot;NoHandlerFoundException&quot; should be thrown if no Handler was found to process a request.</span><br><span class="line">spring.mvc.view.prefix= # Spring MVC view prefix.</span><br><span class="line">spring.mvc.view.suffix= # Spring MVC view suffix.</span><br><span class="line"></span><br><span class="line"># SPRING RESOURCES HANDLING (ResourceProperties)</span><br><span class="line">spring.resources.add-mappings=true # Enable default resource handling.</span><br><span class="line">spring.resources.cache-period= # Cache period for the resources served by the resource handler, in seconds.</span><br><span class="line">spring.resources.chain.cache=true # Enable caching in the Resource chain.</span><br><span class="line">spring.resources.chain.enabled= # Enable the Spring Resource Handling chain. Disabled by default unless at least one strategy has been enabled.</span><br><span class="line">spring.resources.chain.gzipped=false # Enable resolution of already gzipped resources.</span><br><span class="line">spring.resources.chain.html-application-cache=false # Enable HTML5 application cache manifest rewriting.</span><br><span class="line">spring.resources.chain.strategy.content.enabled=false # Enable the content Version Strategy.</span><br><span class="line">spring.resources.chain.strategy.content.paths=/** # Comma-separated list of patterns to apply to the Version Strategy.</span><br><span class="line">spring.resources.chain.strategy.fixed.enabled=false # Enable the fixed Version Strategy.</span><br><span class="line">spring.resources.chain.strategy.fixed.paths=/** # Comma-separated list of patterns to apply to the Version Strategy.</span><br><span class="line">spring.resources.chain.strategy.fixed.version= # Version string to use for the Version Strategy.</span><br><span class="line">spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/ # Locations of static resources.</span><br><span class="line"></span><br><span class="line"># SPRING SESSION (SessionProperties)</span><br><span class="line">spring.session.hazelcast.flush-mode=on-save # Sessions flush mode.</span><br><span class="line">spring.session.hazelcast.map-name=spring:session:sessions # Name of the map used to store sessions.</span><br><span class="line">spring.session.jdbc.initializer.enabled= # Create the required session tables on startup if necessary. Enabled automatically if the default table name is set or a custom schema is configured.</span><br><span class="line">spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.</span><br><span class="line">spring.session.jdbc.table-name=SPRING_SESSION # Name of database table used to store sessions.</span><br><span class="line">spring.session.mongo.collection-name=sessions # Collection name used to store sessions.</span><br><span class="line">spring.session.redis.flush-mode=on-save # Sessions flush mode.</span><br><span class="line">spring.session.redis.namespace= # Namespace for keys used to store sessions.</span><br><span class="line">spring.session.store-type= # Session store type.</span><br><span class="line"></span><br><span class="line"># SPRING SOCIAL (SocialWebAutoConfiguration)</span><br><span class="line">spring.social.auto-connection-views=false # Enable the connection status view for supported providers.</span><br><span class="line"></span><br><span class="line"># SPRING SOCIAL FACEBOOK (FacebookAutoConfiguration)</span><br><span class="line">spring.social.facebook.app-id= # your application&apos;s Facebook App ID</span><br><span class="line">spring.social.facebook.app-secret= # your application&apos;s Facebook App Secret</span><br><span class="line"></span><br><span class="line"># SPRING SOCIAL LINKEDIN (LinkedInAutoConfiguration)</span><br><span class="line">spring.social.linkedin.app-id= # your application&apos;s LinkedIn App ID</span><br><span class="line">spring.social.linkedin.app-secret= # your application&apos;s LinkedIn App Secret</span><br><span class="line"></span><br><span class="line"># SPRING SOCIAL TWITTER (TwitterAutoConfiguration)</span><br><span class="line">spring.social.twitter.app-id= # your application&apos;s Twitter App ID</span><br><span class="line">spring.social.twitter.app-secret= # your application&apos;s Twitter App Secret</span><br><span class="line"></span><br><span class="line"># THYMELEAF (ThymeleafAutoConfiguration)</span><br><span class="line">spring.thymeleaf.cache=true # Enable template caching.</span><br><span class="line">spring.thymeleaf.check-template=true # Check that the template exists before rendering it.</span><br><span class="line">spring.thymeleaf.check-template-location=true # Check that the templates location exists.</span><br><span class="line">spring.thymeleaf.content-type=text/html # Content-Type value.</span><br><span class="line">spring.thymeleaf.enabled=true # Enable MVC Thymeleaf view resolution.</span><br><span class="line">spring.thymeleaf.encoding=UTF-8 # Template encoding.</span><br><span class="line">spring.thymeleaf.excluded-view-names= # Comma-separated list of view names that should be excluded from resolution.</span><br><span class="line">spring.thymeleaf.mode=HTML5 # Template mode to be applied to templates. See also StandardTemplateModeHandlers.</span><br><span class="line">spring.thymeleaf.prefix=classpath:/templates/ # Prefix that gets prepended to view names when building a URL.</span><br><span class="line">spring.thymeleaf.suffix=.html # Suffix that gets appended to view names when building a URL.</span><br><span class="line">spring.thymeleaf.template-resolver-order= # Order of the template resolver in the chain.</span><br><span class="line">spring.thymeleaf.view-names= # Comma-separated list of view names that can be resolved.</span><br><span class="line"></span><br><span class="line"># SPRING WEB SERVICES (WebServicesProperties)</span><br><span class="line">spring.webservices.path=/services # Path that serves as the base URI for the services.</span><br><span class="line">spring.webservices.servlet.init= # Servlet init parameters to pass to Spring Web Services.</span><br><span class="line">spring.webservices.servlet.load-on-startup=-1 # Load on startup priority of the Spring Web Services servlet.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># SECURITY PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"># SECURITY (SecurityProperties)</span><br><span class="line">security.basic.authorize-mode=role # Security authorize mode to apply.</span><br><span class="line">security.basic.enabled=true # Enable basic authentication.</span><br><span class="line">security.basic.path=/** # Comma-separated list of paths to secure.</span><br><span class="line">security.basic.realm=Spring # HTTP basic realm name.</span><br><span class="line">security.enable-csrf=false # Enable Cross Site Request Forgery support.</span><br><span class="line">security.filter-order=0 # Security filter chain order.</span><br><span class="line">security.filter-dispatcher-types=ASYNC, FORWARD, INCLUDE, REQUEST # Security filter chain dispatcher types.</span><br><span class="line">security.headers.cache=true # Enable cache control HTTP headers.</span><br><span class="line">security.headers.content-security-policy= # Value for content security policy header.</span><br><span class="line">security.headers.content-security-policy-mode=default # Content security policy mode.</span><br><span class="line">security.headers.content-type=true # Enable &quot;X-Content-Type-Options&quot; header.</span><br><span class="line">security.headers.frame=true # Enable &quot;X-Frame-Options&quot; header.</span><br><span class="line">security.headers.hsts=all # HTTP Strict Transport Security (HSTS) mode (none, domain, all).</span><br><span class="line">security.headers.xss=true # Enable cross site scripting (XSS) protection.</span><br><span class="line">security.ignored= # Comma-separated list of paths to exclude from the default secured paths.</span><br><span class="line">security.require-ssl=false # Enable secure channel for all requests.</span><br><span class="line">security.sessions=stateless # Session creation policy (always, never, if_required, stateless).</span><br><span class="line">security.user.name=user # Default user name.</span><br><span class="line">security.user.password= # Password for the default user name. A random password is logged on startup by default.</span><br><span class="line">security.user.role=USER # Granted roles for the default user name.</span><br><span class="line"></span><br><span class="line"># SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)</span><br><span class="line">security.oauth2.client.client-id= # OAuth2 client id.</span><br><span class="line">security.oauth2.client.client-secret= # OAuth2 client secret. A random secret is generated by default</span><br><span class="line"></span><br><span class="line"># SECURITY OAUTH2 RESOURCES (ResourceServerProperties)</span><br><span class="line">security.oauth2.resource.filter-order= # The order of the filter chain used to authenticate tokens.</span><br><span class="line">security.oauth2.resource.id= # Identifier of the resource.</span><br><span class="line">security.oauth2.resource.jwt.key-uri= # The URI of the JWT token. Can be set if the value is not available and the key is public.</span><br><span class="line">security.oauth2.resource.jwt.key-value= # The verification key of the JWT token. Can either be a symmetric secret or PEM-encoded RSA public key.</span><br><span class="line">security.oauth2.resource.prefer-token-info=true # Use the token info, can be set to false to use the user info.</span><br><span class="line">security.oauth2.resource.service-id=resource #</span><br><span class="line">security.oauth2.resource.token-info-uri= # URI of the token decoding endpoint.</span><br><span class="line">security.oauth2.resource.token-type= # The token type to send when using the userInfoUri.</span><br><span class="line">security.oauth2.resource.user-info-uri= # URI of the user endpoint.</span><br><span class="line"></span><br><span class="line"># SECURITY OAUTH2 SSO (OAuth2SsoProperties)</span><br><span class="line">security.oauth2.sso.filter-order= # Filter order to apply if not providing an explicit WebSecurityConfigurerAdapter</span><br><span class="line">security.oauth2.sso.login-path=/login # Path to the login page, i.e. the one that triggers the redirect to the OAuth2 Authorization Server</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># DATA PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"></span><br><span class="line"># FLYWAY (FlywayProperties)</span><br><span class="line">flyway.baseline-description= #</span><br><span class="line">flyway.baseline-version=1 # version to start migration</span><br><span class="line">flyway.baseline-on-migrate= #</span><br><span class="line">flyway.check-location=false # Check that migration scripts location exists.</span><br><span class="line">flyway.clean-on-validation-error= #</span><br><span class="line">flyway.enabled=true # Enable flyway.</span><br><span class="line">flyway.encoding= #</span><br><span class="line">flyway.ignore-failed-future-migration= #</span><br><span class="line">flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it.</span><br><span class="line">flyway.locations=classpath:db/migration # locations of migrations scripts</span><br><span class="line">flyway.out-of-order= #</span><br><span class="line">flyway.password= # JDBC password if you want Flyway to create its own DataSource</span><br><span class="line">flyway.placeholder-prefix= #</span><br><span class="line">flyway.placeholder-replacement= #</span><br><span class="line">flyway.placeholder-suffix= #</span><br><span class="line">flyway.placeholders.*= #</span><br><span class="line">flyway.schemas= # schemas to update</span><br><span class="line">flyway.sql-migration-prefix=V #</span><br><span class="line">flyway.sql-migration-separator= #</span><br><span class="line">flyway.sql-migration-suffix=.sql #</span><br><span class="line">flyway.table= #</span><br><span class="line">flyway.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.</span><br><span class="line">flyway.user= # Login user of the database to migrate.</span><br><span class="line">flyway.validate-on-migrate= #</span><br><span class="line"></span><br><span class="line"># LIQUIBASE (LiquibaseProperties)</span><br><span class="line">liquibase.change-log=classpath:/db/changelog/db.changelog-master.yaml # Change log configuration path.</span><br><span class="line">liquibase.check-change-log-location=true # Check the change log location exists.</span><br><span class="line">liquibase.contexts= # Comma-separated list of runtime contexts to use.</span><br><span class="line">liquibase.default-schema= # Default database schema.</span><br><span class="line">liquibase.drop-first=false # Drop the database schema first.</span><br><span class="line">liquibase.enabled=true # Enable liquibase support.</span><br><span class="line">liquibase.labels= # Comma-separated list of runtime labels to use.</span><br><span class="line">liquibase.parameters.*= # Change log parameters.</span><br><span class="line">liquibase.password= # Login password of the database to migrate.</span><br><span class="line">liquibase.rollback-file= # File to which rollback SQL will be written when an update is performed.</span><br><span class="line">liquibase.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.</span><br><span class="line">liquibase.user= # Login user of the database to migrate.</span><br><span class="line"></span><br><span class="line"># COUCHBASE (CouchbaseProperties)</span><br><span class="line">spring.couchbase.bootstrap-hosts= # Couchbase nodes (host or IP address) to bootstrap from.</span><br><span class="line">spring.couchbase.bucket.name=default # Name of the bucket to connect to.</span><br><span class="line">spring.couchbase.bucket.password=  # Password of the bucket.</span><br><span class="line">spring.couchbase.env.endpoints.key-value=1 # Number of sockets per node against the Key/value service.</span><br><span class="line">spring.couchbase.env.endpoints.query=1 # Number of sockets per node against the Query (N1QL) service.</span><br><span class="line">spring.couchbase.env.endpoints.view=1 # Number of sockets per node against the view service.</span><br><span class="line">spring.couchbase.env.ssl.enabled= # Enable SSL support. Enabled automatically if a &quot;keyStore&quot; is provided unless specified otherwise.</span><br><span class="line">spring.couchbase.env.ssl.key-store= # Path to the JVM key store that holds the certificates.</span><br><span class="line">spring.couchbase.env.ssl.key-store-password= # Password used to access the key store.</span><br><span class="line">spring.couchbase.env.timeouts.connect=5000 # Bucket connections timeout in milliseconds.</span><br><span class="line">spring.couchbase.env.timeouts.key-value=2500 # Blocking operations performed on a specific key timeout in milliseconds.</span><br><span class="line">spring.couchbase.env.timeouts.query=7500 # N1QL query operations timeout in milliseconds.</span><br><span class="line">spring.couchbase.env.timeouts.socket-connect=1000 # Socket connect connections timeout in milliseconds.</span><br><span class="line">spring.couchbase.env.timeouts.view=7500 # Regular and geospatial view operations timeout in milliseconds.</span><br><span class="line"></span><br><span class="line"># DAO (PersistenceExceptionTranslationAutoConfiguration)</span><br><span class="line">spring.dao.exceptiontranslation.enabled=true # Enable the PersistenceExceptionTranslationPostProcessor.</span><br><span class="line"></span><br><span class="line"># CASSANDRA (CassandraProperties)</span><br><span class="line">spring.data.cassandra.cluster-name= # Name of the Cassandra cluster.</span><br><span class="line">spring.data.cassandra.compression=none # Compression supported by the Cassandra binary protocol.</span><br><span class="line">spring.data.cassandra.connect-timeout-millis= # Socket option: connection time out.</span><br><span class="line">spring.data.cassandra.consistency-level= # Queries consistency level.</span><br><span class="line">spring.data.cassandra.contact-points=localhost # Comma-separated list of cluster node addresses.</span><br><span class="line">spring.data.cassandra.fetch-size= # Queries default fetch size.</span><br><span class="line">spring.data.cassandra.keyspace-name= # Keyspace name to use.</span><br><span class="line">spring.data.cassandra.load-balancing-policy= # Class name of the load balancing policy.</span><br><span class="line">spring.data.cassandra.port= # Port of the Cassandra server.</span><br><span class="line">spring.data.cassandra.password= # Login password of the server.</span><br><span class="line">spring.data.cassandra.read-timeout-millis= # Socket option: read time out.</span><br><span class="line">spring.data.cassandra.reconnection-policy= # Reconnection policy class.</span><br><span class="line">spring.data.cassandra.retry-policy= # Class name of the retry policy.</span><br><span class="line">spring.data.cassandra.serial-consistency-level= # Queries serial consistency level.</span><br><span class="line">spring.data.cassandra.schema-action=none # Schema action to take at startup.</span><br><span class="line">spring.data.cassandra.ssl=false # Enable SSL support.</span><br><span class="line">spring.data.cassandra.username= # Login user of the server.</span><br><span class="line"></span><br><span class="line"># DATA COUCHBASE (CouchbaseDataProperties)</span><br><span class="line">spring.data.couchbase.auto-index=false # Automatically create views and indexes.</span><br><span class="line">spring.data.couchbase.consistency=read-your-own-writes # Consistency to apply by default on generated queries.</span><br><span class="line">spring.data.couchbase.repositories.enabled=true # Enable Couchbase repositories.</span><br><span class="line"></span><br><span class="line"># ELASTICSEARCH (ElasticsearchProperties)</span><br><span class="line">spring.data.elasticsearch.cluster-name=elasticsearch # Elasticsearch cluster name.</span><br><span class="line">spring.data.elasticsearch.cluster-nodes= # Comma-separated list of cluster node addresses. If not specified, starts a client node.</span><br><span class="line">spring.data.elasticsearch.properties.*= # Additional properties used to configure the client.</span><br><span class="line">spring.data.elasticsearch.repositories.enabled=true # Enable Elasticsearch repositories.</span><br><span class="line"></span><br><span class="line"># DATA LDAP</span><br><span class="line">spring.data.ldap.repositories.enabled=true # Enable LDAP repositories.</span><br><span class="line"></span><br><span class="line"># MONGODB (MongoProperties)</span><br><span class="line">spring.data.mongodb.authentication-database= # Authentication database name.</span><br><span class="line">spring.data.mongodb.database=test # Database name.</span><br><span class="line">spring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.</span><br><span class="line">spring.data.mongodb.grid-fs-database= # GridFS database name.</span><br><span class="line">spring.data.mongodb.host=localhost # Mongo server host. Cannot be set with uri.</span><br><span class="line">spring.data.mongodb.password= # Login password of the mongo server. Cannot be set with uri.</span><br><span class="line">spring.data.mongodb.port=27017 # Mongo server port. Cannot be set with uri.</span><br><span class="line">spring.data.mongodb.repositories.enabled=true # Enable Mongo repositories.</span><br><span class="line">spring.data.mongodb.uri=mongodb://localhost/test # Mongo database URI. Cannot be set with host, port and credentials.</span><br><span class="line">spring.data.mongodb.username= # Login user of the mongo server. Cannot be set with uri.</span><br><span class="line"></span><br><span class="line"># DATA REDIS</span><br><span class="line">spring.data.redis.repositories.enabled=true # Enable Redis repositories.</span><br><span class="line"></span><br><span class="line"># NEO4J (Neo4jProperties)</span><br><span class="line">spring.data.neo4j.compiler= # Compiler to use.</span><br><span class="line">spring.data.neo4j.embedded.enabled=true # Enable embedded mode if the embedded driver is available.</span><br><span class="line">spring.data.neo4j.open-in-view=false # Register OpenSessionInViewInterceptor. Binds a Neo4j Session to the thread for the entire processing of the request.</span><br><span class="line">spring.data.neo4j.password= # Login password of the server.</span><br><span class="line">spring.data.neo4j.repositories.enabled=true # Enable Neo4j repositories.</span><br><span class="line">spring.data.neo4j.uri= # URI used by the driver. Auto-detected by default.</span><br><span class="line">spring.data.neo4j.username= # Login user of the server.</span><br><span class="line"></span><br><span class="line"># DATA REST (RepositoryRestProperties)</span><br><span class="line">spring.data.rest.base-path= # Base path to be used by Spring Data REST to expose repository resources.</span><br><span class="line">spring.data.rest.default-page-size= # Default size of pages.</span><br><span class="line">spring.data.rest.detection-strategy=default # Strategy to use to determine which repositories get exposed.</span><br><span class="line">spring.data.rest.enable-enum-translation= # Enable enum value translation via the Spring Data REST default resource bundle.</span><br><span class="line">spring.data.rest.limit-param-name= # Name of the URL query string parameter that indicates how many results to return at once.</span><br><span class="line">spring.data.rest.max-page-size= # Maximum size of pages.</span><br><span class="line">spring.data.rest.page-param-name= # Name of the URL query string parameter that indicates what page to return.</span><br><span class="line">spring.data.rest.return-body-on-create= # Return a response body after creating an entity.</span><br><span class="line">spring.data.rest.return-body-on-update= # Return a response body after updating an entity.</span><br><span class="line">spring.data.rest.sort-param-name= # Name of the URL query string parameter that indicates what direction to sort results.</span><br><span class="line"></span><br><span class="line"># SOLR (SolrProperties)</span><br><span class="line">spring.data.solr.host=http://127.0.0.1:8983/solr # Solr host. Ignored if &quot;zk-host&quot; is set.</span><br><span class="line">spring.data.solr.repositories.enabled=true # Enable Solr repositories.</span><br><span class="line">spring.data.solr.zk-host= # ZooKeeper host address in the form HOST:PORT.</span><br><span class="line"></span><br><span class="line"># DATASOURCE (DataSourceAutoConfiguration &amp; DataSourceProperties)</span><br><span class="line">spring.datasource.continue-on-error=false # Do not stop if an error occurs while initializing the database.</span><br><span class="line">spring.datasource.data= # Data (DML) script resource references.</span><br><span class="line">spring.datasource.data-username= # User of the database to execute DML scripts (if different).</span><br><span class="line">spring.datasource.data-password= # Password of the database to execute DML scripts (if different).</span><br><span class="line">spring.datasource.dbcp2.*= # Commons DBCP2 specific settings</span><br><span class="line">spring.datasource.driver-class-name= # Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.</span><br><span class="line">spring.datasource.generate-unique-name=false # Generate a random datasource name.</span><br><span class="line">spring.datasource.hikari.*= # Hikari specific settings</span><br><span class="line">spring.datasource.initialize=true # Populate the database using &apos;data.sql&apos;.</span><br><span class="line">spring.datasource.jmx-enabled=false # Enable JMX support (if provided by the underlying pool).</span><br><span class="line">spring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username &amp; password are ignored when set.</span><br><span class="line">spring.datasource.name=testdb # Name of the datasource.</span><br><span class="line">spring.datasource.password= # Login password of the database.</span><br><span class="line">spring.datasource.platform=all # Platform to use in the schema resource (schema-$&#123;platform&#125;.sql).</span><br><span class="line">spring.datasource.schema= # Schema (DDL) script resource references.</span><br><span class="line">spring.datasource.schema-username= # User of the database to execute DDL scripts (if different).</span><br><span class="line">spring.datasource.schema-password= # Password of the database to execute DDL scripts (if different).</span><br><span class="line">spring.datasource.separator=; # Statement separator in SQL initialization scripts.</span><br><span class="line">spring.datasource.sql-script-encoding= # SQL scripts encoding.</span><br><span class="line">spring.datasource.tomcat.*= # Tomcat datasource specific settings</span><br><span class="line">spring.datasource.type= # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.</span><br><span class="line">spring.datasource.url= # JDBC url of the database.</span><br><span class="line">spring.datasource.username=</span><br><span class="line"></span><br><span class="line"># JEST (Elasticsearch HTTP client) (JestProperties)</span><br><span class="line">spring.elasticsearch.jest.connection-timeout=3000 # Connection timeout in milliseconds.</span><br><span class="line">spring.elasticsearch.jest.multi-threaded=true # Enable connection requests from multiple execution threads.</span><br><span class="line">spring.elasticsearch.jest.password= # Login password.</span><br><span class="line">spring.elasticsearch.jest.proxy.host= # Proxy host the HTTP client should use.</span><br><span class="line">spring.elasticsearch.jest.proxy.port= # Proxy port the HTTP client should use.</span><br><span class="line">spring.elasticsearch.jest.read-timeout=3000 # Read timeout in milliseconds.</span><br><span class="line">spring.elasticsearch.jest.uris=http://localhost:9200 # Comma-separated list of the Elasticsearch instances to use.</span><br><span class="line">spring.elasticsearch.jest.username= # Login user.</span><br><span class="line"></span><br><span class="line"># H2 Web Console (H2ConsoleProperties)</span><br><span class="line">spring.h2.console.enabled=false # Enable the console.</span><br><span class="line">spring.h2.console.path=/h2-console # Path at which the console will be available.</span><br><span class="line">spring.h2.console.settings.trace=false # Enable trace output.</span><br><span class="line">spring.h2.console.settings.web-allow-others=false # Enable remote access.</span><br><span class="line"></span><br><span class="line"># JOOQ (JooqAutoConfiguration)</span><br><span class="line">spring.jooq.sql-dialect= # SQLDialect JOOQ used when communicating with the configured datasource. For instance `POSTGRES`</span><br><span class="line"></span><br><span class="line"># JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)</span><br><span class="line">spring.data.jpa.repositories.enabled=true # Enable JPA repositories.</span><br><span class="line">spring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the &quot;databasePlatform&quot; property.</span><br><span class="line">spring.jpa.database-platform= # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the &quot;Database&quot; enum.</span><br><span class="line">spring.jpa.generate-ddl=false # Initialize the schema on startup.</span><br><span class="line">spring.jpa.hibernate.ddl-auto= # DDL mode. This is actually a shortcut for the &quot;hibernate.hbm2ddl.auto&quot; property. Default to &quot;create-drop&quot; when using an embedded database, &quot;none&quot; otherwise.</span><br><span class="line">spring.jpa.hibernate.naming.implicit-strategy= # Hibernate 5 implicit naming strategy fully qualified name.</span><br><span class="line">spring.jpa.hibernate.naming.physical-strategy= # Hibernate 5 physical naming strategy fully qualified name.</span><br><span class="line">spring.jpa.hibernate.naming.strategy= # Hibernate 4 naming strategy fully qualified name. Not supported with Hibernate 5.</span><br><span class="line">spring.jpa.hibernate.use-new-id-generator-mappings= # Use Hibernate&apos;s newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.</span><br><span class="line">spring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.</span><br><span class="line">spring.jpa.properties.*= # Additional native properties to set on the JPA provider.</span><br><span class="line">spring.jpa.show-sql=false # Enable logging of SQL statements.</span><br><span class="line"></span><br><span class="line"># JTA (JtaAutoConfiguration)</span><br><span class="line">spring.jta.enabled=true # Enable JTA support.</span><br><span class="line">spring.jta.log-dir= # Transaction logs directory.</span><br><span class="line">spring.jta.transaction-manager-id= # Transaction manager unique identifier.</span><br><span class="line"></span><br><span class="line"># ATOMIKOS (AtomikosProperties)</span><br><span class="line">spring.jta.atomikos.connectionfactory.borrow-connection-timeout=30 # Timeout, in seconds, for borrowing connections from the pool.</span><br><span class="line">spring.jta.atomikos.connectionfactory.ignore-session-transacted-flag=true # Whether or not to ignore the transacted flag when creating session.</span><br><span class="line">spring.jta.atomikos.connectionfactory.local-transaction-mode=false # Whether or not local transactions are desired.</span><br><span class="line">spring.jta.atomikos.connectionfactory.maintenance-interval=60 # The time, in seconds, between runs of the pool&apos;s maintenance thread.</span><br><span class="line">spring.jta.atomikos.connectionfactory.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.</span><br><span class="line">spring.jta.atomikos.connectionfactory.max-lifetime=0 # The time, in seconds, that a connection can be pooled for before being destroyed. 0 denotes no limit.</span><br><span class="line">spring.jta.atomikos.connectionfactory.max-pool-size=1 # The maximum size of the pool.</span><br><span class="line">spring.jta.atomikos.connectionfactory.min-pool-size=1 # The minimum size of the pool.</span><br><span class="line">spring.jta.atomikos.connectionfactory.reap-timeout=0 # The reap timeout, in seconds, for borrowed connections. 0 denotes no limit.</span><br><span class="line">spring.jta.atomikos.connectionfactory.unique-resource-name=jmsConnectionFactory # The unique name used to identify the resource during recovery.</span><br><span class="line">spring.jta.atomikos.datasource.borrow-connection-timeout=30 # Timeout, in seconds, for borrowing connections from the pool.</span><br><span class="line">spring.jta.atomikos.datasource.default-isolation-level= # Default isolation level of connections provided by the pool.</span><br><span class="line">spring.jta.atomikos.datasource.login-timeout= # Timeout, in seconds, for establishing a database connection.</span><br><span class="line">spring.jta.atomikos.datasource.maintenance-interval=60 # The time, in seconds, between runs of the pool&apos;s maintenance thread.</span><br><span class="line">spring.jta.atomikos.datasource.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.</span><br><span class="line">spring.jta.atomikos.datasource.max-lifetime=0 # The time, in seconds, that a connection can be pooled for before being destroyed. 0 denotes no limit.</span><br><span class="line">spring.jta.atomikos.datasource.max-pool-size=1 # The maximum size of the pool.</span><br><span class="line">spring.jta.atomikos.datasource.min-pool-size=1 # The minimum size of the pool.</span><br><span class="line">spring.jta.atomikos.datasource.reap-timeout=0 # The reap timeout, in seconds, for borrowed connections. 0 denotes no limit.</span><br><span class="line">spring.jta.atomikos.datasource.test-query= # SQL query or statement used to validate a connection before returning it.</span><br><span class="line">spring.jta.atomikos.datasource.unique-resource-name=dataSource # The unique name used to identify the resource during recovery.</span><br><span class="line">spring.jta.atomikos.properties.checkpoint-interval=500 # Interval between checkpoints.</span><br><span class="line">spring.jta.atomikos.properties.console-file-count=1 # Number of debug logs files that can be created.</span><br><span class="line">spring.jta.atomikos.properties.console-file-limit=-1 # How many bytes can be stored at most in debug logs files.</span><br><span class="line">spring.jta.atomikos.properties.console-file-name=tm.out # Debug logs file name.</span><br><span class="line">spring.jta.atomikos.properties.console-log-level=warn # Console log level.</span><br><span class="line">spring.jta.atomikos.properties.default-jta-timeout=10000 # Default timeout for JTA transactions.</span><br><span class="line">spring.jta.atomikos.properties.enable-logging=true # Enable disk logging.</span><br><span class="line">spring.jta.atomikos.properties.force-shutdown-on-vm-exit=false # Specify if a VM shutdown should trigger forced shutdown of the transaction core.</span><br><span class="line">spring.jta.atomikos.properties.log-base-dir= # Directory in which the log files should be stored.</span><br><span class="line">spring.jta.atomikos.properties.log-base-name=tmlog # Transactions log file base name.</span><br><span class="line">spring.jta.atomikos.properties.max-actives=50 # Maximum number of active transactions.</span><br><span class="line">spring.jta.atomikos.properties.max-timeout=300000 # Maximum timeout (in milliseconds) that can be allowed for transactions.</span><br><span class="line">spring.jta.atomikos.properties.output-dir= # Directory in which to store the debug log files.</span><br><span class="line">spring.jta.atomikos.properties.serial-jta-transactions=true # Specify if sub-transactions should be joined when possible.</span><br><span class="line">spring.jta.atomikos.properties.service= # Transaction manager implementation that should be started.</span><br><span class="line">spring.jta.atomikos.properties.threaded-two-phase-commit=true # Use different (and concurrent) threads for two-phase commit on the participating resources.</span><br><span class="line">spring.jta.atomikos.properties.transaction-manager-unique-name= # Transaction manager&apos;s unique name.</span><br><span class="line"></span><br><span class="line"># BITRONIX</span><br><span class="line">spring.jta.bitronix.connectionfactory.acquire-increment=1 # Number of connections to create when growing the pool.</span><br><span class="line">spring.jta.bitronix.connectionfactory.acquisition-interval=1 # Time, in seconds, to wait before trying to acquire a connection again after an invalid connection was acquired.</span><br><span class="line">spring.jta.bitronix.connectionfactory.acquisition-timeout=30 # Timeout, in seconds, for acquiring connections from the pool.</span><br><span class="line">spring.jta.bitronix.connectionfactory.allow-local-transactions=true # Whether or not the transaction manager should allow mixing XA and non-XA transactions.</span><br><span class="line">spring.jta.bitronix.connectionfactory.apply-transaction-timeout=false # Whether or not the transaction timeout should be set on the XAResource when it is enlisted.</span><br><span class="line">spring.jta.bitronix.connectionfactory.automatic-enlisting-enabled=true # Whether or not resources should be enlisted and delisted automatically.</span><br><span class="line">spring.jta.bitronix.connectionfactory.cache-producers-consumers=true # Whether or not produces and consumers should be cached.</span><br><span class="line">spring.jta.bitronix.connectionfactory.defer-connection-release=true # Whether or not the provider can run many transactions on the same connection and supports transaction interleaving.</span><br><span class="line">spring.jta.bitronix.connectionfactory.ignore-recovery-failures=false # Whether or not recovery failures should be ignored.</span><br><span class="line">spring.jta.bitronix.connectionfactory.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.</span><br><span class="line">spring.jta.bitronix.connectionfactory.max-pool-size=10 # The maximum size of the pool. 0 denotes no limit.</span><br><span class="line">spring.jta.bitronix.connectionfactory.min-pool-size=0 # The minimum size of the pool.</span><br><span class="line">spring.jta.bitronix.connectionfactory.password= # The password to use to connect to the JMS provider.</span><br><span class="line">spring.jta.bitronix.connectionfactory.share-transaction-connections=false #  Whether or not connections in the ACCESSIBLE state can be shared within the context of a transaction.</span><br><span class="line">spring.jta.bitronix.connectionfactory.test-connections=true # Whether or not connections should be tested when acquired from the pool.</span><br><span class="line">spring.jta.bitronix.connectionfactory.two-pc-ordering-position=1 # The position that this resource should take during two-phase commit (always first is Integer.MIN_VALUE, always last is Integer.MAX_VALUE).</span><br><span class="line">spring.jta.bitronix.connectionfactory.unique-name=jmsConnectionFactory # The unique name used to identify the resource during recovery.</span><br><span class="line">spring.jta.bitronix.connectionfactory.use-tm-join=true Whether or not TMJOIN should be used when starting XAResources.</span><br><span class="line">spring.jta.bitronix.connectionfactory.user= # The user to use to connect to the JMS provider.</span><br><span class="line">spring.jta.bitronix.datasource.acquire-increment=1 # Number of connections to create when growing the pool.</span><br><span class="line">spring.jta.bitronix.datasource.acquisition-interval=1 # Time, in seconds, to wait before trying to acquire a connection again after an invalid connection was acquired.</span><br><span class="line">spring.jta.bitronix.datasource.acquisition-timeout=30 # Timeout, in seconds, for acquiring connections from the pool.</span><br><span class="line">spring.jta.bitronix.datasource.allow-local-transactions=true # Whether or not the transaction manager should allow mixing XA and non-XA transactions.</span><br><span class="line">spring.jta.bitronix.datasource.apply-transaction-timeout=false # Whether or not the transaction timeout should be set on the XAResource when it is enlisted.</span><br><span class="line">spring.jta.bitronix.datasource.automatic-enlisting-enabled=true # Whether or not resources should be enlisted and delisted automatically.</span><br><span class="line">spring.jta.bitronix.datasource.cursor-holdability= # The default cursor holdability for connections.</span><br><span class="line">spring.jta.bitronix.datasource.defer-connection-release=true # Whether or not the database can run many transactions on the same connection and supports transaction interleaving.</span><br><span class="line">spring.jta.bitronix.datasource.enable-jdbc4-connection-test= # Whether or not Connection.isValid() is called when acquiring a connection from the pool.</span><br><span class="line">spring.jta.bitronix.datasource.ignore-recovery-failures=false # Whether or not recovery failures should be ignored.</span><br><span class="line">spring.jta.bitronix.datasource.isolation-level= # The default isolation level for connections.</span><br><span class="line">spring.jta.bitronix.datasource.local-auto-commit= # The default auto-commit mode for local transactions.</span><br><span class="line">spring.jta.bitronix.datasource.login-timeout= # Timeout, in seconds, for establishing a database connection.</span><br><span class="line">spring.jta.bitronix.datasource.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.</span><br><span class="line">spring.jta.bitronix.datasource.max-pool-size=10 # The maximum size of the pool. 0 denotes no limit.</span><br><span class="line">spring.jta.bitronix.datasource.min-pool-size=0 # The minimum size of the pool.</span><br><span class="line">spring.jta.bitronix.datasource.prepared-statement-cache-size=0 # The target size of the prepared statement cache. 0 disables the cache.</span><br><span class="line">spring.jta.bitronix.datasource.share-transaction-connections=false #  Whether or not connections in the ACCESSIBLE state can be shared within the context of a transaction.</span><br><span class="line">spring.jta.bitronix.datasource.test-query= # SQL query or statement used to validate a connection before returning it.</span><br><span class="line">spring.jta.bitronix.datasource.two-pc-ordering-position=1 # The position that this resource should take during two-phase commit (always first is Integer.MIN_VALUE, always last is Integer.MAX_VALUE).</span><br><span class="line">spring.jta.bitronix.datasource.unique-name=dataSource # The unique name used to identify the resource during recovery.</span><br><span class="line">spring.jta.bitronix.datasource.use-tm-join=true Whether or not TMJOIN should be used when starting XAResources.</span><br><span class="line">spring.jta.bitronix.properties.allow-multiple-lrc=false # Allow multiple LRC resources to be enlisted into the same transaction.</span><br><span class="line">spring.jta.bitronix.properties.asynchronous2-pc=false # Enable asynchronously execution of two phase commit.</span><br><span class="line">spring.jta.bitronix.properties.background-recovery-interval-seconds=60 # Interval in seconds at which to run the recovery process in the background.</span><br><span class="line">spring.jta.bitronix.properties.current-node-only-recovery=true # Recover only the current node.</span><br><span class="line">spring.jta.bitronix.properties.debug-zero-resource-transaction=false # Log the creation and commit call stacks of transactions executed without a single enlisted resource.</span><br><span class="line">spring.jta.bitronix.properties.default-transaction-timeout=60 # Default transaction timeout in seconds.</span><br><span class="line">spring.jta.bitronix.properties.disable-jmx=false # Enable JMX support.</span><br><span class="line">spring.jta.bitronix.properties.exception-analyzer= # Set the fully qualified name of the exception analyzer implementation to use.</span><br><span class="line">spring.jta.bitronix.properties.filter-log-status=false # Enable filtering of logs so that only mandatory logs are written.</span><br><span class="line">spring.jta.bitronix.properties.force-batching-enabled=true #  Set if disk forces are batched.</span><br><span class="line">spring.jta.bitronix.properties.forced-write-enabled=true # Set if logs are forced to disk.</span><br><span class="line">spring.jta.bitronix.properties.graceful-shutdown-interval=60 # Maximum amount of seconds the TM will wait for transactions to get done before aborting them at shutdown time.</span><br><span class="line">spring.jta.bitronix.properties.jndi-transaction-synchronization-registry-name= # JNDI name of the TransactionSynchronizationRegistry.</span><br><span class="line">spring.jta.bitronix.properties.jndi-user-transaction-name= # JNDI name of the UserTransaction.</span><br><span class="line">spring.jta.bitronix.properties.journal=disk # Name of the journal. Can be &apos;disk&apos;, &apos;null&apos; or a class name.</span><br><span class="line">spring.jta.bitronix.properties.log-part1-filename=btm1.tlog # Name of the first fragment of the journal.</span><br><span class="line">spring.jta.bitronix.properties.log-part2-filename=btm2.tlog # Name of the second fragment of the journal.</span><br><span class="line">spring.jta.bitronix.properties.max-log-size-in-mb=2 # Maximum size in megabytes of the journal fragments.</span><br><span class="line">spring.jta.bitronix.properties.resource-configuration-filename= # ResourceLoader configuration file name.</span><br><span class="line">spring.jta.bitronix.properties.server-id= # ASCII ID that must uniquely identify this TM instance. Default to the machine&apos;s IP address.</span><br><span class="line">spring.jta.bitronix.properties.skip-corrupted-logs=false # Skip corrupted transactions log entries.</span><br><span class="line">spring.jta.bitronix.properties.warn-about-zero-resource-transaction=true # Log a warning for transactions executed without a single enlisted resource.</span><br><span class="line"></span><br><span class="line"># NARAYANA (NarayanaProperties)</span><br><span class="line">spring.jta.narayana.default-timeout=60 # Transaction timeout in seconds.</span><br><span class="line">spring.jta.narayana.expiry-scanners=com.arjuna.ats.internal.arjuna.recovery.ExpiredTransactionStatusManagerScanner # Comma-separated list of expiry scanners.</span><br><span class="line">spring.jta.narayana.log-dir= # Transaction object store directory.</span><br><span class="line">spring.jta.narayana.one-phase-commit=true # Enable one phase commit optimisation.</span><br><span class="line">spring.jta.narayana.periodic-recovery-period=120 # Interval in which periodic recovery scans are performed in seconds.</span><br><span class="line">spring.jta.narayana.recovery-backoff-period=10 # Back off period between first and second phases of the recovery scan in seconds.</span><br><span class="line">spring.jta.narayana.recovery-db-pass= # Database password to be used by recovery manager.</span><br><span class="line">spring.jta.narayana.recovery-db-user= # Database username to be used by recovery manager.</span><br><span class="line">spring.jta.narayana.recovery-jms-pass= # JMS password to be used by recovery manager.</span><br><span class="line">spring.jta.narayana.recovery-jms-user= # JMS username to be used by recovery manager.</span><br><span class="line">spring.jta.narayana.recovery-modules= # Comma-separated list of recovery modules.</span><br><span class="line">spring.jta.narayana.transaction-manager-id=1 # Unique transaction manager id.</span><br><span class="line">spring.jta.narayana.xa-resource-orphan-filters= # Comma-separated list of orphan filters.</span><br><span class="line"></span><br><span class="line"># EMBEDDED MONGODB (EmbeddedMongoProperties)</span><br><span class="line">spring.mongodb.embedded.features=SYNC_DELAY # Comma-separated list of features to enable.</span><br><span class="line">spring.mongodb.embedded.storage.database-dir= # Directory used for data storage.</span><br><span class="line">spring.mongodb.embedded.storage.oplog-size= # Maximum size of the oplog in megabytes.</span><br><span class="line">spring.mongodb.embedded.storage.repl-set-name= # Name of the replica set.</span><br><span class="line">spring.mongodb.embedded.version=2.6.10 # Version of Mongo to use.</span><br><span class="line"></span><br><span class="line"># REDIS (RedisProperties)</span><br><span class="line">spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.</span><br><span class="line">spring.redis.cluster.nodes= # Comma-separated list of &quot;host:port&quot; pairs to bootstrap from.</span><br><span class="line">spring.redis.database=0 # Database index used by the connection factory.</span><br><span class="line">spring.redis.url= # Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379</span><br><span class="line">spring.redis.host=localhost # Redis server host.</span><br><span class="line">spring.redis.password= # Login password of the redis server.</span><br><span class="line">spring.redis.ssl=false # Enable SSL support.</span><br><span class="line">spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.</span><br><span class="line">spring.redis.pool.max-idle=8 # Max number of &quot;idle&quot; connections in the pool. Use a negative value to indicate an unlimited number of idle connections.</span><br><span class="line">spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.</span><br><span class="line">spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.</span><br><span class="line">spring.redis.port=6379 # Redis server port.</span><br><span class="line">spring.redis.sentinel.master= # Name of Redis server.</span><br><span class="line">spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.</span><br><span class="line">spring.redis.timeout=0 # Connection timeout in milliseconds.</span><br><span class="line"></span><br><span class="line"># TRANSACTION (TransactionProperties)</span><br><span class="line">spring.transaction.default-timeout= # Default transaction timeout in seconds.</span><br><span class="line">spring.transaction.rollback-on-commit-failure= # Perform the rollback on commit failures.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># INTEGRATION PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"></span><br><span class="line"># ACTIVEMQ (ActiveMQProperties)</span><br><span class="line">spring.activemq.broker-url= # URL of the ActiveMQ broker. Auto-generated by default. For instance `tcp://localhost:61616`</span><br><span class="line">spring.activemq.in-memory=true # Specify if the default broker URL should be in memory. Ignored if an explicit broker has been specified.</span><br><span class="line">spring.activemq.password= # Login password of the broker.</span><br><span class="line">spring.activemq.user= # Login user of the broker.</span><br><span class="line">spring.activemq.packages.trust-all=false # Trust all packages.</span><br><span class="line">spring.activemq.packages.trusted= # Comma-separated list of specific packages to trust (when not trusting all packages).</span><br><span class="line">spring.activemq.pool.configuration.*= # See PooledConnectionFactory.</span><br><span class="line">spring.activemq.pool.enabled=false # Whether a PooledConnectionFactory should be created instead of a regular ConnectionFactory.</span><br><span class="line">spring.activemq.pool.expiry-timeout=0 # Connection expiration timeout in milliseconds.</span><br><span class="line">spring.activemq.pool.idle-timeout=30000 # Connection idle timeout in milliseconds.</span><br><span class="line">spring.activemq.pool.max-connections=1 # Maximum number of pooled connections.</span><br><span class="line"></span><br><span class="line"># ARTEMIS (ArtemisProperties)</span><br><span class="line">spring.artemis.embedded.cluster-password= # Cluster password. Randomly generated on startup by default.</span><br><span class="line">spring.artemis.embedded.data-directory= # Journal file directory. Not necessary if persistence is turned off.</span><br><span class="line">spring.artemis.embedded.enabled=true # Enable embedded mode if the Artemis server APIs are available.</span><br><span class="line">spring.artemis.embedded.persistent=false # Enable persistent store.</span><br><span class="line">spring.artemis.embedded.queues= # Comma-separated list of queues to create on startup.</span><br><span class="line">spring.artemis.embedded.server-id= # Server id. By default, an auto-incremented counter is used.</span><br><span class="line">spring.artemis.embedded.topics= # Comma-separated list of topics to create on startup.</span><br><span class="line">spring.artemis.host=localhost # Artemis broker host.</span><br><span class="line">spring.artemis.mode= # Artemis deployment mode, auto-detected by default.</span><br><span class="line">spring.artemis.password= # Login password of the broker.</span><br><span class="line">spring.artemis.port=61616 # Artemis broker port.</span><br><span class="line">spring.artemis.user= # Login user of the broker.</span><br><span class="line"></span><br><span class="line"># SPRING BATCH (BatchProperties)</span><br><span class="line">spring.batch.initializer.enabled= # Create the required batch tables on startup if necessary. Enabled automatically if no custom table prefix is set or if a custom schema is configured.</span><br><span class="line">spring.batch.job.enabled=true # Execute all Spring Batch jobs in the context on startup.</span><br><span class="line">spring.batch.job.names= # Comma-separated list of job names to execute on startup (For instance `job1,job2`). By default, all Jobs found in the context are executed.</span><br><span class="line">spring.batch.schema=classpath:org/springframework/batch/core/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.</span><br><span class="line">spring.batch.table-prefix= # Table prefix for all the batch meta-data tables.</span><br><span class="line"></span><br><span class="line"># JMS (JmsProperties)</span><br><span class="line">spring.jms.jndi-name= # Connection factory JNDI name. When set, takes precedence to others connection factory auto-configurations.</span><br><span class="line">spring.jms.listener.acknowledge-mode= # Acknowledge mode of the container. By default, the listener is transacted with automatic acknowledgment.</span><br><span class="line">spring.jms.listener.auto-startup=true # Start the container automatically on startup.</span><br><span class="line">spring.jms.listener.concurrency= # Minimum number of concurrent consumers.</span><br><span class="line">spring.jms.listener.max-concurrency= # Maximum number of concurrent consumers.</span><br><span class="line">spring.jms.pub-sub-domain=false # Specify if the default destination type is topic.</span><br><span class="line">spring.jms.template.default-destination= # Default destination to use on send/receive operations that do not have a destination parameter.</span><br><span class="line">spring.jms.template.delivery-delay= # Delivery delay to use for send calls in milliseconds.</span><br><span class="line">spring.jms.template.delivery-mode= # Delivery mode. Enable QoS when set.</span><br><span class="line">spring.jms.template.priority= # Priority of a message when sending. Enable QoS when set.</span><br><span class="line">spring.jms.template.qos-enabled= # Enable explicit QoS when sending a message.</span><br><span class="line">spring.jms.template.receive-timeout= # Timeout to use for receive calls in milliseconds.</span><br><span class="line">spring.jms.template.time-to-live= # Time-to-live of a message when sending in milliseconds. Enable QoS when set.</span><br><span class="line"></span><br><span class="line"># APACHE KAFKA (KafkaProperties)</span><br><span class="line">spring.kafka.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.</span><br><span class="line">spring.kafka.client-id= # Id to pass to the server when making requests; used for server-side logging.</span><br><span class="line">spring.kafka.consumer.auto-commit-interval= # Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if &apos;enable.auto.commit&apos; true.</span><br><span class="line">spring.kafka.consumer.auto-offset-reset= # What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server.</span><br><span class="line">spring.kafka.consumer.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.</span><br><span class="line">spring.kafka.consumer.client-id= # Id to pass to the server when making requests; used for server-side logging.</span><br><span class="line">spring.kafka.consumer.enable-auto-commit= # If true the consumer&apos;s offset will be periodically committed in the background.</span><br><span class="line">spring.kafka.consumer.fetch-max-wait= # Maximum amount of time in milliseconds the server will block before answering the fetch request if there isn&apos;t sufficient data to immediately satisfy the requirement given by &quot;fetch.min.bytes&quot;.</span><br><span class="line">spring.kafka.consumer.fetch-min-size= # Minimum amount of data the server should return for a fetch request in bytes.</span><br><span class="line">spring.kafka.consumer.group-id= # Unique string that identifies the consumer group this consumer belongs to.</span><br><span class="line">spring.kafka.consumer.heartbeat-interval= # Expected time in milliseconds between heartbeats to the consumer coordinator.</span><br><span class="line">spring.kafka.consumer.key-deserializer= # Deserializer class for keys.</span><br><span class="line">spring.kafka.consumer.max-poll-records= # Maximum number of records returned in a single call to poll().</span><br><span class="line">spring.kafka.consumer.value-deserializer= # Deserializer class for values.</span><br><span class="line">spring.kafka.listener.ack-count= # Number of records between offset commits when ackMode is &quot;COUNT&quot; or &quot;COUNT_TIME&quot;.</span><br><span class="line">spring.kafka.listener.ack-mode= # Listener AckMode; see the spring-kafka documentation.</span><br><span class="line">spring.kafka.listener.ack-time= # Time in milliseconds between offset commits when ackMode is &quot;TIME&quot; or &quot;COUNT_TIME&quot;.</span><br><span class="line">spring.kafka.listener.concurrency= # Number of threads to run in the listener containers.</span><br><span class="line">spring.kafka.listener.poll-timeout= # Timeout in milliseconds to use when polling the consumer.</span><br><span class="line">spring.kafka.producer.acks= # Number of acknowledgments the producer requires the leader to have received before considering a request complete.</span><br><span class="line">spring.kafka.producer.batch-size= # Number of records to batch before sending.</span><br><span class="line">spring.kafka.producer.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.</span><br><span class="line">spring.kafka.producer.buffer-memory= # Total bytes of memory the producer can use to buffer records waiting to be sent to the server.</span><br><span class="line">spring.kafka.producer.client-id= # Id to pass to the server when making requests; used for server-side logging.</span><br><span class="line">spring.kafka.producer.compression-type= # Compression type for all data generated by the producer.</span><br><span class="line">spring.kafka.producer.key-serializer= # Serializer class for keys.</span><br><span class="line">spring.kafka.producer.retries= # When greater than zero, enables retrying of failed sends.</span><br><span class="line">spring.kafka.producer.value-serializer= # Serializer class for values.</span><br><span class="line">spring.kafka.properties.*= # Additional properties used to configure the client.</span><br><span class="line">spring.kafka.ssl.key-password= # Password of the private key in the key store file.</span><br><span class="line">spring.kafka.ssl.keystore-location= # Location of the key store file.</span><br><span class="line">spring.kafka.ssl.keystore-password= # Store password for the key store file.</span><br><span class="line">spring.kafka.ssl.truststore-location= # Location of the trust store file.</span><br><span class="line">spring.kafka.ssl.truststore-password= # Store password for the trust store file.</span><br><span class="line">spring.kafka.template.default-topic= # Default topic to which messages will be sent.</span><br><span class="line"></span><br><span class="line"># RABBIT (RabbitProperties)</span><br><span class="line">spring.rabbitmq.addresses= # Comma-separated list of addresses to which the client should connect.</span><br><span class="line">spring.rabbitmq.cache.channel.checkout-timeout= # Number of milliseconds to wait to obtain a channel if the cache size has been reached.</span><br><span class="line">spring.rabbitmq.cache.channel.size= # Number of channels to retain in the cache.</span><br><span class="line">spring.rabbitmq.cache.connection.mode=channel # Connection factory cache mode.</span><br><span class="line">spring.rabbitmq.cache.connection.size= # Number of connections to cache.</span><br><span class="line">spring.rabbitmq.connection-timeout= # Connection timeout, in milliseconds; zero for infinite.</span><br><span class="line">spring.rabbitmq.dynamic=true # Create an AmqpAdmin bean.</span><br><span class="line">spring.rabbitmq.host=localhost # RabbitMQ host.</span><br><span class="line">spring.rabbitmq.listener.acknowledge-mode= # Acknowledge mode of container.</span><br><span class="line">spring.rabbitmq.listener.auto-startup=true # Start the container automatically on startup.</span><br><span class="line">spring.rabbitmq.listener.concurrency= # Minimum number of consumers.</span><br><span class="line">spring.rabbitmq.listener.default-requeue-rejected= # Whether or not to requeue delivery failures; default `true`.</span><br><span class="line">spring.rabbitmq.listener.idle-event-interval= # How often idle container events should be published in milliseconds.</span><br><span class="line">spring.rabbitmq.listener.max-concurrency= # Maximum number of consumers.</span><br><span class="line">spring.rabbitmq.listener.prefetch= # Number of messages to be handled in a single request. It should be greater than or equal to the transaction size (if used).</span><br><span class="line">spring.rabbitmq.listener.retry.enabled=false # Whether or not publishing retries are enabled.</span><br><span class="line">spring.rabbitmq.listener.retry.initial-interval=1000 # Interval between the first and second attempt to deliver a message.</span><br><span class="line">spring.rabbitmq.listener.retry.max-attempts=3 # Maximum number of attempts to deliver a message.</span><br><span class="line">spring.rabbitmq.listener.retry.max-interval=10000 # Maximum interval between attempts.</span><br><span class="line">spring.rabbitmq.listener.retry.multiplier=1.0 # A multiplier to apply to the previous delivery retry interval.</span><br><span class="line">spring.rabbitmq.listener.retry.stateless=true # Whether or not retry is stateless or stateful.</span><br><span class="line">spring.rabbitmq.listener.transaction-size= # Number of messages to be processed in a transaction. For best results it should be less than or equal to the prefetch count.</span><br><span class="line">spring.rabbitmq.password= # Login to authenticate against the broker.</span><br><span class="line">spring.rabbitmq.port=5672 # RabbitMQ port.</span><br><span class="line">spring.rabbitmq.publisher-confirms=false # Enable publisher confirms.</span><br><span class="line">spring.rabbitmq.publisher-returns=false # Enable publisher returns.</span><br><span class="line">spring.rabbitmq.requested-heartbeat= # Requested heartbeat timeout, in seconds; zero for none.</span><br><span class="line">spring.rabbitmq.ssl.enabled=false # Enable SSL support.</span><br><span class="line">spring.rabbitmq.ssl.key-store= # Path to the key store that holds the SSL certificate.</span><br><span class="line">spring.rabbitmq.ssl.key-store-password= # Password used to access the key store.</span><br><span class="line">spring.rabbitmq.ssl.trust-store= # Trust store that holds SSL certificates.</span><br><span class="line">spring.rabbitmq.ssl.trust-store-password= # Password used to access the trust store.</span><br><span class="line">spring.rabbitmq.ssl.algorithm= # SSL algorithm to use. By default configure by the rabbit client library.</span><br><span class="line">spring.rabbitmq.template.mandatory=false # Enable mandatory messages.</span><br><span class="line">spring.rabbitmq.template.receive-timeout=0 # Timeout for `receive()` methods.</span><br><span class="line">spring.rabbitmq.template.reply-timeout=5000 # Timeout for `sendAndReceive()` methods.</span><br><span class="line">spring.rabbitmq.template.retry.enabled=false # Set to true to enable retries in the `RabbitTemplate`.</span><br><span class="line">spring.rabbitmq.template.retry.initial-interval=1000 # Interval between the first and second attempt to publish a message.</span><br><span class="line">spring.rabbitmq.template.retry.max-attempts=3 # Maximum number of attempts to publish a message.</span><br><span class="line">spring.rabbitmq.template.retry.max-interval=10000 # Maximum number of attempts to publish a message.</span><br><span class="line">spring.rabbitmq.template.retry.multiplier=1.0 # A multiplier to apply to the previous publishing retry interval.</span><br><span class="line">spring.rabbitmq.username= # Login user to authenticate to the broker.</span><br><span class="line">spring.rabbitmq.virtual-host= # Virtual host to use when connecting to the broker.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># ACTUATOR PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"></span><br><span class="line"># ENDPOINTS (AbstractEndpoint subclasses)</span><br><span class="line">endpoints.enabled=true # Enable endpoints.</span><br><span class="line">endpoints.sensitive= # Default endpoint sensitive setting.</span><br><span class="line">endpoints.actuator.enabled=true # Enable the endpoint.</span><br><span class="line">endpoints.actuator.path= # Endpoint URL path.</span><br><span class="line">endpoints.actuator.sensitive=false # Enable security on the endpoint.</span><br><span class="line">endpoints.auditevents.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.auditevents.path= # Endpoint path.</span><br><span class="line">endpoints.auditevents.sensitive=false # Enable security on the endpoint.</span><br><span class="line">endpoints.autoconfig.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.autoconfig.id= # Endpoint identifier.</span><br><span class="line">endpoints.autoconfig.path= # Endpoint path.</span><br><span class="line">endpoints.autoconfig.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.beans.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.beans.id= # Endpoint identifier.</span><br><span class="line">endpoints.beans.path= # Endpoint path.</span><br><span class="line">endpoints.beans.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.configprops.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.configprops.id= # Endpoint identifier.</span><br><span class="line">endpoints.configprops.keys-to-sanitize=password,secret,key,token,.*credentials.*,vcap_services # Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.</span><br><span class="line">endpoints.configprops.path= # Endpoint path.</span><br><span class="line">endpoints.configprops.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.docs.curies.enabled=false # Enable the curie generation.</span><br><span class="line">endpoints.docs.enabled=true # Enable actuator docs endpoint.</span><br><span class="line">endpoints.docs.path=/docs #</span><br><span class="line">endpoints.docs.sensitive=false #</span><br><span class="line">endpoints.dump.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.dump.id= # Endpoint identifier.</span><br><span class="line">endpoints.dump.path= # Endpoint path.</span><br><span class="line">endpoints.dump.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.env.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.env.id= # Endpoint identifier.</span><br><span class="line">endpoints.env.keys-to-sanitize=password,secret,key,token,.*credentials.*,vcap_services # Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.</span><br><span class="line">endpoints.env.path= # Endpoint path.</span><br><span class="line">endpoints.env.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.flyway.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.flyway.id= # Endpoint identifier.</span><br><span class="line">endpoints.flyway.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.health.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.health.id= # Endpoint identifier.</span><br><span class="line">endpoints.health.mapping.*= # Mapping of health statuses to HttpStatus codes. By default, registered health statuses map to sensible defaults (i.e. UP maps to 200).</span><br><span class="line">endpoints.health.path= # Endpoint path.</span><br><span class="line">endpoints.health.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.health.time-to-live=1000 # Time to live for cached result, in milliseconds.</span><br><span class="line">endpoints.heapdump.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.heapdump.path= # Endpoint path.</span><br><span class="line">endpoints.heapdump.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.hypermedia.enabled=false # Enable hypermedia support for endpoints.</span><br><span class="line">endpoints.info.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.info.id= # Endpoint identifier.</span><br><span class="line">endpoints.info.path= # Endpoint path.</span><br><span class="line">endpoints.info.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.jolokia.enabled=true # Enable Jolokia endpoint.</span><br><span class="line">endpoints.jolokia.path=/jolokia # Endpoint URL path.</span><br><span class="line">endpoints.jolokia.sensitive=true # Enable security on the endpoint.</span><br><span class="line">endpoints.liquibase.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.liquibase.id= # Endpoint identifier.</span><br><span class="line">endpoints.liquibase.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.logfile.enabled=true # Enable the endpoint.</span><br><span class="line">endpoints.logfile.external-file= # External Logfile to be accessed.</span><br><span class="line">endpoints.logfile.path=/logfile # Endpoint URL path.</span><br><span class="line">endpoints.logfile.sensitive=true # Enable security on the endpoint.</span><br><span class="line">endpoints.loggers.enabled=true # Enable the endpoint.</span><br><span class="line">endpoints.loggers.id= # Endpoint identifier.</span><br><span class="line">endpoints.loggers.path=/logfile # Endpoint path.</span><br><span class="line">endpoints.loggers.sensitive=true # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.mappings.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.mappings.id= # Endpoint identifier.</span><br><span class="line">endpoints.mappings.path= # Endpoint path.</span><br><span class="line">endpoints.mappings.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.metrics.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.metrics.filter.enabled=true # Enable the metrics servlet filter.</span><br><span class="line">endpoints.metrics.filter.gauge-submissions=merged # Http filter gauge submissions (merged, per-http-method)</span><br><span class="line">endpoints.metrics.filter.counter-submissions=merged # Http filter counter submissions (merged, per-http-method)</span><br><span class="line">endpoints.metrics.id= # Endpoint identifier.</span><br><span class="line">endpoints.metrics.path= # Endpoint path.</span><br><span class="line">endpoints.metrics.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.shutdown.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.shutdown.id= # Endpoint identifier.</span><br><span class="line">endpoints.shutdown.path= # Endpoint path.</span><br><span class="line">endpoints.shutdown.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.trace.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.trace.id= # Endpoint identifier.</span><br><span class="line">endpoints.trace.path= # Endpoint path.</span><br><span class="line">endpoints.trace.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line"></span><br><span class="line"># ENDPOINTS CORS CONFIGURATION (EndpointCorsProperties)</span><br><span class="line">endpoints.cors.allow-credentials= # Set whether credentials are supported. When not set, credentials are not supported.</span><br><span class="line">endpoints.cors.allowed-headers= # Comma-separated list of headers to allow in a request. &apos;*&apos; allows all headers.</span><br><span class="line">endpoints.cors.allowed-methods=GET # Comma-separated list of methods to allow. &apos;*&apos; allows all methods.</span><br><span class="line">endpoints.cors.allowed-origins= # Comma-separated list of origins to allow. &apos;*&apos; allows all origins. When not set, CORS support is disabled.</span><br><span class="line">endpoints.cors.exposed-headers= # Comma-separated list of headers to include in a response.</span><br><span class="line">endpoints.cors.max-age=1800 # How long, in seconds, the response from a pre-flight request can be cached by clients.</span><br><span class="line"></span><br><span class="line"># JMX ENDPOINT (EndpointMBeanExportProperties)</span><br><span class="line">endpoints.jmx.domain= # JMX domain name. Initialized with the value of &apos;spring.jmx.default-domain&apos; if set.</span><br><span class="line">endpoints.jmx.enabled=true # Enable JMX export of all endpoints.</span><br><span class="line">endpoints.jmx.static-names= # Additional static properties to append to all ObjectNames of MBeans representing Endpoints.</span><br><span class="line">endpoints.jmx.unique-names=false # Ensure that ObjectNames are modified in case of conflict.</span><br><span class="line"></span><br><span class="line"># JOLOKIA (JolokiaProperties)</span><br><span class="line">jolokia.config.*= # See Jolokia manual</span><br><span class="line"></span><br><span class="line"># MANAGEMENT HTTP SERVER (ManagementServerProperties)</span><br><span class="line">management.add-application-context-header=true # Add the &quot;X-Application-Context&quot; HTTP header in each response.</span><br><span class="line">management.address= # Network address that the management endpoints should bind to.</span><br><span class="line">management.context-path= # Management endpoint context-path. For instance `/actuator`</span><br><span class="line">management.cloudfoundry.enabled= # Enable extended Cloud Foundry actuator endpoints</span><br><span class="line">management.cloudfoundry.skip-ssl-validation= # Skip SSL verification for Cloud Foundry actuator endpoint security calls</span><br><span class="line">management.port= # Management endpoint HTTP port. Uses the same port as the application by default. Configure a different port to use management-specific SSL.</span><br><span class="line">management.security.enabled=true # Enable security.</span><br><span class="line">management.security.roles=ACTUATOR # Comma-separated list of roles that can access the management endpoint.</span><br><span class="line">management.security.sessions=stateless # Session creating policy to use (always, never, if_required, stateless).</span><br><span class="line">management.ssl.ciphers= # Supported SSL ciphers. Requires a custom management.port.</span><br><span class="line">management.ssl.client-auth= # Whether client authentication is wanted (&quot;want&quot;) or needed (&quot;need&quot;). Requires a trust store. Requires a custom management.port.</span><br><span class="line">management.ssl.enabled= # Enable SSL support. Requires a custom management.port.</span><br><span class="line">management.ssl.enabled-protocols= # Enabled SSL protocols. Requires a custom management.port.</span><br><span class="line">management.ssl.key-alias= # Alias that identifies the key in the key store. Requires a custom management.port.</span><br><span class="line">management.ssl.key-password= # Password used to access the key in the key store. Requires a custom management.port.</span><br><span class="line">management.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file). Requires a custom management.port.</span><br><span class="line">management.ssl.key-store-password= # Password used to access the key store. Requires a custom management.port.</span><br><span class="line">management.ssl.key-store-provider= # Provider for the key store. Requires a custom management.port.</span><br><span class="line">management.ssl.key-store-type= # Type of the key store. Requires a custom management.port.</span><br><span class="line">management.ssl.protocol=TLS # SSL protocol to use. Requires a custom management.port.</span><br><span class="line">management.ssl.trust-store= # Trust store that holds SSL certificates. Requires a custom management.port.</span><br><span class="line">management.ssl.trust-store-password= # Password used to access the trust store. Requires a custom management.port.</span><br><span class="line">management.ssl.trust-store-provider= # Provider for the trust store. Requires a custom management.port.</span><br><span class="line">management.ssl.trust-store-type= # Type of the trust store. Requires a custom management.port.</span><br><span class="line"></span><br><span class="line"># HEALTH INDICATORS</span><br><span class="line">management.health.db.enabled=true # Enable database health check.</span><br><span class="line">management.health.cassandra.enabled=true # Enable cassandra health check.</span><br><span class="line">management.health.couchbase.enabled=true # Enable couchbase health check.</span><br><span class="line">management.health.defaults.enabled=true # Enable default health indicators.</span><br><span class="line">management.health.diskspace.enabled=true # Enable disk space health check.</span><br><span class="line">management.health.diskspace.path= # Path used to compute the available disk space.</span><br><span class="line">management.health.diskspace.threshold=0 # Minimum disk space that should be available, in bytes.</span><br><span class="line">management.health.elasticsearch.enabled=true # Enable elasticsearch health check.</span><br><span class="line">management.health.elasticsearch.indices= # Comma-separated index names.</span><br><span class="line">management.health.elasticsearch.response-timeout=100 # The time, in milliseconds, to wait for a response from the cluster.</span><br><span class="line">management.health.jms.enabled=true # Enable JMS health check.</span><br><span class="line">management.health.ldap.enabled=true # Enable LDAP health check.</span><br><span class="line">management.health.mail.enabled=true # Enable Mail health check.</span><br><span class="line">management.health.mongo.enabled=true # Enable MongoDB health check.</span><br><span class="line">management.health.rabbit.enabled=true # Enable RabbitMQ health check.</span><br><span class="line">management.health.redis.enabled=true # Enable Redis health check.</span><br><span class="line">management.health.solr.enabled=true # Enable Solr health check.</span><br><span class="line">management.health.status.order=DOWN, OUT_OF_SERVICE, UP, UNKNOWN # Comma-separated list of health statuses in order of severity.</span><br><span class="line"></span><br><span class="line"># INFO CONTRIBUTORS (InfoContributorProperties)</span><br><span class="line">management.info.build.enabled=true # Enable build info.</span><br><span class="line">management.info.defaults.enabled=true # Enable default info contributors.</span><br><span class="line">management.info.env.enabled=true # Enable environment info.</span><br><span class="line">management.info.git.enabled=true # Enable git info.</span><br><span class="line">management.info.git.mode=simple # Mode to use to expose git information.</span><br><span class="line"></span><br><span class="line"># REMOTE SHELL (ShellProperties)</span><br><span class="line">management.shell.auth.type=simple # Authentication type. Auto-detected according to the environment.</span><br><span class="line">management.shell.auth.jaas.domain=my-domain # JAAS domain.</span><br><span class="line">management.shell.auth.key.path= # Path to the authentication key. This should point to a valid &quot;.pem&quot; file.</span><br><span class="line">management.shell.auth.simple.user.name=user # Login user.</span><br><span class="line">management.shell.auth.simple.user.password= # Login password.</span><br><span class="line">management.shell.auth.spring.roles=ACTUATOR # Comma-separated list of required roles to login to the CRaSH console.</span><br><span class="line">management.shell.command-path-patterns=classpath*:/commands/**,classpath*:/crash/commands/** # Patterns to use to look for commands.</span><br><span class="line">management.shell.command-refresh-interval=-1 # Scan for changes and update the command if necessary (in seconds).</span><br><span class="line">management.shell.config-path-patterns=classpath*:/crash/* # Patterns to use to look for configurations.</span><br><span class="line">management.shell.disabled-commands=jpa*,jdbc*,jndi* # Comma-separated list of commands to disable.</span><br><span class="line">management.shell.disabled-plugins= # Comma-separated list of plugins to disable. Certain plugins are disabled by default based on the environment.</span><br><span class="line">management.shell.ssh.auth-timeout = # Number of milliseconds after user will be prompted to login again.</span><br><span class="line">management.shell.ssh.enabled=true # Enable CRaSH SSH support.</span><br><span class="line">management.shell.ssh.idle-timeout = # Number of milliseconds after which unused connections are closed.</span><br><span class="line">management.shell.ssh.key-path= # Path to the SSH server key.</span><br><span class="line">management.shell.ssh.port=2000 # SSH port.</span><br><span class="line">management.shell.telnet.enabled=false # Enable CRaSH telnet support. Enabled by default if the TelnetPlugin is  available.</span><br><span class="line">management.shell.telnet.port=5000 # Telnet port.</span><br><span class="line"></span><br><span class="line"># TRACING (TraceProperties)</span><br><span class="line">management.trace.include=request-headers,response-headers,cookies,errors # Items to be included in the trace.</span><br><span class="line"></span><br><span class="line"># METRICS EXPORT (MetricExportProperties)</span><br><span class="line">spring.metrics.export.aggregate.key-pattern= # Pattern that tells the aggregator what to do with the keys from the source repository.</span><br><span class="line">spring.metrics.export.aggregate.prefix= # Prefix for global repository if active.</span><br><span class="line">spring.metrics.export.delay-millis=5000 # Delay in milliseconds between export ticks. Metrics are exported to external sources on a schedule with this delay.</span><br><span class="line">spring.metrics.export.enabled=true # Flag to enable metric export (assuming a MetricWriter is available).</span><br><span class="line">spring.metrics.export.excludes= # List of patterns for metric names to exclude. Applied after the includes.</span><br><span class="line">spring.metrics.export.includes= # List of patterns for metric names to include.</span><br><span class="line">spring.metrics.export.redis.key=keys.spring.metrics # Key for redis repository export (if active).</span><br><span class="line">spring.metrics.export.redis.prefix=spring.metrics # Prefix for redis repository if active.</span><br><span class="line">spring.metrics.export.send-latest= # Flag to switch off any available optimizations based on not exporting unchanged metric values.</span><br><span class="line">spring.metrics.export.statsd.host= # Host of a statsd server to receive exported metrics.</span><br><span class="line">spring.metrics.export.statsd.port=8125 # Port of a statsd server to receive exported metrics.</span><br><span class="line">spring.metrics.export.statsd.prefix= # Prefix for statsd exported metrics.</span><br><span class="line">spring.metrics.export.triggers.*= # Specific trigger properties per MetricWriter bean name.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># DEVTOOLS PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"></span><br><span class="line"># DEVTOOLS (DevToolsProperties)</span><br><span class="line">spring.devtools.livereload.enabled=true # Enable a livereload.com compatible server.</span><br><span class="line">spring.devtools.livereload.port=35729 # Server port.</span><br><span class="line">spring.devtools.restart.additional-exclude= # Additional patterns that should be excluded from triggering a full restart.</span><br><span class="line">spring.devtools.restart.additional-paths= # Additional paths to watch for changes.</span><br><span class="line">spring.devtools.restart.enabled=true # Enable automatic restart.</span><br><span class="line">spring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,**/*Test.class,**/*Tests.class,git.properties # Patterns that should be excluded from triggering a full restart.</span><br><span class="line">spring.devtools.restart.poll-interval=1000 # Amount of time (in milliseconds) to wait between polling for classpath changes.</span><br><span class="line">spring.devtools.restart.quiet-period=400 # Amount of quiet time (in milliseconds) required without any classpath changes before a restart is triggered.</span><br><span class="line">spring.devtools.restart.trigger-file= # Name of a specific file that when changed will trigger the restart check. If not specified any classpath file change will trigger the restart.</span><br><span class="line"></span><br><span class="line"># REMOTE DEVTOOLS (RemoteDevToolsProperties)</span><br><span class="line">spring.devtools.remote.context-path=/.~~spring-boot!~ # Context path used to handle the remote connection.</span><br><span class="line">spring.devtools.remote.debug.enabled=true # Enable remote debug support.</span><br><span class="line">spring.devtools.remote.debug.local-port=8000 # Local remote debug server port.</span><br><span class="line">spring.devtools.remote.proxy.host= # The host of the proxy to use to connect to the remote application.</span><br><span class="line">spring.devtools.remote.proxy.port= # The port of the proxy to use to connect to the remote application.</span><br><span class="line">spring.devtools.remote.restart.enabled=true # Enable remote restart.</span><br><span class="line">spring.devtools.remote.secret= # A shared secret required to establish a connection (required to enable remote support).</span><br><span class="line">spring.devtools.remote.secret-header-name=X-AUTH-TOKEN # HTTP header used to transfer the shared secret.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># TESTING PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"></span><br><span class="line">spring.test.database.replace=any # Type of existing DataSource to replace.</span><br><span class="line">spring.test.mockmvc.print=default # MVC Print option.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 术业专攻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react native布局浅谈</title>
      <link href="/2017/09/22/react-native%E5%B8%83%E5%B1%80/"/>
      <url>/2017/09/22/react-native%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="flexDirection决定布局的主轴，默认值是竖直轴"><a href="#flexDirection决定布局的主轴，默认值是竖直轴" class="headerlink" title="flexDirection决定布局的主轴，默认值是竖直轴"></a>flexDirection决定布局的主轴，默认值是竖直轴</h2><p><code>flexDirection</code>可以决定布局的主轴。。子元素是应该沿着水平轴(<code>row</code>)方向排列，还是沿着竖直轴(<code>column</code>)方向排列呢？<strong>默认值是竖直轴(column)方向</strong>。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; </span><br><span class="line">  AppRegistry, </span><br><span class="line">  View,</span><br><span class="line">  StyleSheet,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">FlexDirectionBasics</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;View style=&#123;styles.flexDirection_style&#125;&gt;</span><br><span class="line">        &lt;View style=&#123;&#123;<span class="attr">width</span>: <span class="number">50</span>, <span class="attr">height</span>: <span class="number">50</span>, <span class="attr">backgroundColor</span>: <span class="string">'powderblue'</span>&#125;&#125; /&gt;</span><br><span class="line">        &lt;View style=&#123;&#123;<span class="attr">width</span>: <span class="number">50</span>, <span class="attr">height</span>: <span class="number">50</span>, <span class="attr">backgroundColor</span>: <span class="string">'skyblue'</span>&#125;&#125; /&gt;</span><br><span class="line">        &lt;View style=&#123;&#123;<span class="attr">width</span>: <span class="number">50</span>, <span class="attr">height</span>: <span class="number">50</span>, <span class="attr">backgroundColor</span>: <span class="string">'steelblue'</span>&#125;&#125; /&gt;</span><br><span class="line">      &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 尝试把`flexDirection`改为`column`看看</span></span><br><span class="line"><span class="regexp">const styles = StyleSheet.create(&#123;</span></span><br><span class="line"><span class="regexp">  flexDirection_style: &#123;</span></span><br><span class="line"><span class="regexp">    flex: 1, </span></span><br><span class="line"><span class="regexp">    flexDirection: 'column',  /</span><span class="regexp">/设置子元素排列的主轴是水平轴(row)还是竖直轴(column)</span></span><br><span class="line"><span class="regexp">    width: 300,</span></span><br><span class="line"><span class="regexp">    borderColor: 'black',</span></span><br><span class="line"><span class="regexp">    borderWidth: 1, </span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br></pre></td></tr></table></figure></p><h2 id="justifyContent决定其子元素沿着主轴的排列方式"><a href="#justifyContent决定其子元素沿着主轴的排列方式" class="headerlink" title="justifyContent决定其子元素沿着主轴的排列方式"></a>justifyContent决定其子元素沿着主轴的排列方式</h2><p>在组件的style中指定<code>justifyContent</code>可以决定其子元素沿着主轴的排列方式。子元素是应该靠近主轴的起始端还是末尾段分布呢？亦或应该均匀分布？对应的这些可选项有：<code>flex-start</code>、<code>center</code>、<code>flex-end</code>、<code>space-around</code>以及<code>space-between</code>。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; </span><br><span class="line">  AppRegistry, </span><br><span class="line">  View,</span><br><span class="line">  StyleSheet,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">JustifyContentBasics</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;View style=&#123;styles.JustifyContent_style&#125;&gt;</span><br><span class="line">        &lt;View style=&#123;&#123;<span class="attr">width</span>: <span class="number">50</span>, <span class="attr">height</span>: <span class="number">50</span>, <span class="attr">backgroundColor</span>: <span class="string">'powderblue'</span>&#125;&#125; /&gt;</span><br><span class="line">        &lt;View style=&#123;&#123;<span class="attr">width</span>: <span class="number">50</span>, <span class="attr">height</span>: <span class="number">50</span>, <span class="attr">backgroundColor</span>: <span class="string">'skyblue'</span>&#125;&#125; /&gt;</span><br><span class="line">        &lt;View style=&#123;&#123;<span class="attr">width</span>: <span class="number">50</span>, <span class="attr">height</span>: <span class="number">50</span>, <span class="attr">backgroundColor</span>: <span class="string">'steelblue'</span>&#125;&#125; /&gt;</span><br><span class="line">      &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 尝试把`justifyContent`改为`center`看看</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 尝试把`flexDirection`改为`row`看看</span></span><br><span class="line"><span class="regexp">const styles = StyleSheet.create(&#123;</span></span><br><span class="line"><span class="regexp">  JustifyContent_style: &#123;</span></span><br><span class="line"><span class="regexp">    flex: 1,</span></span><br><span class="line"><span class="regexp">    flexDirection: 'column',</span></span><br><span class="line"><span class="regexp">    justifyContent: 'space-between', /</span><span class="regexp">/定义子元素是应该靠近主轴的起始端还是末尾段分布，flex-start、center、flex-end、space-around以及space-between</span></span><br><span class="line"><span class="regexp">   </span></span><br><span class="line"><span class="regexp">    borderColor: 'black',</span></span><br><span class="line"><span class="regexp">    borderWidth: 1, </span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br></pre></td></tr></table></figure></p><h2 id="alignItems决定其子元素沿着次轴（与主轴垂直的轴）的排列方式"><a href="#alignItems决定其子元素沿着次轴（与主轴垂直的轴）的排列方式" class="headerlink" title="alignItems决定其子元素沿着次轴（与主轴垂直的轴）的排列方式"></a>alignItems决定其子元素沿着次轴（与主轴垂直的轴）的排列方式</h2><p>在组件的style中指定alignItems可以决定其子元素沿着次轴（与主轴垂直的轴，比如若主轴方向为row，则次轴方向为column）的排列方式。子元素是应该靠近次轴的起始端还是末尾段分布呢？亦或应该均匀分布？对应的这些可选项有：flex-start、center、flex-end以及stretch。</p><blockquote><p>注意：要使stretch选项生效的话，子元素在次轴方向上不能有固定的尺寸。以下面的代码为例：只有将子元素样式中的width: 50去掉之后，alignItems: ‘stretch’才能生效。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; </span><br><span class="line">  AppRegistry, </span><br><span class="line">  View,</span><br><span class="line">  StyleSheet,</span><br><span class="line">   &#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">AlignItemsBasics</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      </span><br><span class="line">      &lt;View style=&#123;styles.AlignItems_style&#125;&gt;</span><br><span class="line">        &lt;View style=&#123;&#123;<span class="attr">width</span>: <span class="number">50</span>, <span class="attr">height</span>: <span class="number">50</span>, <span class="attr">backgroundColor</span>: <span class="string">'powderblue'</span>&#125;&#125; /&gt;</span><br><span class="line">        &lt;View style=&#123;&#123;<span class="attr">width</span>: <span class="number">50</span>, <span class="attr">height</span>: <span class="number">50</span>, <span class="attr">backgroundColor</span>: <span class="string">'skyblue'</span>&#125;&#125; /&gt;</span><br><span class="line">        &lt;View style=&#123;&#123;<span class="attr">width</span>: <span class="number">50</span>, <span class="attr">height</span>: <span class="number">50</span>, <span class="attr">backgroundColor</span>: <span class="string">'steelblue'</span>&#125;&#125; /&gt;</span><br><span class="line">      &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 尝试把`alignItems`改为`flex-start`看看</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 尝试把`justifyContent`改为`flex-end`看看</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 尝试把`flexDirection`改为`row`看看</span></span><br><span class="line"><span class="regexp">const styles = StyleSheet.create(&#123;</span></span><br><span class="line"><span class="regexp">  AlignItems_style: &#123;</span></span><br><span class="line"><span class="regexp">    flex: 1,</span></span><br><span class="line"><span class="regexp">    flexDirection: 'column',</span></span><br><span class="line"><span class="regexp">    justifyContent: 'center',</span></span><br><span class="line"><span class="regexp">    alignItems: 'center',   /</span><span class="regexp">/决定其子元素沿着次轴（与主轴垂直的轴，比如若主轴方向为row，则次轴方向为column）的排列方式</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    borderColor: 'black',</span></span><br><span class="line"><span class="regexp">    borderWidth: 1, </span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">&#125;);d</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 术业专攻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react native </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React生命周期</title>
      <link href="/2017/09/18/react-base-knowledge-middle/"/>
      <url>/2017/09/18/react-base-knowledge-middle/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="组件的详细说明"><a href="#组件的详细说明" class="headerlink" title="组件的详细说明"></a>组件的详细说明</h2><p>当通过调用 React.createClass() 来创建组件的时候，每个组件必须提供render方法，并且也可以包含其它的在这里描述的生命周期方法。  </p><h3 id="render"><a href="#render" class="headerlink" title="render"></a>render</h3><p><code>ReactComponent render()</code><br><code>render()</code> 方法是必须的。<br>当该方法被回调的时候，会检测 <code>this.props</code> 和 <code>this.state</code>，并返回一个单子级组件。该子级组件可以是虚拟的本地 DOM 组件（比如 <code>&lt;div /&gt;</code> 或者 <code>React.DOM.div()</code>），也可以是自定义的复合组件。<br>你也可以返回 <code>null</code> 或者 <code>false</code> 来表明不需要渲染任何东西。实际上，React 渲染一个<code>&lt;noscript&gt;</code> 标签来处理当前的差异检查逻辑。当返回 <code>null</code> 或者 <code>false</code> 的时候，<code>this.getDOMNode()</code> 将返回 <code>null</code>。   </p><p><strong>注意：</strong>  </p><p><code>render()</code> 函数应该是纯粹的，也就是说该函数不修改组件的 <code>state</code>，每次调用都返回相同的结果，不读写 DOM 信息，也不和浏览器交互（例如通过使用 <code>setTimeout</code>）。如果需要和浏览器交互，在 <code>componentDidMount()</code> 中或者其它生命周期方法中做这件事。保持 <code>render()</code> 纯粹，可以使服务器端渲染更加切实可行，也使组件更容易被理解。  </p><blockquote><p>心得：不要在<code>render()</code>函数中做复杂的操作，更不要进行网络请求，数据库读写，I/O等操作。</p></blockquote><h3 id="getInitialState"><a href="#getInitialState" class="headerlink" title="getInitialState"></a>getInitialState</h3><p><code>object getInitialState()</code><br>初始化组件状态，在组件挂载之前调用一次。返回值将会作为 <code>this.state</code> 的初始值。  </p><blockquote><p>心得：通常在该方法中对组件的状态进行初始化。  </p></blockquote><h3 id="getDefaultProps"><a href="#getDefaultProps" class="headerlink" title="getDefaultProps"></a>getDefaultProps</h3><p><code>object getDefaultProps()</code><br>设置组件属性的默认值，在组件类创建的时候调用一次，然后返回值被缓存下来。如果父组件没有指定 <code>props</code> 中的某个键，则此处返回的对象中的相应属性将会合并到 <code>this.props</code> （使用 in 检测属性）。<br><strong>Usage:</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">getDefaultProps() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      title: &apos;&apos;,</span><br><span class="line">      popEnabled:true</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p><strong>注意</strong><br>该方法在任何实例创建之前调用，因此不能依赖于 <code>this.props</code>。另外，<code>getDefaultProps()</code> 返回的任何复杂对象将会在实例间共享，而不是每个实例拥有一份拷贝。  </p><blockquote><p>心得：该方法在你封装一个自定义组件的时候经常用到，通常用于为组件初始化默认属性。   </p></blockquote><h3 id="PropTypes"><a href="#PropTypes" class="headerlink" title="PropTypes"></a><a href="https://facebook.github.io/react/docs/top-level-api.html#react.proptypes" target="_blank" rel="noopener">PropTypes</a></h3><p><code>object propTypes</code><br><code>propTypes</code> 对象用于验证传入到组件的 <code>props</code>。  可参考<a href="https://facebook.github.io/react/docs/reusable-components.html" target="_blank" rel="noopener">可重用的组件</a>。</p><p><strong>Usage:</strong>   </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var NavigationBar=React.createClass(&#123;</span><br><span class="line">  propTypes: &#123;</span><br><span class="line">    navigator:React.PropTypes.object,</span><br><span class="line">    leftButtonTitle: React.PropTypes.string,</span><br><span class="line">    leftButtonIcon: Image.propTypes.source,</span><br><span class="line">    popEnabled:React.PropTypes.bool,</span><br><span class="line">    onLeftButtonClick: React.PropTypes.func,</span><br><span class="line">    title:React.PropTypes.string,</span><br><span class="line">    rightButtonTitle: React.PropTypes.string,</span><br><span class="line">    rightButtonIcon:Image.propTypes.source,</span><br><span class="line">    onRightButtonClick:React.PropTypes.func</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>心得：在封装组件时，对组件的属性通常会有类型限制，如：组件的背景图片，需要<code>Image.propTypes.source</code>类型，propTypes便可以帮你完成你需要的属性类型的检查。</p></blockquote><h3 id="mixins"><a href="#mixins" class="headerlink" title="mixins"></a>mixins</h3><p><code>array mixins</code><br><code>mixin</code> 数组允许使用混合来在多个组件之间共享行为。更多关于混合的信息，可参考<a href="https://facebook.github.io/react/docs/reusable-components.html#mixins" target="_blank" rel="noopener">Reusable Components</a>。  </p><blockquote><p>心得：由于ES6不再支持mixins，所以不建议在使用mixins，我们可以用另外一种方式来替代mixins，请参考：<a href="">React Native之React速学教程(下)-ES6不再支持Mixins</a>。</p></blockquote><h3 id="statics"><a href="#statics" class="headerlink" title="statics"></a>statics</h3><p><code>object statics</code><br><code>statics</code> 对象允许你定义静态的方法，这些静态的方法可以在组件类上调用。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var MyComponent = React.createClass(&#123;</span><br><span class="line">  statics: &#123;</span><br><span class="line">    customMethod: function(foo) &#123;</span><br><span class="line">      return foo === 'bar';</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  render: function() &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">MyComponent.customMethod('bar');  // true</span><br></pre></td></tr></table></figure><p>在这个块儿里面定义的方法都是静态的，你可以通过<code>ClassName.funcationName</code>的形式调用它。<br><strong>注意</strong><br>这些方法不能获取组件的 <code>props</code> 和 <code>state</code>。如果你想在静态方法中检查 <code>props</code> 的值，在调用处把 <code>props</code> 作为参数传入到静态方法。</p><h3 id="displayName"><a href="#displayName" class="headerlink" title="displayName"></a>displayName</h3><p><code>string displayName</code><br><code>displayName</code> 字符串用于输出调试信息。JSX 自动设置该值；可参考<a href="https://facebook.github.io/react/docs/jsx-in-depth.html#the-transform" target="_blank" rel="noopener">JSX in Depth</a>。</p><h4 id="isMounted"><a href="#isMounted" class="headerlink" title="isMounted"></a>isMounted</h4><p><code>boolean isMounted()</code>，当组件被渲染到DOM，该方法返回true，否则返回false。该方法通常用于异步任务完成后修改state前的检查，以避免修改一个没有被渲染的组件的state。   </p><blockquote><p>心得：开发中不建议大家isMounted，大家可以使用另外一种更好的方式来避免修改没有被渲染的DOM，请下文的<a href="">isMounted 是个反模式</a>。</p></blockquote><h2 id="组件的生命周期-Component-Lifecycle"><a href="#组件的生命周期-Component-Lifecycle" class="headerlink" title="组件的生命周期(Component Lifecycle)"></a><a href="https://facebook.github.io/react/docs/working-with-the-browser.html#component-lifecycle" target="_blank" rel="noopener">组件的生命周期(Component Lifecycle)</a></h2><p>在iOS中<code>UIViewController</code>提供了<code>(void)viewWillAppear:(BOOL)animated</code>, <code>- (void)viewDidLoad</code>,<code>(void)viewWillDisappear:(BOOL)animated</code>等生命周期方法，在Android中<code>Activity</code>则提供了 <code>onCreate()</code>,<code>onStart()</code>,<code>onResume()</code>    ,<code>onPause()</code>,<code>onStop()</code>,<code>onDestroy()</code>等生命周期方法，这些生命周期方法展示了一个界面从创建到销毁的一生。  </p><p>那么在React 中组件(Component)也是有自己的生命周期方法的。  </p><p><img src="/resources/post_images/component-lifecycle.jpg" title="Component Lifecycle" style="margin:auto 0; display: block;"></p><h3 id="组件的生命周期分成三个状态："><a href="#组件的生命周期分成三个状态：" class="headerlink" title="组件的生命周期分成三个状态："></a>组件的生命周期分成三个状态：</h3><ul><li>Mounting：已插入真实 DOM</li><li>Updating：正在被重新渲染</li><li>Unmounting：已移出真实 DOM</li></ul><blockquote><p>心得：你会发现这些React 中组件(Component)的生命周期方法从写法上和iOS中<code>UIViewController</code>的生命周期方法很像，React 为每个状态都提供了两种处理函数，will 函数在进入状态之前调用，did 函数在进入状态之后调用。  </p></blockquote><h3 id="Mounting-装载"><a href="#Mounting-装载" class="headerlink" title="Mounting(装载)"></a>Mounting(装载)</h3><ul><li><code>getInitialState()</code>: 在组件挂载之前调用一次。返回值将会作为 this.state 的初始值。</li><li><code>componentWillMount()</code>：服务器端和客户端都只调用一次，在初始化渲染执行之前立刻调用。</li><li><code>componentDidMount()</code>：在初始化渲染执行之后立刻调用一次，仅客户端有效（服务器端不会调用）。</li></ul><h3 id="Updating-更新"><a href="#Updating-更新" class="headerlink" title="Updating (更新)"></a>Updating (更新)</h3><ul><li>componentWillReceiveProps(object nextProps) 在组件接收到新的 props 的时候调用。在初始化渲染的时候，该方法不会调用。</li></ul><p>用此函数可以作为 react 在 prop 传入之后， render() 渲染之前更新 state 的机会。老的 props 可以通过 this.props 获取到。在该函数中调用 this.setState() 将不会引起第二次渲染。</p><ul><li>shouldComponentUpdate(object nextProps, object nextState): 在接收到新的 props 或者 state，将要渲染之前调用。</li></ul><p>该方法在初始化渲染的时候不会调用，在使用 forceUpdate 方法的时候也不会。如果确定新的 props 和 state 不会导致组件更新，则此处应该 返回 false。   </p><blockquote><p>心得：重写次方你可以根据实际情况，来灵活的控制组件当 props 和 state 发生变化时是否要重新渲染组件。   </p></blockquote><ul><li>componentWillUpdate(object nextProps, object nextState)：在接收到新的 props 或者 state 之前立刻调用。</li></ul><p>在初始化渲染的时候该方法不会被调用。使用该方法做一些更新之前的准备工作。   </p><blockquote><p>注意：你不能在该方法中使用 this.setState()。如果需要更新 state 来响应某个 prop 的改变，请使用 <code>componentWillReceiveProps</code>。</p></blockquote><ul><li>componentDidUpdate(object prevProps, object prevState): 在组件的更新已经同步到 DOM 中之后立刻被调用。</li></ul><p>该方法不会在初始化渲染的时候调用。使用该方法可以在组件更新之后操作 DOM 元素。</p><h3 id="Unmounting-移除"><a href="#Unmounting-移除" class="headerlink" title="Unmounting(移除)"></a>Unmounting(移除)</h3><ul><li>componentWillUnmount：在组件从 DOM 中移除的时候立刻被调用。</li></ul><p>在该方法中执行任何必要的清理，比如无效的定时器，或者清除在 componentDidMount 中创建的 DOM 元素。</p><h2 id="isMounted是个反模式"><a href="#isMounted是个反模式" class="headerlink" title="isMounted是个反模式"></a>isMounted是个反模式</h2><p>isMounted通常用于避免修改一个已经被卸载的组件的状态，因为调用一个没有被装载的组件的<code>setState()</code>方法，系统会抛出异常警告。  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.isMounted()) &#123; <span class="comment">//不推荐</span></span><br><span class="line">  <span class="keyword">this</span>.setState(&#123;...&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面做法有点反模式，<code>isMounted()</code>起到作用的时候也就是组件被卸载之后还有异步操作在进行的时候，这就意味着一个被销毁的组件还持有着一些资源的引用，这会导致系统性能降低甚至内存溢出。      </p><p>React 在设计的时候通过<code>setState()</code>被调用时做了一些检查，来帮助开发者发现被卸载的组件还持有一些资源的引用的情况。如何你使用了<code>isMounted()</code>，也就是跳过的React的检查，也就无法发现被卸载的组件还持有资源的问题。       </p><p>既然isMounted()是反模式，那么有没有可替代方案呢？<br>我们可以通过在设置一个变量来表示组件的装载和卸载的状态，当<code>componentDidMount</code>被调用时该变量为true，当<br><code>componentWillUnmount</code>被调用时，该变量为false，这样该变量就可以当<code>isMounted()</code>来使用。但还不够，到目前为止，我们只是通过变量来替代<code>isMounted()</code>，还没有做任何的优化，接下来我们需要在<code>componentWillUnmount</code>被调用时取消所有的异步回调，主动释放所有资源，这样就能避免被卸载的组件还持有资源的引用的情况，从而减少了内存溢出等情况的发生。   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyComponent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  componentDidMount() &#123;</span><br><span class="line">    mydatastore.subscribe(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">  componentWillUnmount() &#123;</span><br><span class="line">    mydatastore.unsubscribe(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用可取消的Promise做异步操作。  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cancelablePromise = makeCancelable(</span><br><span class="line">  <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">r</span> =&gt;</span> component.setState(&#123;...&#125;&#125;))</span><br><span class="line">);</span><br><span class="line">cancelablePromise</span><br><span class="line">  .promise</span><br><span class="line">  .then(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'resolved'</span>))</span><br><span class="line">  .catch(<span class="function">(<span class="params">reason</span>) =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'isCanceled'</span>, reason.isCanceled));</span><br><span class="line">cancelablePromise.cancel(); <span class="comment">// Cancel the promise</span></span><br></pre></td></tr></table></figure><p>可取消的Promise。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> makeCancelable = <span class="function">(<span class="params">promise</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> hasCanceled_ = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">const</span> wrappedPromise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    promise.then(<span class="function">(<span class="params">val</span>) =&gt;</span></span><br><span class="line">      hasCanceled_ ? reject(&#123;<span class="attr">isCanceled</span>: <span class="literal">true</span>&#125;) : resolve(val)</span><br><span class="line">    );</span><br><span class="line">    promise.catch(<span class="function">(<span class="params">error</span>) =&gt;</span></span><br><span class="line">      hasCanceled_ ? reject(&#123;<span class="attr">isCanceled</span>: <span class="literal">true</span>&#125;) : reject(error)</span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    promise: wrappedPromise,</span><br><span class="line">    cancel() &#123;</span><br><span class="line">      hasCanceled_ = <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><p>本文出自<a href="https://github.com/crazycodeboy/RNStudyNotes/" target="_blank" rel="noopener">《React Native学习笔记》</a>系列文章。    </p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><ul><li><a href="https://github.com/crazycodeboy/RNStudyNotes" target="_blank" rel="noopener">React Native 学习笔记</a>   </li><li><a href="https://github.com/crazycodeboy/RNStudyNotes/tree/master/React Native布局/React Native布局详细指南/React Native布局详细指南.md" target="_blank" rel="noopener">Reac Native布局详细指南</a>   </li><li><a href="https://github.com/crazycodeboy/RNStudyNotes/blob/master/React%20Native%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8E%E5%BF%83%E5%BE%97/React%20Native%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8E%E5%BF%83%E5%BE%97.md" target="_blank" rel="noopener">React Native调试技巧与心得</a></li><li><a href="https://github.com/crazycodeboy/RNStudyNotes/tree/master/React%20Native%E5%8F%91%E5%B8%83APP%E4%B9%8B%E7%AD%BE%E5%90%8D%E6%89%93%E5%8C%85APK" target="_blank" rel="noopener">React Native发布APP之签名打包APK</a>    </li><li><a href="https://github.com/crazycodeboy/RNStudyNotes/tree/master/React%20Native%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%E3%80%81%E7%83%AD%E6%9B%B4%E6%96%B0-CodePush%E6%9C%80%E6%96%B0%E9%9B%86%E6%88%90%E6%80%BB%E7%BB%93" target="_blank" rel="noopener">React Native应用部署、热更新-CodePush最新集成总结</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 术业专攻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim使用技巧</title>
      <link href="/2017/08/31/vim-command-usage/"/>
      <url>/2017/08/31/vim-command-usage/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="第一级-–-存活"><a href="#第一级-–-存活" class="headerlink" title="第一级 – 存活"></a>第一级 – 存活</h2><h3 id="vim模式介绍"><a href="#vim模式介绍" class="headerlink" title="vim模式介绍"></a>vim模式介绍</h3><ul><li>启动Vim后，vim在 <code>Normal</code> 模式下。</li><li>进入 <code>Insert</code> 模式,请按下键 <code>i</code>。(注：在vim左下角有一个–insert–字样，表你可以以插入的方式输入了）</li><li>此时，你可以输入文本了，就像你用“记事本”一样。</li><li>如果你想返回 Normal 模式，请按 <code>ESC</code> 键。</li></ul><h3 id="vim常用命令介绍"><a href="#vim常用命令介绍" class="headerlink" title="vim常用命令介绍"></a>vim常用命令介绍</h3><p><strong>下面是一些命令，可以让你在 Normal 模式下幸存下来：</strong></p><ul><li><code>i</code> → Insert 模式，按 ESC 回到 Normal 模式。</li><li><code>x</code> → 删当前光标所在的一个字符。</li><li><code>:wq</code> → 存盘 + 退出 (:w 存盘, :q 退出)（注：:w 后可以跟文件名）。</li><li><code>dd</code> → 删除当前行，并把删除的行存到剪贴板里。</li><li><code>p</code> → 粘贴剪贴板。</li><li><code>hjkl</code> →上下左右移动。 注: j 就像下箭头。</li><li><code>:help &lt;command&gt;</code> → 显示相关命令的帮助。你也可以就输入 :help 而不跟命令。（退出帮助需要输入:q）</li></ul><blockquote><p>在进入第二级时，需要再说一下 Normal 模式。在一般的编辑器下，当你需要copy一段文字的时候，你需要使用 Ctrl 键，比如：Ctrl-C。也就是说，Ctrl键就好像功能键一样，当你按下了功能键Ctrl后，C就不在是C了，而且就是一个命令或是一个快键键了，<code>在VIM的Normal模式下，所有的键就是功能键了</code>。</p></blockquote><p><strong>标记:</strong>  下面的文字中，如果是 Ctrl-λ我会写成 <code>&lt;C-λ&gt;</code>。 以<code>:</code>开始的命令你需要输入 <code>&lt;enter&gt;</code>回车，如果我写成<code>:q</code> 也就是说你要输入 <code>:q&lt;enter&gt;</code></p><h2 id="第二级-–-感觉良好"><a href="#第二级-–-感觉良好" class="headerlink" title="第二级 – 感觉良好"></a>第二级 – 感觉良好</h2><p><strong>所有的命令都需要在Normal模式下使用，如果你不知道现在在什么样的模式，你就狂按几次ESC键</strong></p><h3 id="各种插入模式"><a href="#各种插入模式" class="headerlink" title="各种插入模式"></a>各种插入模式</h3><ul><li><code>a</code> →  在光标后插入</li><li><code>o</code> →  在当前行后插入一个新行</li><li><code>O</code> →  在当前行前插入一个新行</li><li><code>cw</code> →  替换从光标所在位置后到一个单词结尾的字符</li></ul><h3 id="简单的移动光标"><a href="#简单的移动光标" class="headerlink" title="简单的移动光标"></a>简单的移动光标</h3><ul><li><code>0</code> →  数字零，到行头</li><li><code>^</code> →  到本行第一个不是blank字符的位置（所谓blank字符就是空格，tab，换行，回车等）</li><li><code>$</code> →  到本行行尾</li><li><code>g_</code> →  到本行最后一个不是blank字符的位置。</li><li><code>/pattern</code> →  搜索 pattern 的字符串（注：如果搜索出多个匹配，可按n键到下一个）</li></ul><h3 id="拷贝-粘贴"><a href="#拷贝-粘贴" class="headerlink" title="拷贝/粘贴"></a>拷贝/粘贴</h3><blockquote><p>注：p/P都可以，p是表示在当前位置之后，P表示在当前位置之前。</p></blockquote><ul><li><code>P</code> → 粘贴</li><li><code>yy</code> → 拷贝当前行当行于 <code>ddP</code></li></ul><h3 id="撤销与恢复"><a href="#撤销与恢复" class="headerlink" title="撤销与恢复"></a>撤销与恢复</h3><ul><li><code>u</code> → 撤销</li><li><code>&lt;C-r&gt;</code> → 恢复</li></ul><h3 id="打开-保存-退出-改变文件"><a href="#打开-保存-退出-改变文件" class="headerlink" title="打开/保存/退出/改变文件"></a>打开/保存/退出/改变文件</h3><ul><li><code>:e &lt;path/to/file&gt;</code> → 打开一个文件</li><li><code>:w</code> → 存盘</li><li><code>:saveas &lt;path/to/file&gt;</code> → 另存为 &lt;path/to/file&gt;</li><li><code>:x， ZZ</code> 或 <code>:wq</code> → 保存并退出 (<code>:x</code> 表示仅在需要时保存，<code>ZZ</code>不需要输入冒号并回车)</li><li><code>:q!</code> → 退出不保存</li><li><code>:qa!</code>  → 强行退出所有的正在编辑的文件，就算别的文件有更改</li><li><code>:bn</code> 和 <code>:bp</code> → 你可以同时打开很多文件，使用这两个命令来切换下一个或上一个文件。（注：使用:n到下一个文件）</li></ul><h2 id="三级-–-更好，更强，更快"><a href="#三级-–-更好，更强，更快" class="headerlink" title="三级 – 更好，更强，更快"></a>三级 – 更好，更强，更快</h2><h3 id="1-更好"><a href="#1-更好" class="headerlink" title="1. 更好"></a>1. 更好</h3><ul><li><code>.</code>→ (小数点) 可以重复上一次的命令</li><li><code>N&lt;command&gt;</code> → 重复某个命令N次</li><li><code>2dd</code> → 删除2行</li><li><code>3p</code> → 粘贴文本3次</li><li><code>.</code> → 重复上一个命令—— 100 “desu “.</li><li><code>3.</code> → 重复 3 次 “desu” (注意：不是 300，你看，VIM多聪明啊).</li></ul><h3 id="2-更强"><a href="#2-更强" class="headerlink" title="2.更强"></a>2.更强</h3><ul><li><code>NG</code> → 到第 N 行 （注：注意命令中的<code>G</code>是大写的，另我一般使用 <code>: N</code> 到第N行，如 <code>:137</code> 到第137行）</li><li><code>gg</code> → 到第一行。（注：相当于<code>1G</code>，或 <code>:1</code>）</li><li><code>G</code>→ 到最后一行。</li><li>按单词移动：<ul><li><code>w</code> → 到下一个单词的开头。</li><li><code>e</code> → 到下一个单词的结尾。</li></ul></li></ul><p><strong>如果你认为单词是由默认方式，那么就用小写的e和w。默认上来说，一个单词由字母，数字和下划线组成（程序变量）<br>如果你认为单词是由blank字符分隔符，那么你需要使用大写的E和W。（程序语句）</strong></p><h4 id="最强的光标移动："><a href="#最强的光标移动：" class="headerlink" title="最强的光标移动："></a>最强的光标移动：</h4><ul><li><code>%:</code> → 匹配括号移动，包括 (, {, [. （：你需要把光标先移到括号上）</li><li><code>*</code> 和<code>#:</code>  → 匹配光标当前所在的单词，移动光标到下一个（或上一个）匹配单词（<code>*</code>是下一个，<code>#</code>是上一个）<br>相信我，上面这三个命令对程序员来说是相当强大的。</li></ul><h3 id="更快"><a href="#更快" class="headerlink" title="更快"></a>更快</h3><p><strong><code>&lt;start position&gt;&lt;command&gt;&lt;end position&gt;</code></strong></p><ul><li>例如,  <code>0y$</code>命令意味着：</li></ul><ol><li><code>0</code> → 先到行头</li><li><code>y</code> → 从这里开始拷贝</li><li><code>$</code> → 拷贝到本行最后一个字符</li></ol><blockquote><p>可以输入 <code>ye</code>，从当前位置拷贝到本单词的最后一个字符。也可以输入 <code>y2/foo</code> 来拷贝2个 “foo” 之间的字符串。</p></blockquote><ul><li>并不一定你就一定要按y才会拷贝，下面的命令也会被拷贝：</li></ul><ol><li><code>d</code> (删除 )</li><li><code>v</code> (可视化的选择)</li><li><code>gU</code> (变大写)</li><li><code>gu</code> (变小写)</li></ol><blockquote><p>注：可视化选择是一个很有意思的命令，你可以先按<code>v</code>，然后移动光标，你就会看到文本被选择，然后，你可能<code>d</code>，也可<code>y</code>，也可以变大写等。</p></blockquote><h2 id="第四级-–-Vim-超能力"><a href="#第四级-–-Vim-超能力" class="headerlink" title="第四级 – Vim 超能力"></a>第四级 – Vim 超能力</h2><h3 id="在当前行上移动光标"><a href="#在当前行上移动光标" class="headerlink" title="在当前行上移动光标"></a>在当前行上移动光标</h3><ul><li><code>0</code> → 到行头</li><li><code>^</code> → 到本行的第一个非blank字符</li><li><code>$</code> → 到行尾</li><li><code>g_</code> → 到本行最后一个不是blank字符的位置。</li><li><code>fa</code> → 到下一个为a的字符处，你也可以fs到下一个为s的字符。</li><li><code>t,</code> → 到逗号前的第一个字符。逗号可以变成其它字符。</li><li><code>3fa</code> → 在当前行查找第三个出现的a。</li><li><code>F</code> 和 <code>T</code> → 和 <code>f</code> 和 <code>t</code> 一样，只不过是相反方向</li><li><code>dt&quot;</code> → 删除所有的内容，直到遇到双引号– “。</li></ul><p><img src="http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/line_moves.jpg" alt="此处输入图片的描述"></p><h3 id="区域选择"><a href="#区域选择" class="headerlink" title="区域选择"></a>区域选择</h3><ul><li>在visual 模式下，这些命令很强大，其命令格式为<code>&lt;action&gt;a&lt;object&gt;</code> 和 <code>&lt;action&gt;i&lt;object&gt;</code></li><li>action可以是任何的命令，如<code>d</code>(删除), <code>y</code> (拷贝), <code>v</code> (可以视模式选择)。</li><li>object 可能是： <code>w</code> 一个单词，<code>W</code>一个以空格为分隔的单词， <code>s</code> 一个句字， <code>p</code> 一个段落。也可以是一个特别的字符：<code>&quot;</code>、 <code>&#39;</code>、 <code>)</code>、 <code>}</code>、 <code>]</code>。</li></ul><p>假设你有一个字符串 <code>(map (+) (&quot;foo&quot;))</code>.而光标键在第一个<code>o</code>的位置</p><ol><li><code>vi&quot;</code> → 会选择 foo.</li><li><code>va&quot;</code> → 会选择 “foo”.</li><li><code>vi)</code>  → 会选择 “foo”.</li><li><code>va)</code> → 会选择(“foo”).</li><li><code>v2i)</code> → 会选择 map (+) (“foo”)</li><li><code>v2a)</code> → 会选择 (map (+) (“foo”))<br><img src="http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/textobjects.png" alt="此处输入图片的描述"></li></ol><h3 id="块操作-lt-C-v-gt"><a href="#块操作-lt-C-v-gt" class="headerlink" title="块操作: &lt;C-v&gt;"></a>块操作: <code>&lt;C-v&gt;</code></h3><ul><li>块操作，典型的操作： <code>0 &lt;C-v&gt; &lt;C-d&gt; I-- [ESC]</code><ul><li><code>^</code> → 到行头</li><li><code>&lt;C-v&gt;</code> → 开始块操作</li><li><code>&lt;C-d&gt;</code> → 向下移动 (你也可以使用hjkl来移动光标，或是使用%，或是别的)</li><li><code>I-- [ESC]</code> → I是插入，插入“–”，按ESC键来为每一行生效。</li></ul></li></ul><p><img src="http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/rectangular-blocks.gif" alt="此处输入图片的描述"></p><h3 id="自动提示"><a href="#自动提示" class="headerlink" title="自动提示"></a>自动提示</h3><ul><li>在 Insert 模式下，你可以输入一个词的开头，然后按 <code>&lt;C-p&gt;</code>或是<code>&lt;C-n&gt;</code>，自动补齐功能就出现了……</li></ul><p><img src="http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/completion.gif" alt="此处输入图片的描述"></p><h3 id="宏录制"><a href="#宏录制" class="headerlink" title="宏录制"></a>宏录制</h3><ul><li><code>qa</code> 把你的操作记录在寄存器 a。</li><li>于是 <code>@a</code> 会replay被录制的宏。</li><li><code>@@</code> 是一个快捷键用来replay最新录制的宏。</li></ul><blockquote><p>示例:在一个只有一行且这一行只有“1”的文本中，键入如下命令：</p></blockquote><ul><li><code>qaYp&lt;C-a&gt;q→</code></li><li><code>qa</code> 开始录制<ul><li><code>Yp</code> 复制行.</li><li><code>&lt;C-a&gt;</code> 增加1.</li><li><code>q</code> 停止录制.</li></ul></li><li><code>@a</code> → 在1下面写下 2</li><li><code>@@</code> → 在2 正面写下3</li><li>现在做 <code>100@@</code> 会创建新的100行，并把数据增加到 103.<br><img src="http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/macros.gif" alt="此处输入图片的描述"></li></ul><h3 id="可视化选择"><a href="#可视化选择" class="headerlink" title="可视化选择"></a>可视化选择</h3><p><strong>前面，我们看到了<code>&lt;C-v&gt;</code>的示例 （在Windows下应该是<code>&lt;C-q&gt;</code>），我们可以使用 v 和 V。一但被选好了，你可以做下面的事：</strong></p><ul><li><code>J</code> → 把所有的行连接起来（变成一行）</li><li><code>&lt;</code>或 <code>&gt;</code> → 左右缩进</li><li><code>=</code> → 自动给缩进 （注：这个功能相当强大，我太喜欢了）</li></ul><p><img src="http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/autoindent.gif" alt="此处输入图片的描述"></p><h4 id="在所有被选择的行后加上点东西："><a href="#在所有被选择的行后加上点东西：" class="headerlink" title="在所有被选择的行后加上点东西："></a>在所有被选择的行后加上点东西：</h4><ul><li><code>&lt;C-v&gt;</code></li><li>选中相关的行 (可使用 <code>j</code> 或 <code>&lt;C-d&gt;</code>或是 <code>/pattern</code> 或是 <code>%</code> 等……)</li><li><code>$</code> 到行最后</li><li><code>A</code>, 输入字符串，按 <code>ESC</code>。</li></ul><h3 id="分屏-split-和vsplit"><a href="#分屏-split-和vsplit" class="headerlink" title="分屏: :split 和vsplit."></a>分屏: <code>:split</code> 和<code>vsplit</code>.</h3><h3 id="下面是主要的命令，你可以使用VIM的帮助-help-split"><a href="#下面是主要的命令，你可以使用VIM的帮助-help-split" class="headerlink" title="下面是主要的命令，你可以使用VIM的帮助 :help split."></a>下面是主要的命令，你可以使用VIM的帮助 <code>:help split</code>.</h3><p><code>:split</code> → 创建分屏 (<code>:vsplit</code>创建垂直分屏)<br><code>&lt;C-w&gt;&lt;dir&gt;</code> →  dir就是方向，可以是 <code>hjkl</code> 或是<code>←↓↑→</code> 中的一个，其用来切换分屏。<br><code>&lt;C-w&gt;_</code> (或 <code>&lt;C-w&gt;|</code>) : 最大化尺寸 (<code>&lt;C-w&gt;|</code>垂直分屏)<br><code>&lt;C-w&gt;+</code>(或 <code>&lt;C-w&gt;-</code>) : 增加尺寸<br><img src="http://yannesposito.com/Scratch/img/blog/Learn-Vim-Progressively/split.gif" alt="此处输入图片的描述"></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tool </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iTerm2实用快捷键</title>
      <link href="/2017/08/31/iterm2-useful-command/"/>
      <url>/2017/08/31/iterm2-useful-command/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="常用的一些快捷键"><a href="#常用的一些快捷键" class="headerlink" title="常用的一些快捷键"></a>常用的一些快捷键</h2><h3 id="光标移动"><a href="#光标移动" class="headerlink" title="光标移动"></a>光标移动</h3><table><thead><tr><th style="text-align:center">快捷键</th><th style="text-align:center">命令说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>⌘ + 1 / 2</code></td><td style="text-align:center">左右 tab 之间来回切换</td></tr><tr><td style="text-align:center"><code>Ctr+a / Ctr+e</code></td><td style="text-align:center">光标移动到到行首/行尾</td></tr><tr><td style="text-align:center"><code>Ctr+f / Ctr+b</code></td><td style="text-align:center">按单词前移/后移</td></tr><tr><td style="text-align:center"><code>Ctr+p</code></td><td style="text-align:center">上一条命令</td></tr><tr><td style="text-align:center"><code>Ctr+u</code></td><td style="text-align:center">删掉整行</td></tr><tr><td style="text-align:center"><code>Ctr+w</code></td><td style="text-align:center">从光标处删至字首</td></tr><tr><td style="text-align:center"><code>Ctr+h / Ctr+d</code></td><td style="text-align:center">删掉光标前后的字符</td></tr><tr><td style="text-align:center"><code>Ctr+y</code></td><td style="text-align:center">粘贴至光标后</td></tr><tr><td style="text-align:center"><code>Ctr+r</code></td><td style="text-align:center">搜索命令历史</td></tr><tr><td style="text-align:center"><code>Ctrl + d</code></td><td style="text-align:center">删除当前光标的字符</td></tr><tr><td style="text-align:center"><code>Ctrl + k</code></td><td style="text-align:center">删除到文本末尾</td></tr><tr><td style="text-align:center"><code>Ctrl + t</code></td><td style="text-align:center">交换光标处文本</td></tr><tr><td style="text-align:center"><code>⌘ + shift + h</code></td><td style="text-align:center">列出剪切板历史</td></tr></tbody></table><h3 id="标签操作"><a href="#标签操作" class="headerlink" title="标签操作"></a>标签操作</h3><table><thead><tr><th style="text-align:center">快捷键</th><th style="text-align:center">命令说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>command + t</code></td><td style="text-align:center">新建标签</td></tr><tr><td style="text-align:center"><code>command + w</code></td><td style="text-align:center">关闭标签</td></tr><tr><td style="text-align:center"><code>command + 数字 / command + 左右方向键</code></td><td style="text-align:center">切换标签</td></tr><tr><td style="text-align:center"><code>command + enter</code></td><td style="text-align:center">切换全屏</td></tr><tr><td style="text-align:center"><code>command + f</code></td><td style="text-align:center">查找</td></tr></tbody></table><h3 id="分屏操作"><a href="#分屏操作" class="headerlink" title="分屏操作"></a>分屏操作</h3><table><thead><tr><th style="text-align:center">快捷键</th><th style="text-align:center">命令说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>command + d</code></td><td style="text-align:center">垂直分屏</td></tr><tr><td style="text-align:center"><code>command + shift + d</code></td><td style="text-align:center">水平分屏</td></tr><tr><td style="text-align:center"><code>command + option + 方向键 或 command + [ 或 command + ]</code></td><td style="text-align:center">切换屏幕</td></tr><tr><td style="text-align:center"><code>command + ;</code></td><td style="text-align:center">查看历史命令</td></tr><tr><td style="text-align:center"><code>ccommand + shift + h</code></td><td style="text-align:center">查看剪贴板历史</td></tr></tbody></table><h2 id="选中即复制"><a href="#选中即复制" class="headerlink" title="选中即复制"></a>选中即复制</h2><p><strong> iterm2有2种好用的选中即复制模式: </strong> </p><ul><li>一种是用鼠标，在iterm2中，选中某个路径或者某个词汇，那么，iterm2就自动复制了。 　　</li><li>另一种是无鼠标模式，<code>command+f</code>弹出iterm2的查找模式，输入要查找并复制的内容的前几个字母，确定找到的是自己的内容之后，输入<code>tab</code>，查找窗口将自动变化内容，并将其复制。如果输入的是<code>shift+tab</code>，则自动将查找内容的左边选中并复制。</li></ul><h2 id="自动完成"><a href="#自动完成" class="headerlink" title="自动完成"></a>自动完成</h2><p>输入打头几个字母，然后输入<code>command+;</code> iterm2将自动列出之前输入过的类似命令。 　　</p><h2 id="剪切历史"><a href="#剪切历史" class="headerlink" title="剪切历史"></a>剪切历史</h2><p>输入<code>command+shift+h</code>，iterm2将自动列出剪切板的历史记录。如果需要将剪切板的历史记录保存到磁盘，在<code>Preferences &gt; General &gt; Save copy/paste history to disk</code>中设置。</p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tool </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git远程操作详解</title>
      <link href="/2017/08/29/git-remote-commands/"/>
      <url>/2017/08/29/git-remote-commands/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h2><p>远程操作的第一步，通常是从远程主机克隆一个版本库，这时就要用到git clone命令。</p><h3 id="克隆远程仓库到本地"><a href="#克隆远程仓库到本地" class="headerlink" title="克隆远程仓库到本地"></a>克隆远程仓库到本地</h3><p>该命令会在本地主机生成一个目录，与远程主机的版本库同名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone &lt;版本库的网址&gt;</span><br></pre></td></tr></table></figure><p>比如，克隆jQuery的版本库。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/jquery/jquery.git</span><br></pre></td></tr></table></figure></p><h3 id="克隆远程仓库到指定目录"><a href="#克隆远程仓库到指定目录" class="headerlink" title="克隆远程仓库到指定目录"></a>克隆远程仓库到指定目录</h3><p>该命令会在本地主机生成不同的目录名，可以将仓库克隆到指定的目录名。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone &lt;版本库的网址&gt; &lt;本地目录名&gt;</span><br></pre></td></tr></table></figure></p><h3 id="git-clone支持多种协议"><a href="#git-clone支持多种协议" class="headerlink" title="git clone支持多种协议"></a>git clone支持多种协议</h3><p>git clone支持多种协议，除了HTTP(s)以外，还支持SSH、Git、本地文件协议等，下面是一些例子。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git clone http[s]://example.com/path/to/repo.git/</span><br><span class="line">$ git clone ssh://example.com/path/to/repo.git/</span><br><span class="line">$ git clone git://example.com/path/to/repo.git/</span><br><span class="line">$ git clone /opt/git/project.git </span><br><span class="line">$ git clone file:///opt/git/project.git</span><br><span class="line">$ git clone ftp[s]://example.com/path/to/repo.git/</span><br><span class="line">$ git clone rsync://example.com/path/to/repo.git/</span><br></pre></td></tr></table></figure></p><p>SSH协议还有另一种写法。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone [user@]example.com:path/to/repo.git/</span><br></pre></td></tr></table></figure></p><p>通常来说，Git协议下载速度最快，SSH协议用于需要用户认证的场合。</p><h2 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h2><p>为了便于管理，Git要求每个远程主机都必须指定一个主机名。git remote命令就用于管理主机名。</p><h3 id="列出所有远程主机"><a href="#列出所有远程主机" class="headerlink" title="列出所有远程主机"></a>列出所有远程主机</h3><p>不带选项的时候，git remote命令列出所有远程主机。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git remote</span><br><span class="line">origin</span><br></pre></td></tr></table></figure></p><h3 id="查看远程主机的网址"><a href="#查看远程主机的网址" class="headerlink" title="查看远程主机的网址"></a>查看远程主机的网址</h3><p>使用-v选项，可以查看远程主机的网址。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br><span class="line">origin  git@github.com:jquery/jquery.git (fetch)</span><br><span class="line">origin  git@github.com:jquery/jquery.git (push)</span><br></pre></td></tr></table></figure></p><p>上面命令表示，当前只有一台远程主机，叫做origin，以及它的网址。</p><h3 id="克隆时指定远程主机"><a href="#克隆时指定远程主机" class="headerlink" title="克隆时指定远程主机"></a>克隆时指定远程主机</h3><p>克隆版本库的时候，所使用的远程主机自动被Git命名为origin。如果想用其他的主机名，需要用git clone命令的-o选项指定。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone -o jQuery https://github.com/jquery/jquery.git</span><br><span class="line">$ git remote</span><br><span class="line">jQuery</span><br></pre></td></tr></table></figure></p><p>上面命令表示，克隆的时候，指定远程主机叫做jQuery</p><h3 id="查看该主机的详细信息"><a href="#查看该主机的详细信息" class="headerlink" title="查看该主机的详细信息"></a>查看该主机的详细信息</h3><p>git remote show命令加上主机名，可以查看该主机的详细信息。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote show &lt;主机名&gt;</span><br></pre></td></tr></table></figure></p><h3 id="添加远程主机"><a href="#添加远程主机" class="headerlink" title="添加远程主机"></a>添加远程主机</h3><p>git remote add命令用于添加远程主机。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add &lt;主机名&gt; &lt;网址&gt;</span><br></pre></td></tr></table></figure></p><h3 id="删除远程主机"><a href="#删除远程主机" class="headerlink" title="删除远程主机"></a>删除远程主机</h3><p>git remote rm命令用于删除远程主机。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote rm &lt;主机名&gt;</span><br></pre></td></tr></table></figure></p><h3 id="重命名远程主机"><a href="#重命名远程主机" class="headerlink" title="重命名远程主机"></a>重命名远程主机</h3><p>git remote rename命令用于远程主机的改名。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote rename &lt;原主机名&gt; &lt;新主机名&gt;</span><br></pre></td></tr></table></figure></p><h3 id="修改远程仓库地址"><a href="#修改远程仓库地址" class="headerlink" title="修改远程仓库地址"></a>修改远程仓库地址</h3><p>git remote set-url修改远程仓库地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin [url]</span><br></pre></td></tr></table></figure></p><h2 id="git-fetch"><a href="#git-fetch" class="headerlink" title="git fetch"></a>git fetch</h2><p>一旦远程主机的版本库有了更新（Git术语叫做commit），需要将这些更新取回本地，这时就要用到git fetch命令。</p><blockquote><p>注意：git fetch 并不会改变你本地仓库的状态。它不会更新你的 master 分支，也不会修改你磁盘上的文件。</p></blockquote><h3 id="取回远程主机的更新"><a href="#取回远程主机的更新" class="headerlink" title="取回远程主机的更新"></a>取回远程主机的更新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch &lt;远程主机名&gt;</span><br></pre></td></tr></table></figure><p>上面命令将某个远程主机的更新，全部取回本地。<br>git fetch命令通常用来查看其他人的进程，因为它取回的代码对你本地的开发代码没有影响。<br>默认情况下，git fetch取回所有分支（branch）的更新。如果只想取回特定分支的更新，可以指定分支名。</p><h3 id="取回远程主机特定分支更新"><a href="#取回远程主机特定分支更新" class="headerlink" title="取回远程主机特定分支更新"></a>取回远程主机特定分支更新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch &lt;远程主机名&gt; &lt;分支名&gt;</span><br></pre></td></tr></table></figure><p>比如，取回origin主机的master分支。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch origin master</span><br></pre></td></tr></table></figure></p><p>所取回的更新，在本地主机上要用”远程主机名/分支名”的形式读取。比如origin主机的master，就要用origin/master读取。···</p><h3 id="查看远程分支·"><a href="#查看远程分支·" class="headerlink" title="查看远程分支·"></a>查看远程分支·</h3><p>git branch命令的-r选项，可以用来查看远程分支，-a选项查看所有分支。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -r</span><br><span class="line">origin/master</span><br><span class="line"></span><br><span class="line">$ git branch -a</span><br><span class="line">* master</span><br><span class="line">  remotes/origin/master</span><br></pre></td></tr></table></figure></p><p>上面命令表示，本地主机的当前分支是master，远程分支是origin/master。</p><h3 id="基于远程分支创建本地分支"><a href="#基于远程分支创建本地分支" class="headerlink" title="基于远程分支创建本地分支"></a>基于远程分支创建本地分支</h3><p>取回远程主机的更新以后，可以在它的基础上，使用git checkout命令创建一个新的分支。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b newBrach origin/master</span><br></pre></td></tr></table></figure></p><p>上面命令表示，在origin/master的基础上，创建一个新分支。</p><h3 id="本地分支上合并远程分支"><a href="#本地分支上合并远程分支" class="headerlink" title="本地分支上合并远程分支"></a>本地分支上合并远程分支</h3><p>此外，也可以使用git merge命令或者git rebase命令，在本地分支上合并远程分支。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git merge origin/master</span><br><span class="line"># 或者</span><br><span class="line">$ git rebase origin/master</span><br><span class="line">上面命令表示在当前分支上，合并origin/master。</span><br></pre></td></tr></table></figure></p><h2 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h2><p>git pull命令的作用是，取回远程主机某个分支的更新，再与本地的指定分支合并。它的完整格式稍稍有点复杂。</p><blockquote><p>git pull命令本质就是get fetch和git merge的简化命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="合并远程指定分支到本地指定分支"><a href="#合并远程指定分支到本地指定分支" class="headerlink" title="合并远程指定分支到本地指定分支"></a>合并远程指定分支到本地指定分支</h3><p>比如，取回origin主机的next分支，与本地的master分支合并，需要写成下面这样。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin next:master</span><br></pre></td></tr></table></figure></p><h3 id="合并远程指定分支到本地当前分支"><a href="#合并远程指定分支到本地当前分支" class="headerlink" title="合并远程指定分支到本地当前分支"></a>合并远程指定分支到本地当前分支</h3><p>如果远程分支是与当前分支合并，则冒号后面的部分可以省略。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin next</span><br></pre></td></tr></table></figure></p><p>上面命令表示，取回origin/next分支，再与当前分支合并。实质上，这等同于先做git fetch，再做git merge。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch origin</span><br><span class="line">$ git merge origin/next</span><br></pre></td></tr></table></figure></p><h3 id="指定本地分支和远程分支的追踪关系"><a href="#指定本地分支和远程分支的追踪关系" class="headerlink" title="指定本地分支和远程分支的追踪关系"></a>指定本地分支和远程分支的追踪关系</h3><p>在某些场合，Git会自动在本地分支与远程分支之间，建立一种追踪关系（tracking）。比如，在git clone的时候，所有本地分支默认与远程主机的同名分支，建立追踪关系，也就是说，本地的master分支自动”追踪”origin/master分支。<br>Git也允许手动建立追踪关系。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch --set-upstream master origin/next</span><br></pre></td></tr></table></figure></p><p>上面命令指定master分支追踪origin/next分支。</p><p>如果当前分支与远程分支存在追踪关系，git pull就可以省略远程分支名。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin</span><br></pre></td></tr></table></figure></p><p>上面命令表示，本地的当前分支自动与对应的origin主机”追踪分支”（remote-tracking branch）进行合并。<br>如果当前分支只有一个追踪分支，连远程主机名都可以省略。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull</span><br></pre></td></tr></table></figure></p><p>上面命令表示，当前分支自动与唯一一个追踪分支进行合并。</p><p>如果合并需要采用rebase模式，可以使用–rebase选项。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull --rebase &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</span><br></pre></td></tr></table></figure></p><h3 id="本地删除远程已经删除的分支"><a href="#本地删除远程已经删除的分支" class="headerlink" title="本地删除远程已经删除的分支"></a>本地删除远程已经删除的分支</h3><p>如果远程主机删除了某个分支，默认情况下，git pull 不会在拉取远程分支的时候，删除对应的本地分支。这是为了防止，由于其他人操作了远程主机，导致git pull不知不觉删除了本地分支。<br>但是，你可以改变这个行为，加上参数 -p 就会在本地删除远程已经删除的分支。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git pull -p</span><br><span class="line"># 等同于下面的命令</span><br><span class="line">$ git fetch --prune origin </span><br><span class="line">$ git fetch -p</span><br></pre></td></tr></table></figure></p><h2 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h2><p>git push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相仿。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br></pre></td></tr></table></figure></p><blockquote><p>注意:<br>分支推送顺序的写法是&lt;来源地&gt;:&lt;目的地&gt;，所以git pull是&lt;远程分支&gt;:&lt;本地分支&gt;，而git push是&lt;本地分支&gt;:&lt;远程分支&gt;。</p></blockquote><h3 id="推送时省略远程分支名"><a href="#推送时省略远程分支名" class="headerlink" title="推送时省略远程分支名"></a>推送时省略远程分支名</h3><p>如果省略远程分支名，则表示将本地分支推送与之存在”追踪关系”的远程分支（通常两者同名），如果该远程分支不存在，则会被新建。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure></p><p>上面命令表示，将本地的master分支推送到origin主机的master分支。如果后者不存在，则会被新建。</p><h3 id="推送时省略本地分支名"><a href="#推送时省略本地分支名" class="headerlink" title="推送时省略本地分支名"></a>推送时省略本地分支名</h3><p>如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin :master</span><br><span class="line"># 等同于</span><br><span class="line">$ git push origin --delete master</span><br></pre></td></tr></table></figure></p><p>上面命令表示删除origin主机的master分支。</p><h3 id="省略本地分支名和远程分支名"><a href="#省略本地分支名和远程分支名" class="headerlink" title="省略本地分支名和远程分支名"></a>省略本地分支名和远程分支名</h3><p>如果当前分支与远程分支之间存在追踪关系，则本地分支和远程分支都可以省略。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin</span><br></pre></td></tr></table></figure></p><p>上面命令表示，将当前分支推送到origin主机的对应分支。</p><h3 id="省略本地分支名、主机名和远程分支名"><a href="#省略本地分支名、主机名和远程分支名" class="headerlink" title="省略本地分支名、主机名和远程分支名"></a>省略本地分支名、主机名和远程分支名</h3><p>如果当前分支只有一个追踪分支，那么主机名都可以省略。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push</span><br></pre></td></tr></table></figure></p><h3 id="推送到指定主机并设置默认主机"><a href="#推送到指定主机并设置默认主机" class="headerlink" title="推送到指定主机并设置默认主机"></a>推送到指定主机并设置默认主机</h3><p>如果当前分支与多个主机存在追踪关系，则可以使用-u选项指定一个默认主机，这样后面就可以不加任何参数使用git push。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure></p><p>上面命令将本地的master分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数使用git push了。</p><h3 id="修改推送方式为matching"><a href="#修改推送方式为matching" class="headerlink" title="修改推送方式为matching"></a>修改推送方式为matching</h3><p>不带任何参数的git push，默认只推送当前分支，这叫做simple方式。此外，还有一种matching方式，会推送所有有对应的远程分支的本地分支。Git 2.0版本之前，默认采用matching方式，现在改为默认采用simple方式。如果要修改这个设置，可以采用git config命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global push.default matching</span><br><span class="line"># 或者</span><br><span class="line">$ git config --global push.default simple</span><br></pre></td></tr></table></figure></p><h3 id="将本地的所有分支都推送到远程主机"><a href="#将本地的所有分支都推送到远程主机" class="headerlink" title="将本地的所有分支都推送到远程主机"></a>将本地的所有分支都推送到远程主机</h3><p>还有一种情况，就是不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机，这时需要使用–all选项。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push --all origin</span><br></pre></td></tr></table></figure></p><p>上面命令表示，将所有本地分支都推送到origin主机。</p><h3 id="强制覆盖更新远程主机上的版本"><a href="#强制覆盖更新远程主机上的版本" class="headerlink" title="强制覆盖更新远程主机上的版本"></a>强制覆盖更新远程主机上的版本</h3><p>如果远程主机的版本比本地版本更新，推送时Git会报错，要求先在本地做git pull合并差异，然后再推送到远程主机。这时，如果你一定要推送，可以使用–force选项。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push --force origin</span><br></pre></td></tr></table></figure></p><p>上面命令使用–force选项，结果导致远程主机上更新的版本被覆盖。除非你很确定要这样做，否则应该尽量避免使用–force选项。</p><h3 id="推送标签"><a href="#推送标签" class="headerlink" title="推送标签"></a>推送标签</h3><p>最后，git push不会推送标签（tag），除非使用–tags选项。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin --tags</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 术业专攻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令操作集合</title>
      <link href="/2017/08/08/git-useful-command-list/"/>
      <url>/2017/08/08/git-useful-command-list/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="/resources/post_images/git常用命令集合.png" alt="日常使用命令"></p><h2 id="新建代码库"><a href="#新建代码库" class="headerlink" title="新建代码库"></a>新建代码库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 在当前目录新建一个Git代码库</span><br><span class="line">$ git init</span><br><span class="line"></span><br><span class="line"># 新建一个目录，将其初始化为Git代码库</span><br><span class="line">$ git init [project-name]</span><br><span class="line"></span><br><span class="line"># 下载一个项目和它的整个代码历史</span><br><span class="line">$ git clone [url]</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>Git的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前的Git配置</span><br><span class="line">$ git config --list</span><br><span class="line"></span><br><span class="line"># 编辑Git配置文件</span><br><span class="line">$ git config -e [--global]</span><br><span class="line"></span><br><span class="line"># 设置提交代码时的用户信息</span><br><span class="line">$ git config [--global] user.name &quot;[name]&quot;</span><br><span class="line">$ git config [--global] user.email &quot;[email address]&quot;</span><br></pre></td></tr></table></figure></p><h2 id="增加-删除文件"><a href="#增加-删除文件" class="headerlink" title="增加/删除文件"></a>增加/删除文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 添加指定文件到暂存区</span><br><span class="line">$ git add [file1] [file2] ...</span><br><span class="line"></span><br><span class="line"># 添加指定目录到暂存区，包括子目录</span><br><span class="line">$ git add [dir]</span><br><span class="line"></span><br><span class="line"># 添加当前目录的所有文件到暂存区</span><br><span class="line">$ git add .</span><br><span class="line"></span><br><span class="line"># 添加每个变化前，都会要求确认</span><br><span class="line"># 对于同一个文件的多处变化，可以实现分次提交</span><br><span class="line">$ git add -p</span><br><span class="line"></span><br><span class="line"># 删除工作区文件，并且将这次删除放入暂存区</span><br><span class="line">$ git rm [file1] [file2] ...</span><br><span class="line"></span><br><span class="line"># 停止追踪指定文件，但该文件会保留在工作区</span><br><span class="line">$ git rm --cached [file]</span><br><span class="line"></span><br><span class="line"># 改名文件，并且将这个改名放入暂存区</span><br><span class="line">$ git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure><h2 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 提交暂存区到仓库区</span><br><span class="line">$ git commit -m [message]</span><br><span class="line"></span><br><span class="line"># 提交暂存区的指定文件到仓库区</span><br><span class="line">$ git commit [file1] [file2] ... -m [message]</span><br><span class="line"></span><br><span class="line"># 提交工作区自上次commit之后的变化，直接到仓库区</span><br><span class="line">$ git commit -a</span><br><span class="line"></span><br><span class="line"># 提交时显示所有diff信息</span><br><span class="line">$ git commit -v</span><br><span class="line"></span><br><span class="line"># 使用一次新的commit，替代上一次提交</span><br><span class="line"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span><br><span class="line">$ git commit --amend -m [message]</span><br><span class="line"></span><br><span class="line"># 重做上一次commit，并包括指定文件的新变化</span><br><span class="line">$ git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># 列出所有本地分支</span><br><span class="line">$ git branch</span><br><span class="line"></span><br><span class="line"># 列出所有远程分支</span><br><span class="line">$ git branch -r</span><br><span class="line"></span><br><span class="line"># 列出所有本地分支和远程分支</span><br><span class="line">$ git branch -a</span><br><span class="line"></span><br><span class="line"># 新建一个分支，但依然停留在当前分支</span><br><span class="line">$ git branch [branch-name]</span><br><span class="line"></span><br><span class="line"># 新建一个分支，并切换到该分支</span><br><span class="line">$ git checkout -b [branch]</span><br><span class="line"></span><br><span class="line"># 新建一个分支，指向指定commit</span><br><span class="line">$ git branch [branch] [commit]</span><br><span class="line"></span><br><span class="line"># 新建一个分支，与指定的远程分支建立追踪关系</span><br><span class="line">$ git branch --track [branch] [remote-branch]</span><br><span class="line"></span><br><span class="line"># 切换到指定分支，并更新工作区</span><br><span class="line">$ git checkout [branch-name]</span><br><span class="line"></span><br><span class="line"># 切换到上一个分支</span><br><span class="line">$ git checkout -</span><br><span class="line"></span><br><span class="line"># 建立追踪关系，在现有分支与指定的远程分支之间</span><br><span class="line">$ git branch --set-upstream [branch] [remote-branch]</span><br><span class="line"></span><br><span class="line"># 合并指定分支到当前分支</span><br><span class="line">$ git merge [branch]</span><br><span class="line"></span><br><span class="line"># 选择一个commit，合并进当前分支</span><br><span class="line">$ git cherry-pick [commit]</span><br><span class="line"></span><br><span class="line"># 删除分支</span><br><span class="line">$ git branch -d [branch-name]</span><br><span class="line"></span><br><span class="line"># 删除远程分支</span><br><span class="line">$ git push origin --delete [branch-name]</span><br><span class="line">$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure><h2 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"># 显示有变更的文件</span><br><span class="line">$ git status</span><br><span class="line"></span><br><span class="line"># 显示当前分支的版本历史</span><br><span class="line">$ git log</span><br><span class="line"></span><br><span class="line"># 显示commit历史，以及每次commit发生变更的文件</span><br><span class="line">$ git log --stat</span><br><span class="line"></span><br><span class="line"># 搜索提交历史，根据关键词</span><br><span class="line">$ git log -S [keyword]</span><br><span class="line"></span><br><span class="line"># 显示某个commit之后的所有变动，每个commit占据一行</span><br><span class="line">$ git log [tag] HEAD --pretty=format:%s</span><br><span class="line"></span><br><span class="line"># 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件</span><br><span class="line">$ git log [tag] HEAD --grep feature</span><br><span class="line"></span><br><span class="line"># 显示某个文件的版本历史，包括文件改名</span><br><span class="line">$ git log --follow [file]</span><br><span class="line">$ git whatchanged [file]</span><br><span class="line"></span><br><span class="line"># 显示指定文件相关的每一次diff</span><br><span class="line">$ git log -p [file]</span><br><span class="line"></span><br><span class="line"># 显示过去5次提交</span><br><span class="line">$ git log -5 --pretty --oneline</span><br><span class="line"></span><br><span class="line"># 显示所有提交过的用户，按提交次数排序</span><br><span class="line">$ git shortlog -sn</span><br><span class="line"></span><br><span class="line"># 显示指定文件是什么人在什么时间修改过</span><br><span class="line">$ git blame [file]</span><br><span class="line"></span><br><span class="line"># 显示暂存区和工作区的差异</span><br><span class="line">$ git diff</span><br><span class="line"></span><br><span class="line"># 显示暂存区和上一个commit的差异</span><br><span class="line">$ git diff --cached [file]</span><br><span class="line"></span><br><span class="line"># 显示工作区与当前分支最新commit之间的差异</span><br><span class="line">$ git diff HEAD</span><br><span class="line"></span><br><span class="line"># 显示两次提交之间的差异</span><br><span class="line">$ git diff [first-branch]...[second-branch]</span><br><span class="line"></span><br><span class="line"># 显示今天你写了多少行代码</span><br><span class="line">$ git diff --shortstat &quot;@&#123;0 day ago&#125;&quot;</span><br><span class="line"></span><br><span class="line"># 显示某次提交的元数据和内容变化</span><br><span class="line">$ git show [commit]</span><br><span class="line"></span><br><span class="line"># 显示某次提交发生变化的文件</span><br><span class="line">$ git show --name-only [commit]</span><br><span class="line"></span><br><span class="line"># 显示某次提交时，某个文件的内容</span><br><span class="line">$ git show [commit]:[filename]</span><br><span class="line"></span><br><span class="line"># 显示当前分支的最近几次提交</span><br><span class="line">$ git reflog</span><br></pre></td></tr></table></figure><h2 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 下载远程仓库的所有变动</span><br><span class="line">$ git fetch [remote]</span><br><span class="line"></span><br><span class="line"># 显示所有远程仓库</span><br><span class="line">$ git remote -v</span><br><span class="line"></span><br><span class="line"># 显示某个远程仓库的信息</span><br><span class="line">$ git remote show [remote]</span><br><span class="line"></span><br><span class="line"># 增加一个新的远程仓库，并命名</span><br><span class="line">$ git remote add [shortname] [url]</span><br><span class="line"></span><br><span class="line"># 取回远程仓库的变化，并与本地分支合并</span><br><span class="line">$ git pull [remote] [branch]</span><br><span class="line"></span><br><span class="line"># 上传本地指定分支到远程仓库</span><br><span class="line">$ git push [remote] [branch]</span><br><span class="line"></span><br><span class="line"># 强行推送当前分支到远程仓库，即使有冲突</span><br><span class="line">$ git push [remote] --force</span><br><span class="line"></span><br><span class="line"># 推送所有分支到远程仓库</span><br><span class="line">$ git push [remote] --all</span><br></pre></td></tr></table></figure><h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># 恢复暂存区的指定文件到工作区</span><br><span class="line">$ git checkout [file]</span><br><span class="line"></span><br><span class="line"># 恢复某个commit的指定文件到暂存区和工作区</span><br><span class="line">$ git checkout [commit] [file]</span><br><span class="line"></span><br><span class="line"># 恢复暂存区的所有文件到工作区</span><br><span class="line">$ git checkout .</span><br><span class="line"></span><br><span class="line"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span><br><span class="line">$ git reset [file]</span><br><span class="line"></span><br><span class="line"># 重置暂存区与工作区，与上一次commit保持一致</span><br><span class="line">$ git reset --hard </span><br><span class="line"></span><br><span class="line"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span><br><span class="line">$ git reset [commit]</span><br><span class="line"></span><br><span class="line"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致(即撤销 merge，回到合并其他分支的分支下，执行以下命令)</span><br><span class="line">$ git reset --hard [commit]</span><br><span class="line"></span><br><span class="line"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span><br><span class="line">$ git reset --keep [commit]</span><br><span class="line"></span><br><span class="line"># 新建一个commit，用来撤销指定commit</span><br><span class="line"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span><br><span class="line">$ git revert [commit]</span><br><span class="line"></span><br><span class="line"># 暂时将未提交的变化移除，稍后再移入</span><br><span class="line">$ git stash</span><br><span class="line">$ git stash pop</span><br></pre></td></tr></table></figure><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 列出所有tag</span><br><span class="line">$ git tag</span><br><span class="line"></span><br><span class="line"># 新建一个tag在当前commit</span><br><span class="line">$ git tag [tag]</span><br><span class="line"></span><br><span class="line"># 新建一个tag在指定commit</span><br><span class="line">$ git tag [tag] [commit]</span><br><span class="line"></span><br><span class="line"># 删除本地tag</span><br><span class="line">$ git tag -d [tag]</span><br><span class="line"></span><br><span class="line"># 删除远程tag</span><br><span class="line">$ git push origin :refs/tags/[tagName]</span><br><span class="line"></span><br><span class="line"># 查看tag信息</span><br><span class="line">$ git show [tag]</span><br><span class="line"></span><br><span class="line"># 提交指定tag</span><br><span class="line">$ git push [remote] [tag]</span><br><span class="line"></span><br><span class="line"># 提交所有tag</span><br><span class="line">$ git push [remote] --tags</span><br><span class="line"></span><br><span class="line"># 新建一个分支，指向某个tag</span><br><span class="line">$ git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 生成一个可供发布的压缩包</span><br><span class="line">$ git archive</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 术业专攻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql数据库问题记录</title>
      <link href="/2017/07/15/mysql-problems-record/"/>
      <url>/2017/07/15/mysql-problems-record/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-启动服务器"><a href="#1-启动服务器" class="headerlink" title="1. 启动服务器"></a>1. 启动服务器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql.server start</span><br></pre></td></tr></table></figure><h2 id="2-sql导入数据库"><a href="#2-sql导入数据库" class="headerlink" title="2. sql导入数据库"></a>2. sql导入数据库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root --default-character-set=utf8 -p wens_uc &lt; wens_uc.sql</span><br></pre></td></tr></table></figure><h2 id="3-关闭启用ssl连接警告"><a href="#3-关闭启用ssl连接警告" class="headerlink" title="3. 关闭启用ssl连接警告"></a>3. 关闭启用ssl连接警告</h2><p>Establishing SSL connection without server’s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn’t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to ‘false’. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</p><blockquote><p>解决：在数据源url加上<code>&amp;useSSL=false</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">datasource:</span><br><span class="line">  url: jdbc:mysql://127.0.0.1:3306/guns?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false</span><br></pre></td></tr></table></figure><h2 id="4-查找mysql版本号命令"><a href="#4-查找mysql版本号命令" class="headerlink" title="4. 查找mysql版本号命令"></a>4. 查找mysql版本号命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 帮助文档查找命令</span><br><span class="line">mysql --help|grep version</span><br><span class="line"></span><br><span class="line"># 查询mysyl命令</span><br><span class="line">mysql -V 或者 mysql --version</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 问题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>brew命令行使用</title>
      <link href="/2017/07/15/brew-command-usage/"/>
      <url>/2017/07/15/brew-command-usage/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="brew使用方法"><a href="#brew使用方法" class="headerlink" title="brew使用方法"></a>brew使用方法</h2><h3 id="查找软件包"><a href="#查找软件包" class="headerlink" title="查找软件包"></a>查找软件包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew search wget</span><br></pre></td></tr></table></figure><h3 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install wget</span><br></pre></td></tr></table></figure><h3 id="列出已安装的软件包"><a href="#列出已安装的软件包" class="headerlink" title="列出已安装的软件包"></a>列出已安装的软件包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew list</span><br></pre></td></tr></table></figure><h3 id="删除软件包"><a href="#删除软件包" class="headerlink" title="删除软件包"></a>删除软件包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew remove wget</span><br></pre></td></tr></table></figure><h3 id="查看软件包信息"><a href="#查看软件包信息" class="headerlink" title="查看软件包信息"></a>查看软件包信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew info wget</span><br></pre></td></tr></table></figure><h3 id="列出软件包的依赖关系"><a href="#列出软件包的依赖关系" class="headerlink" title="列出软件包的依赖关系"></a>列出软件包的依赖关系</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew deps wget</span><br></pre></td></tr></table></figure><h3 id="更新brew"><a href="#更新brew" class="headerlink" title="更新brew"></a>更新brew</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew update</span><br></pre></td></tr></table></figure><h3 id="列出过时的软件包（已安装但不是最新版本）"><a href="#列出过时的软件包（已安装但不是最新版本）" class="headerlink" title="列出过时的软件包（已安装但不是最新版本）"></a>列出过时的软件包（已安装但不是最新版本）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew outdated</span><br></pre></td></tr></table></figure><h3 id="更新过时的软件包（全部或指定）"><a href="#更新过时的软件包（全部或指定）" class="headerlink" title="更新过时的软件包（全部或指定）"></a>更新过时的软件包（全部或指定）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew upgrade </span><br><span class="line">或 </span><br><span class="line">brew upgrade wget</span><br></pre></td></tr></table></figure><h2 id="tree命令使用"><a href="#tree命令使用" class="headerlink" title="tree命令使用"></a>tree命令使用</h2><h3 id="安装-tree-命令行"><a href="#安装-tree-命令行" class="headerlink" title="安装 tree 命令行"></a>安装 tree 命令行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install tree</span><br></pre></td></tr></table></figure><blockquote><p>提示：mac是没有tree命令行的，安装后就可以在mac上使用 tree 命令行了。</p></blockquote><h4 id="tree命令行参数："><a href="#tree命令行参数：" class="headerlink" title="tree命令行参数："></a><strong>tree命令行参数：</strong></h4><p><code>-a</code>  显示所有文件和目录。<br><code>-A</code>  使用ASNI绘图字符显示树状图而非以ASCII字符组合。<br><code>-C</code>  在文件和目录清单加上色彩，便于区分各种类型。<br><code>-d</code>  显示目录名称而非内容。<br><code>-D</code>  列出文件或目录的更改时间。<br><code>-f</code>  在每个文件或目录之前，显示完整的相对路径名称。<br><code>-F</code>  在执行文件，目录，Socket，符号连接，管道名称名称，各自加上”*”,”/“,”=”,”@”,”|”号。<br><code>-g</code>  列出文件或目录的所属群组名称，没有对应的名称时，则显示群组识别码。<br><code>-i</code>  不以阶梯状列出文件或目录名称。<br><code>-I</code>  不显示符合范本样式的文件或目录名称。<br><code>-l</code>  如遇到性质为符号连接的目录，直接列出该连接所指向的原始目录。<br><code>-n</code>  不在文件和目录清单加上色彩。<br><code>-N</code>  直接列出文件和目录名称，包括控制字符。<br><code>-p</code>  列出权限标示。<br><code>-P</code>  只显示符合范本样式的文件或目录名称。<br><code>-q</code>  用”?”号取代控制字符，列出文件和目录名称。<br><code>-s</code>  列出文件或目录大小。<br><code>-t</code>  用文件和目录的更改时间排序。<br><code>-u</code>  列出文件或目录的拥有者名称，没有对应的名称时，则显示用户识别码。<br><code>-x</code>  将范围局限在现行的文件系统中，若指定目录下的某些子目录，其存放于另一个文件系统上，则将该子目录予以排除在寻找范围外。</p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tool </tag>
            
            <tag> command </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 常用命令</title>
      <link href="/2017/05/07/linux-commmn-command/"/>
      <url>/2017/05/07/linux-commmn-command/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h2><ul><li>创建一个新的 tar 文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar cvf archive_name.tar dirname/</span><br></pre></td></tr></table></figure><ul><li>解压 tar 文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xvf archive_name.tar</span><br></pre></td></tr></table></figure><ul><li>查看 tar 文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar tvf archive_name.tar</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2010/04/unix-tar-command-examples/" target="_blank" rel="noopener">The Ultimate Tar Command Tutorial with 10 Practical Examples</a></p><h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h2><ul><li>在文件中查找字符串(不区分大小写)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -i &quot;the&quot; demo_file</span><br></pre></td></tr></table></figure><ul><li>输出成功匹配的行，以及该行之后的三行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -A 3 -i &quot;example&quot; demo_text</span><br></pre></td></tr></table></figure><ul><li>在一个文件夹中递归查询包含指定字符串的文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -r &quot;ramesh&quot; *</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2009/03/15-practical-unix-grep-command-examples/" target="_blank" rel="noopener">Get a Grip on the Grep! – 15 Practical Grep Command Examples</a></p><h2 id="find"><a href="#find" class="headerlink" title="find"></a>find</h2><ul><li>查找指定文件名的文件(不区分大小写)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -iname &quot;MyProgram.c&quot;</span><br></pre></td></tr></table></figure><ul><li>对找到的文件执行某个命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -iname &quot;MyProgram.c&quot; -exec md5sum &#123;&#125; \;</span><br></pre></td></tr></table></figure><ul><li>查找 home 目录下的所有空文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find ~ -empty</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2009/03/15-practical-linux-find-command-examples/" target="_blank" rel="noopener">Mommy, I found it! — 15 Practical Linux Find Command Examples</a></p><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><ul><li>登录到远程主机</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -l jsmith remotehost.example.com</span><br></pre></td></tr></table></figure><ul><li>调试 ssh 客户端</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -v -l jsmith remotehost.example.com</span><br></pre></td></tr></table></figure><ul><li>显示 ssh 客户端版本</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -V</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2008/05/5-basic-linux-ssh-client-commands/" target="_blank" rel="noopener">5 Basic Linux SSH Client Commands</a></p><h2 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h2><ul><li>当你将 Dos 系统中的文件复制到 Unix/Linux 后，这个文件每行都会以\r\n 结尾，sed 可以轻易将其转换为 Unix 格式的文件，使用\n 结尾的文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;s/./&apos; filename</span><br></pre></td></tr></table></figure><ul><li>反转文件内容并输出</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n &apos;1!G; h; p&apos; filename</span><br></pre></td></tr></table></figure><ul><li>为非空行添加行号</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;/./=&apos; thegeekstuff.txt | sed &apos;N; s/\n/ /&apos;</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2009/10/unix-sed-tutorial-advanced-sed-substitution-examples/" target="_blank" rel="noopener">Advanced Sed Substitution Examples</a></p><h2 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h2><ul><li>删除重复行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &apos;!( in array) &#123; array[]; print&#125;&apos; temp</span><br></pre></td></tr></table></figure><ul><li>打印/etc/passwd 中所有包含同样的 uid 和 gid 的行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F &apos;:&apos; &apos;=&apos; /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>打印文件中的指定部分的字段</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &apos;&#123;print ,;&#125;&apos; employee.txt</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2010/01/8-powerful-awk-built-in-variables-fs-ofs-rs-ors-nr-nf-filename-fnr/" target="_blank" rel="noopener">8 Powerful Awk Built-in Variables – FS, OFS, RS, ORS, NR, NF, FILENAME, FNR</a></p><h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><ul><li>打开文件并跳到第 10 行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim +10 filename.txt</span><br></pre></td></tr></table></figure><ul><li>打开文件跳到第一个匹配的行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim +/search-term filename.txt</span><br></pre></td></tr></table></figure><ul><li>以只读模式打开文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim -R /etc/passwd</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2009/01/vi-and-vim-macro-tutorial-how-to-record-and-play/" target="_blank" rel="noopener">How To Record and Play in Vim Editor</a></p><h2 id="diff"><a href="#diff" class="headerlink" title="diff"></a>diff</h2><ul><li>比较的时候忽略空白符</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diff -w name_list.txt name_list_new.txt</span><br></pre></td></tr></table></figure><h2 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h2><ul><li>以升序对文件内容排序</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort names.txt</span><br></pre></td></tr></table></figure><ul><li>以降序对文件内容排序</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort -r names.txt</span><br></pre></td></tr></table></figure><ul><li>以第三个字段对/etc/passwd 的内容排序</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort -t: -k 3n /etc/passwd | more</span><br></pre></td></tr></table></figure><h2 id="export"><a href="#export" class="headerlink" title="export"></a>export</h2><ul><li>输出跟字符串 oracle 匹配的环境变量</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export | grep ORCALE</span><br><span class="line">declare -x ORACLE_BASE=&quot;/u01/app/oracle&quot;</span><br><span class="line">declare -x ORACLE_HOME=&quot;/u01/app/oracle/product/10.2.0&quot;</span><br><span class="line">declare -x ORACLE_SID=&quot;med&quot;</span><br><span class="line">declare -x ORACLE_TERM=&quot;xterm&quot;</span><br></pre></td></tr></table></figure><ul><li>设置全局环境变量</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export ORACLE_HOME=/u01/app/oracle/product/10.2.0</span><br></pre></td></tr></table></figure><h2 id="xargs"><a href="#xargs" class="headerlink" title="xargs"></a>xargs</h2><ul><li>将所有图片文件拷贝到外部驱动器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls *.jpg | xargs -n1 -i cp &#123;&#125; /external-hard-drive/directory</span><br></pre></td></tr></table></figure><ul><li>将系统中所有 jpd 文件压缩打包</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz</span><br></pre></td></tr></table></figure><ul><li>下载文件中列出的所有 url 对应的页面</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat url-list.txt | xargs wget –c</span><br></pre></td></tr></table></figure><h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h2><ul><li>以易读的方式显示文件大小(显示为 MB,GB…)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -lh</span><br><span class="line">-rw-r----- 1 ramesh team-dev 8.9M Jun 12 15:27 arch-linux.txt.gz</span><br></pre></td></tr></table></figure><ul><li>以最后修改时间升序列出文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -ltr</span><br></pre></td></tr></table></figure><ul><li>在文件名后面显示文件类型</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -F</span><br></pre></td></tr></table></figure><ul><li>使用 ls -a（或）ls -A 显示隐藏的文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ls -a</span><br><span class="line">.                             Debian-Info.txt</span><br><span class="line">..                            CentOS-Info.txt</span><br><span class="line">.bash_history                 Fedora-Info.txt</span><br><span class="line">.bash_logout                  .lftp</span><br><span class="line">.bash_profile                 libiconv-1.11.tar.tar</span><br><span class="line">.bashrc                       libssh2-0.12-1.2.el4.rf.i386.rpm</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2009/07/linux-ls-command-examples/" target="_blank" rel="noopener">Unix LS Command: 15 Practical Examples</a></p><h2 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h2><ul><li>输出当前工作目录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br><span class="line">/Users/chenxiaobin</span><br></pre></td></tr></table></figure><h2 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h2><ul><li><code>cd -</code>可以在最近工作的两个目录间切换</li></ul><ul><li>使用 <code>shopt -s cdspell</code> 可以设置自动对 cd 命令进行拼写检查</li></ul><p>更多示例：<a href="http://www.thegeekstuff.com/2008/10/6-awesome-linux-cd-command-hacks-productivity-tip3-for-geeks/" target="_blank" rel="noopener">6 Awesome Linux cd command Hacks</a></p><h2 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h2><ul><li>创建一个*.gz 的压缩文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzip test.txt</span><br></pre></td></tr></table></figure><ul><li>解压*.gz 文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzip -d test.txt.gz</span><br></pre></td></tr></table></figure><ul><li>显示压缩的比率</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gzip -l *.gz</span><br><span class="line"></span><br><span class="line">compressed        uncompressed  ratio uncompressed_name</span><br><span class="line">    23709               97975  75.8% asp-patch-rpms.txt</span><br></pre></td></tr></table></figure><h2 id="bzip2"><a href="#bzip2" class="headerlink" title="bzip2"></a>bzip2</h2><ul><li>创建*.bz2 压缩文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bzip2 test.txt</span><br></pre></td></tr></table></figure><ul><li>解压*.bz2 文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bzip2 -d test.txt.bz2</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2010/10/bzcommand-examples/" target="_blank" rel="noopener">BZ is Eazy! bzip2, bzgrep, bzcmp, bzdiff, bzcat, bzless, bzmore examples</a></p><h2 id="uzip"><a href="#uzip" class="headerlink" title="uzip"></a>uzip</h2><ul><li>解压*.zip 文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip test.zip</span><br></pre></td></tr></table></figure><ul><li>查看*.zip 文件的内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">unzip -l jasper.zip</span><br><span class="line">Archive:  jasper.zip</span><br><span class="line">Length     Date   Time    Name</span><br><span class="line">--------    ----   ----    ----</span><br><span class="line">40995  11-30-98 23:50   META-INF/MANIFEST.MF</span><br><span class="line">32169  08-25-98 21:07   classes_</span><br><span class="line">15964  08-25-98 21:07   classes_names</span><br><span class="line">10542  08-25-98 21:07   classes_ncomp</span><br></pre></td></tr></table></figure><h2 id="shutdown"><a href="#shutdown" class="headerlink" title="shutdown"></a>shutdown</h2><ul><li>关闭系统并立即关机</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutdown -h now</span><br></pre></td></tr></table></figure><ul><li>10 分钟后关机</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutdown -h +10</span><br></pre></td></tr></table></figure><ul><li>重启</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutdown -r now</span><br></pre></td></tr></table></figure><ul><li>重启期间强制进行系统检查</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutdown -Fr now</span><br></pre></td></tr></table></figure><h2 id="ftp"><a href="#ftp" class="headerlink" title="ftp"></a>ftp</h2><ul><li>ftp 命令和 sftp 命令的用法基本相似连接 ftp 服务器并下载多个文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ftp IP/hostname</span><br><span class="line">ftp&gt; mget *.html</span><br></pre></td></tr></table></figure><ul><li>显示远程主机上文件列表</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; mls *.html -</span><br><span class="line">/ftptest/features.html</span><br><span class="line">/ftptest/index.html</span><br><span class="line">/ftptest/othertools.html</span><br><span class="line">/ftptest/samplereport.html</span><br><span class="line">/ftptest/usage.html</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2010/06/ftp-sftp-tutorial/" target="_blank" rel="noopener">FTP and SFTP Beginners Guide with 10 Examples</a></p><h2 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h2><ul><li>查看某个用户的 crontab 入口</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -u john -l</span><br></pre></td></tr></table></figure><ul><li>设置一个每十分钟执行一次的计划任务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/10 * * * * /home/ramesh/check-disk-space</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2009/06/15-practical-crontab-examples/" target="_blank" rel="noopener">Linux Crontab: 15 Awesome Cron Job Examples</a></p><h2 id="service"><a href="#service" class="headerlink" title="service"></a>service</h2><p>service 命令用于运行 System V init 脚本，这些脚本一般位于/etc/init.d 文件下，这个命令可以直接运行这个文件夹里面的脚本，而不用加上路径</p><ul><li>查看服务状态</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service ssh status</span><br></pre></td></tr></table></figure><ul><li>查看所有服务状态</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service --status-all</span><br></pre></td></tr></table></figure><ul><li>重启服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service ssh restart</span><br></pre></td></tr></table></figure><h2 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h2><p>ps 命令用于显示正在运行中的进程的信息，ps 命令有很多选项，这里只列出了几个</p><ul><li>查看当前正在运行的所有进程</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | more</span><br></pre></td></tr></table></figure><ul><li>以树状结构显示当前正在运行的进程，H 选项表示显示进程的层次结构</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -efH | more</span><br></pre></td></tr></table></figure><h2 id="free"><a href="#free" class="headerlink" title="free"></a>free</h2><p>这个命令用于显示系统当前内存的使用情况，包括已用内存、可用内存和交换内存的情况</p><ul><li>默认情况下 free 会以字节为单位输出内存的使用量</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">free</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:       3566408    1580220    1986188          0     203988     902960</span><br><span class="line">-/+ buffers/cache:     473272    3093136</span><br><span class="line">Swap:      4000176          0    4000176</span><br></pre></td></tr></table></figure><ul><li>如果你想以其他单位输出内存的使用量，需要加一个选项，-g 为 GB，-m 为 MB，-k 为 KB，-b 为字节</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">free -g</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:             3          1          1          0          0          0</span><br><span class="line">-/+ buffers/cache:          0          2</span><br><span class="line">Swap:            3          0          3</span><br></pre></td></tr></table></figure><ul><li>如果你想查看所有内存的汇总，请使用-t 选项，使用这个选项会在输出中加一个汇总行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ramesh@ramesh-laptop:~free -t</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:       3566408    1592148    1974260          0     204260     912556</span><br><span class="line">-/+ buffers/cache:     475332    3091076</span><br><span class="line">Swap:      4000176          0    4000176</span><br><span class="line">Total:     7566584    1592148    5974436</span><br></pre></td></tr></table></figure><h2 id="top"><a href="#top" class="headerlink" title="top"></a>top</h2><p>top 命令会显示当前系统中占用资源最多的一些进程（默认以 CPU 占用率排序）如果你想改变排序方式，可以在结果列表中点击 O（大写字母 O）会显示所有可用于排序的列，这个时候你就可以选择你想排序的列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Current Sort Field:  P  for window 1:Def</span><br><span class="line">Select sort field via field letter, type any other key to return</span><br><span class="line"></span><br><span class="line">  a: PID        = Process Id              v: nDRT       = Dirty Pages count</span><br><span class="line">  d: UID        = User Id                 y: WCHAN      = Sleeping in Function</span><br><span class="line">  e: USER       = User Name               z: Flags      = Task Flags</span><br><span class="line">  ........</span><br></pre></td></tr></table></figure><ul><li>如果只想显示某个特定用户的进程，可以使用-u 选项</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -u oracle</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2010/01/15-practical-unix-linux-top-command-examples/" target="_blank" rel="noopener">Can You Top This? 15 Practical Linux Top Command Examples</a></p><h2 id="df"><a href="#df" class="headerlink" title="df"></a>df</h2><ul><li>显示文件系统的磁盘使用情况，默认情况下 df -k ，将以字节为单位输出磁盘的使用量</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">df -k</span><br><span class="line">Filesystem           1K-blocks      Used Available Use% Mounted on</span><br><span class="line">/dev/sda1             29530400   3233104  24797232  12% /</span><br><span class="line">/dev/sda2            120367992  50171596  64082060  44% /home</span><br></pre></td></tr></table></figure><ul><li>使用-h 选项可以以更符合阅读习惯的方式显示磁盘使用量</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br><span class="line">Filesystem                  Size   Used  Avail Capacity  iused      ifree %iused  Mounted on</span><br><span class="line">/dev/disk0s2               232Gi   84Gi  148Gi    37% 21998562   38864868   36%   /</span><br><span class="line">devfs                      187Ki  187Ki    0Bi   100%      648          0  100%   /dev</span><br><span class="line">map -hosts                   0Bi    0Bi    0Bi   100%        0          0  100%   /net</span><br><span class="line">map auto_home                0Bi    0Bi    0Bi   100%        0          0  100%   /home</span><br><span class="line">/dev/disk0s4               466Gi   45Gi  421Gi    10%   112774  440997174    0%   /Volumes/BOOTCAMP</span><br><span class="line">//app@izenesoft.cn/public  2.7Ti  1.3Ti  1.4Ti    48%        0 18446744073709551615    0%   /Volumes/public</span><br></pre></td></tr></table></figure><ul><li>使用-T 选项显示文件系统类型</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">df -T</span><br><span class="line">Filesystem    Type   1K-blocks      Used Available Use% Mounted on</span><br><span class="line">/dev/sda1     ext4    29530400   3233120  24797216  12% /</span><br><span class="line">/dev/sda2     ext4   120367992  50171596  64082060  44% /home</span><br></pre></td></tr></table></figure><h2 id="kill"><a href="#kill" class="headerlink" title="kill"></a>kill</h2><ul><li>kill 用于终止一个进程。一般我们会先用 ps -ef 查找某个进程得到它的进程号，然后再使用 kill -9 进程号终止该进程。你还可以使用<code>killall</code>、<code>pkill</code>、<code>xkill</code>来终止进程</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep vim</span><br><span class="line">ramesh    7243  7222  9 22:43 pts/2    00:00:00 vim</span><br><span class="line"></span><br><span class="line">kill -9 7243</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2009/12/4-ways-to-kill-a-process-kill-killall-pkill-xkill/" target="_blank" rel="noopener">4 Ways to Kill a Process – kill, killall, pkill, xkill</a></p><h2 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h2><ul><li>删除文件前先确认</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -i filename.txt</span><br></pre></td></tr></table></figure><ul><li>在文件名中使用 shell 的元字符会非常有用。删除文件前先打印文件名并进行确认</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -i file*</span><br></pre></td></tr></table></figure><ul><li>递归删除文件夹下所有文件，并删除该文件夹</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -r example</span><br></pre></td></tr></table></figure><h2 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h2><ul><li>拷贝文件 1 到文件 2，并保持文件的权限、属主和时间戳</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -p file1 file2</span><br></pre></td></tr></table></figure><ul><li>拷贝 file1 到 file2，如果 file2 存在会提示是否覆盖</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -i file1 file2</span><br></pre></td></tr></table></figure><h2 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h2><ul><li>将文件名 file1 重命名为 file2，如果 file2 存在则提示是否覆盖</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv -i file1 file2</span><br></pre></td></tr></table></figure><blockquote><p>注意: 如果使用-f 选项则不会进行提示</p></blockquote><ul><li>-v 会输出重命名的过程，当文件名中包含通配符时，这个选项会非常方便</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv -v file1 file2</span><br></pre></td></tr></table></figure><h2 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h2><ul><li>你可以一次查看多个文件的内容，下面的命令会先打印 file1 的内容，然后打印 file2 的内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat file1 file2</span><br></pre></td></tr></table></figure><ul><li>-n 命令可以在每行的前面加上行号</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat -n /etc/logrotate.conf</span><br><span class="line">    1/var/log/btmp &#123;</span><br><span class="line">    2    missingok</span><br><span class="line">    3    monthly</span><br><span class="line">    4    create 0660 root utmp</span><br><span class="line">    5    rotate 1</span><br><span class="line">    6&#125;</span><br></pre></td></tr></table></figure><h2 id="mount"><a href="#mount" class="headerlink" title="mount"></a>mount</h2><ul><li>如果要挂载一个文件系统，需要先创建一个目录，然后将这个文件系统挂载到这个目录上</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mkdir /u01</span><br><span class="line"></span><br><span class="line"># mount /dev/sdb1 /u01</span><br></pre></td></tr></table></figure><ul><li>也可以把它添加到 fstab 中进行自动挂载，这样任何时候系统重启的时候，文件系统都会被加载</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/sdb1 /u01 ext2 defaults 0 2</span><br></pre></td></tr></table></figure><h2 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a>chmod</h2><ul><li>chmod 用于改变文件和目录的权限,给指定文件的属主和属组所有权限(包括读、写、执行)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod ug+rwx file.txt</span><br></pre></td></tr></table></figure><ul><li>删除指定文件的属组的所有权限</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod g-rwx file.txt</span><br></pre></td></tr></table></figure><ul><li>修改目录的权限，以及递归修改目录下面所有文件和子目录的权限</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R ug+rwx file.txt</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2010/06/chmod-command-examples/" target="_blank" rel="noopener">7 Chmod Command Examples for Beginners</a></p><h2 id="chown"><a href="#chown" class="headerlink" title="chown"></a>chown</h2><ul><li>chown 用于改变文件属主和属组,同时将某个文件的属主改为 oracle，属组改为 db</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown oracle:dba dbora.sh</span><br></pre></td></tr></table></figure><ul><li>使用-R 选项对目录和目录下的文件进行递归修改</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R oracle:dba /home/oracle</span><br></pre></td></tr></table></figure><h2 id="passwd"><a href="#passwd" class="headerlink" title="passwd"></a>passwd</h2><ul><li>passwd 用于在命令行修改密码，使用这个命令会要求你先输入旧密码，然后输入新密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><ul><li>超级用户可以用这个命令修改其他用户的密码，这个时候不需要输入用户的密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># passwd USERNAME</span><br></pre></td></tr></table></figure><ul><li>passwd 还可以删除某个用户的密码，这个命令只有 root 用户才能操作，删除密码后，这个用户不需要输入密码就可以登录到系统</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># passwd -d USERNAME</span><br></pre></td></tr></table></figure><h2 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h2><ul><li>在 home 目录下创建一个名为 temp 的目录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/temp</span><br></pre></td></tr></table></figure><ul><li>使用-p 选项可以创建一个路径上所有不存在的目录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p dir1/dir2/dir3/dir4/</span><br></pre></td></tr></table></figure><h2 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h2><p>ifconfig 用于查看和配置 Linux 系统的网络接口</p><ul><li>查看所有网络接口及其状态</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig -a</span><br></pre></td></tr></table></figure><p>使用 up 和 down 命令启动或停止某个接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0 up</span><br><span class="line">ifconfig eth0 down</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2009/03/ifconfig-7-examples-to-configure-network-interface/" target="_blank" rel="noopener">Ifconfig: 7 Examples To Configure Network Interface</a></p><h2 id="uname"><a href="#uname" class="headerlink" title="uname"></a>uname</h2><ul><li>uname 可以显示一些重要的系统信息，例如内核名称、主机名、内核版本号、处理器类型之类的信息</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br><span class="line">Linux john-laptop 2.6.32-24-generic #41-Ubuntu SMP Thu Aug 19 01:12:52 UTC 2010 i686 GNU/Linux</span><br></pre></td></tr></table></figure><h2 id="whereis"><a href="#whereis" class="headerlink" title="whereis"></a>whereis</h2><ul><li>当你不知道某个命令的位置时可以使用 whereis 命令，下面使用 whereis 查找 ls 的位置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">whereis ls</span><br><span class="line">ls: /bin/ls /usr/share/man/man1/ls.1.gz /usr/share/man/man1p/ls.1p.gz</span><br></pre></td></tr></table></figure><ul><li>当你想查找某个可执行程序的位置，但这个程序又不在 whereis 的默认目录下，你可以使用-B 选项，并指定目录作为这个选项的参数。下面的命令在/tmp 目录下查找 lsmk 命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">whereis -u -B /tmp -f lsmk</span><br><span class="line">lsmk: /tmp/lsmk</span><br></pre></td></tr></table></figure><h2 id="whatis"><a href="#whatis" class="headerlink" title="whatis"></a>whatis</h2><ul><li>wathis 显示某个命令的描述信息</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">whatis ls</span><br><span class="line">ls(1)  - list directory contents</span><br><span class="line"></span><br><span class="line">whatis ifconfig</span><br><span class="line">ifconfig (8)         - configure a network interface</span><br></pre></td></tr></table></figure><h2 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h2><ul><li>locate 命名可以显示某个指定文件（或一组文件）的路径，它会使用由 updatedb 创建的数据库</li></ul><p>下面的命令会显示系统中所有包含 crontab 字符串的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">locate crontab</span><br><span class="line">/etc/anacrontab</span><br><span class="line">/etc/crontab</span><br><span class="line">/usr/bin/crontab</span><br><span class="line">/usr/share/doc/cron/examples/crontab2english.pl.gz</span><br><span class="line">/usr/share/man/man1/crontab.1.gz</span><br><span class="line">/usr/share/man/man5/anacrontab.5.gz</span><br><span class="line">/usr/share/man/man5/crontab.5.gz</span><br><span class="line">/usr/share/vim/vim72/syntax/crontab.vim</span><br></pre></td></tr></table></figure><h2 id="man"><a href="#man" class="headerlink" title="man"></a>man</h2><ul><li>显示某个命令的 man 页面</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man crontab</span><br></pre></td></tr></table></figure><ul><li>有些命令可能会有多个 man 页面，每个 man 页面对应一种命令类型</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man SECTION-NUMBER commandname</span><br></pre></td></tr></table></figure><ul><li>man 页面一般可以分为 8 种命令类型：</li><li><ol><li>用户命令</li></ol></li><li><ol start="2"><li>系统调用</li></ol></li><li><ol start="3"><li>c 库函数</li></ol></li><li><ol start="4"><li>设备与网络接口</li></ol></li><li><ol start="5"><li>文件格式</li></ol></li><li><ol start="6"><li>游戏与屏保</li></ol></li><li><ol start="7"><li>环境、表、宏</li></ol></li><li><ol start="8"><li>系统管理员命令和后台运行命令例如，我们执行 whatis crontab，你可以看到 crontab 有两个命令类型 1 和 5，所以我们可以通过下面的命令查看命令类型 5 的 man 页面。</li></ol></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">whatis crontab</span><br><span class="line">crontab (1)          - maintain crontab files for individual users (V3)</span><br><span class="line">crontab (5)          - tables for driving cron</span><br><span class="line"></span><br><span class="line">man 5 crontab</span><br></pre></td></tr></table></figure><h2 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h2><ul><li>tail 命令默认显示文件最后的 10 行文本</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail filename.txt</span><br></pre></td></tr></table></figure><ul><li>你可以使用-n 选项指定要显示的行数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -n N filename.txt</span><br></pre></td></tr></table></figure><ul><li>你也可以使用-f 选项进行实时查看，这个命令执行后会等待，如果有新行添加到文件尾部，它会继续输出新的行，在查看日志时这个选项会非常有用。你可以通过 CTRL-C 终止命令的执行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f log-file</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2009/09/multitail-to-view-tail-f-output-of-multiple-log-files-in-one-terminal/" target="_blank" rel="noopener">3 Methods To View tail -f output of Multiple Log Files in One Terminal</a></p><h2 id="less"><a href="#less" class="headerlink" title="less"></a>less</h2><ul><li>这个命名可以在不加载整个文件的前提下显示文件内容，在查看大型日志文件的时候这个命令会非常有用</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">less huge-log-file.log</span><br></pre></td></tr></table></figure><ul><li>当你用 less 命令打开某个文件时，下面两个按键会给你带来很多帮助，他们用于向前和向后滚屏</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CTRL+F – forward one window</span><br><span class="line">CTRL+B – backward one window</span><br></pre></td></tr></table></figure><p>更多示例：<a href="Unix Less Command: 10 Tips for Effective Navigation">Unix Less Command: 10 Tips for Effective Navigation</a></p><h2 id="su"><a href="#su" class="headerlink" title="su"></a>su</h2><p>su 命令用于切换用户账号，超级用户使用这个命令可以切换到任何其他用户而不用输入密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - USERNAME</span><br></pre></td></tr></table></figure><ul><li>用另外一个用户名执行一个命令下面的示例中用户 john 使用 raj 用户名执行 ls 命令，执行完后返回 john 的账号</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - raj -c &apos;ls&apos;</span><br></pre></td></tr></table></figure><ul><li>用指定用户登录，并且使用指定的 shell 程序，而不用默认的</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -s &apos;SHELLNAME&apos; USERNAME</span><br></pre></td></tr></table></figure><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><p>mysql 可能是 Linux 上使用最广泛的数据库，即使你没有在你的服务器上安装 mysql，你也可以使用 mysql 客户端连接到远程的 mysql 服务器</p><ul><li>连接一个远程数据库，需要输入密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p -h 192.168.1.2</span><br></pre></td></tr></table></figure><ul><li>连接本地数据库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>你也可以在命令行中输入数据库密码，只需要在-p 后面加上密码作为参数，可以直接写在 p 后面而不用加空格</p><h2 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h2><ul><li>使用 yum 安装 apache</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install httpd</span><br></pre></td></tr></table></figure><ul><li>更新 apache</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update httpd</span><br></pre></td></tr></table></figure><ul><li>删除 apache</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove httpd</span><br></pre></td></tr></table></figure><h2 id="rpm"><a href="#rpm" class="headerlink" title="rpm"></a>rpm</h2><ul><li>使用 rpm 安装 apache</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># rpm -ivh httpd-2.2.3-22.0.1.el5.i386.rpm</span><br></pre></td></tr></table></figure><ul><li>更新 apache</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># rpm -uvh httpd-2.2.3-22.0.1.el5.i386.rpm</span><br></pre></td></tr></table></figure><ul><li>卸载/删除 apache</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># rpm -ev httpd</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2010/07/rpm-command-examples/" target="_blank" rel="noopener">RPM Command: 15 Examples to Install, Uninstall, Upgrade, Query RPM Packages</a></p><h2 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h2><ul><li>ping 一个远程主机，只发 5 个数据包</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping -c 5 gmail.com</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2009/11/ping-tutorial-13-effective-ping-command-examples/" target="_blank" rel="noopener">Ping Tutorial: 15 Effective Ping Command Examples</a></p><h2 id="date"><a href="#date" class="headerlink" title="date"></a>date</h2><ul><li>设置系统日期</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># date -s &quot;01/31/2010 23:59:53&quot;</span><br></pre></td></tr></table></figure><ul><li>当你修改了系统时间，你需要同步硬件时间和系统时间</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># hwclock –systohc</span><br><span class="line"></span><br><span class="line"># hwclock --systohc –utc</span><br></pre></td></tr></table></figure><h2 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h2><ul><li>使用 wget 从网上下载软件、音乐、视频</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://prdownloads.sourceforge.net/sourceforge/nagios/nagios-3.2.1.tar.gz</span><br></pre></td></tr></table></figure><ul><li>下载文件并以指定的文件名保存文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O taglist.zip</span><br></pre></td></tr></table></figure><p>更多示例：<a href="http://www.thegeekstuff.com/2009/09/the-ultimate-wget-download-guide-with-15-awesome-examples/" target="_blank" rel="noopener">http://www.vim.org/scripts/download_script.php?src_id=7701</a></p>]]></content>
      
      
      <categories>
          
          <category> 术业专攻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> command </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring基础讲解</title>
      <link href="/2016/05/09/spring-base-knowledge/"/>
      <url>/2016/05/09/spring-base-knowledge/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一-注解"><a href="#一-注解" class="headerlink" title="一. 注解"></a>一. 注解</h2><h3 id="1-Autowired"><a href="#1-Autowired" class="headerlink" title="1. @Autowired"></a>1. @Autowired</h3><ul><li>位置：类属性</li><li>作用：注入Spring容器中的bean对象</li></ul><h3 id="2-Bean"><a href="#2-Bean" class="headerlink" title="2. @Bean"></a>2. @Bean</h3><ul><li>位置：方法</li><li>作用：相当于xml配置中的<code>&lt;bean&gt;</code></li></ul><h3 id="3-Configuration"><a href="#3-Configuration" class="headerlink" title="3. @Configuration"></a>3. @Configuration</h3><ul><li>位置：类</li><li>作用：相当于xml配置</li></ul><h3 id="4-ComponentScan"><a href="#4-ComponentScan" class="headerlink" title="4. @ComponentScan"></a>4. @ComponentScan</h3><ul><li>位置：类</li><li>属性：<ul><li>basePackages  配置一个或者多个扫描包</li></ul></li><li>作用：<br>与 @Configuration共用，用于配置spring容器初始化是扫描哪些包和类, 不定义basePackage属性默认是扫描注解该类所在的包<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span> </span><br><span class="line"><span class="meta">@ComponentScan</span>(basePackages = <span class="string">"com.bin.springboot.config, com.bin.dao"</span>) </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringConfig</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-PropertySource"><a href="#5-PropertySource" class="headerlink" title="5. @PropertySource"></a>5. @PropertySource</h3><ul><li>位置：类</li><li>属性：<ul><li>value  定义一个或多个配置文件路径</li><li>ignoreResourceNotFound 是否忽略配置文件不存在</li></ul></li><li>作用：读取外部的资源配置文件，可通过@Value注解获取值<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(basePackages = <span class="string">"com.bin.springboot.config"</span>)</span><br><span class="line"><span class="meta">@PropertySource</span>(value= &#123;<span class="string">"classpath:jdbc.properties"</span>,<span class="string">"classpath:test.properties"</span>&#125;, ignoreResourceNotFound=<span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.url&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String jdbcUrl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 术业专攻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java反射浅谈</title>
      <link href="/2016/05/07/java-reflect/"/>
      <url>/2016/05/07/java-reflect/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="任何一个类都是Class的实例对象"><a href="#任何一个类都是Class的实例对象" class="headerlink" title="任何一个类都是Class的实例对象"></a>任何一个类都是Class的实例对象</h2><p>这个实例对象有三种表示方式： </p><ol><li><p>任何一个类都有一个隐含的静态成员变量class</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">class Foo()&#123;&#125;</span><br><span class="line">Class c1 = Foo.class();</span><br></pre></td></tr></table></figure></li><li><p>该类的对象可以通过getClass方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Foo f1 = new Foo();</span><br><span class="line">Class f2 = f1.getClass();</span><br></pre></td></tr></table></figure></li><li><p>通过Clas.forName方法创建Class的实例对象</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class c3 = Class.forName(&quot;com.bin.test.Foo&quot;);</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>静态加载与动态加载的区别：</p><ol><li>静态加载会在编译时检查所有需要new的对象类是否存在，不存在就会报错。</li><li>动态加载通过Clas.forName(“全包名参数”)去加载类对象，编译时不会报错，只有在运行时传入的全包名参数代表的类不存在时才会报错。</li></ol></blockquote><h2 id="基本的数据类型都存在类类型"><a href="#基本的数据类型都存在类类型" class="headerlink" title="基本的数据类型都存在类类型"></a>基本的数据类型都存在类类型</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> ClassTest&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Class c1 = <span class="keyword">int</span>.class;</span><br><span class="line">        Class c2 = Double.class;</span><br><span class="line">        Class c3 = <span class="keyword">void</span>.class();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反射获取类的对象"><a href="#反射获取类的对象" class="headerlink" title="反射获取类的对象"></a>反射获取类的对象</h2><h3 id="反射获取无构造参数的类"><a href="#反射获取无构造参数的类" class="headerlink" title="反射获取无构造参数的类"></a>反射获取无构造参数的类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getInstanceWithNoParameter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Class&lt;Food&gt; c1 = Food.class;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Food food = c1.newInstance();</span><br><span class="line">        food.setName(<span class="string">"面包"</span>);</span><br><span class="line">        System.out.println(food.getName());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InstantiationException | IllegalAccessException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反射获取含有多个参数的构造函数的类"><a href="#反射获取含有多个参数的构造函数的类" class="headerlink" title="反射获取含有多个参数的构造函数的类"></a>反射获取含有多个参数的构造函数的类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getInstanceWithMoreParameter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Class&lt;Food&gt; c2 = Food.class;</span><br><span class="line">        Constructor&lt;Food&gt; constructor = c2.getConstructor(String.class, Double.class);</span><br><span class="line">        Food food = constructor.newInstance(<span class="string">"milk"</span>, <span class="number">22.2</span>);</span><br><span class="line">        System.out.println(food.toString());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InstantiationException | IllegalAccessException | NoSuchMethodException | InvocationTargetException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反射获取类方法"><a href="#反射获取类方法" class="headerlink" title="反射获取类方法"></a>反射获取类方法</h2><h3 id="获取类所有公有访问权限方法"><a href="#获取类所有公有访问权限方法" class="headerlink" title="获取类所有公有访问权限方法"></a>获取类所有公有访问权限方法</h3><p>获取类所有访问权限为public的方法，包括从父类继承下来的public方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getPublicMethodElement</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Class&lt;Food&gt; c1 = Food.class;</span><br><span class="line">    Method[] methods = c1.getMethods();</span><br><span class="line">    printMethod(methods);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="获取类所有权限的方法"><a href="#获取类所有权限的方法" class="headerlink" title="获取类所有权限的方法"></a>获取类所有权限的方法</h3><p>获取类所有自定义的方法，包括所有访问权限的方法，不包括从父类继承下来的方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getDeclaredMethodElement</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Class&lt;Food&gt; c1 = Food.class;</span><br><span class="line">    Method[] methods = c1.getDeclaredMethods();</span><br><span class="line">    printMethod(methods);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 术业专攻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>svn基础使用技巧</title>
      <link href="/2016/01/03/svn-base-knowledge/"/>
      <url>/2016/01/03/svn-base-knowledge/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">svnadmin create 库名</span><br><span class="line"></span><br><span class="line">举例：svnadmin create test_svn</span><br><span class="line">     svnadmin create /svn/test_svn_2</span><br></pre></td></tr></table></figure><h2 id="运行版本库"><a href="#运行版本库" class="headerlink" title="运行版本库"></a>运行版本库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">svnserve  -d  -r 库名</span><br><span class="line">举例： svnserve -d  -r  /svnroot/hello</span><br><span class="line"></span><br><span class="line"># 以指定端口号运行版本库，默认端口号是3690</span><br><span class="line">svnserve  -d  -r 库名 --listen-port 端口号</span><br><span class="line">举例: svnserve -d  -r  /svnroot/hello  --listen-port 3691</span><br></pre></td></tr></table></figure><h2 id="停止运行的所有版本库"><a href="#停止运行的所有版本库" class="headerlink" title="停止运行的所有版本库"></a>停止运行的所有版本库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## 停止运行的所有版本库</span><br><span class="line">killall svnserve</span><br></pre></td></tr></table></figure><h2 id="检出版本库"><a href="#检出版本库" class="headerlink" title="检出版本库"></a>检出版本库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">## 检出版本库</span><br><span class="line">svn checkout 地址 版本库命名</span><br><span class="line">svn checkout svn://192.168.0.1:3691 hello3691</span><br></pre></td></tr></table></figure><h2 id="删除版本库"><a href="#删除版本库" class="headerlink" title="删除版本库"></a>删除版本库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rm -rfv 库名</span><br><span class="line"></span><br><span class="line">举例：rm -rfv test_svn</span><br><span class="line">     rm -rfv /svn/test_svn_2</span><br></pre></td></tr></table></figure><h2 id="svn版本库配置"><a href="#svn版本库配置" class="headerlink" title="svn版本库配置"></a>svn版本库配置</h2><ol><li>配置文件位于版本库的conf文件夹下,该文件夹下有三个文件，分别是    <code>authz</code>,<code>passwd</code>,<code>svnserve.conf</code></li></ol><ul><li>authz   配置用户组以及用户组权限</li><li>passwd  配置允许访问当前版本库的用户名和密码</li><li>svnserve.conf  配置默认权限，权限配置文件及密码配置文件</li></ul><blockquote><p>注意：版本库配置必须在版本库运行前修改，否则配置不起作用。</p></blockquote><h2 id="常见svn客户端命令"><a href="#常见svn客户端命令" class="headerlink" title="常见svn客户端命令"></a>常见svn客户端命令</h2><p><strong>1.  svn add     添加到版本控制</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 版本库增加文件</span><br><span class="line">svn add 文件</span><br><span class="line"></span><br><span class="line"># 增加文件夹，默认添加该文件夹和递归添加该文件夹所有文件</span><br><span class="line">svn add 文件夹</span><br><span class="line"></span><br><span class="line"># 只增加文件夹</span><br><span class="line">svn add 文件夹 --non-recursive</span><br><span class="line"></span><br><span class="line"># 一次性增加版本库中所有无版本控制所有文件及文件夹（如果有文件夹已添加到版本库，但该文件夹内的文件还是无版本控制，该文件夹的文件默认不添加到版本库）</span><br><span class="line">svn add *</span><br><span class="line"></span><br><span class="line"># 强制添加所有无版本控制的文件</span><br><span class="line">svn add * --force</span><br></pre></td></tr></table></figure></p><p><strong>2.  svn commit  提交修改到服务端（创建一个新版本号）</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 提交文件或文件夹到svn服务端（-m后的参数必须加）</span><br><span class="line">svn commit -m &quot;描述&quot; 文件／文件夹</span><br><span class="line"></span><br><span class="line"># 提交版本库所有增加的文件和文件夹</span><br><span class="line">svn commit -m &quot;描述&quot; *</span><br></pre></td></tr></table></figure></p><p><strong>3.  svn update  更新工作副本</strong></p><blockquote><p><strong>默认情况下，每个文件只会从服务端更新一次最新版本，此情况只适用修改的文件，但工作副本使用rm命令删除的文件，再次使用 svn update会将删除的文件从svn服务端拉取回来，所有删除文件需要使用svn命令。</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 工作副本全目录更新到最新版本</span><br><span class="line">svn update</span><br><span class="line"></span><br><span class="line"># 更新工作副本中的文件到对应指定的版本号</span><br><span class="line">svn update -r 版本号 文件</span><br><span class="line"></span><br><span class="line"># 强制更新工作副本的所有文件到最新版本</span><br><span class="line">svn update *</span><br></pre></td></tr></table></figure><p><strong>4.  svn delete  从版本库中删除文件或目录</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 删除工作副本的文件，备注不是必备的，提交即可删除svn服务端对应文件</span><br><span class="line">svn delete 文件 -m “备注”</span><br></pre></td></tr></table></figure></p><p><strong>5. svn diff  版本差异比较</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 比较工作副本与最后一次提交版本的差异</span><br><span class="line">svn diff 文件名</span><br><span class="line"></span><br><span class="line"># 比较工作副本与任意历史版本的差异</span><br><span class="line">svn diff -r 版本号 文件名</span><br><span class="line"></span><br><span class="line"># 比较任意两个历史版本的差异</span><br><span class="line">svn diff -r 版本号:版本号 文件名</span><br><span class="line"></span><br><span class="line"># 比较工作副本中所有文件与最后一次提交版本的差异</span><br><span class="line">svn diff</span><br></pre></td></tr></table></figure></p><p><strong>6. svn mkdir  创建目录并添加到版本控制中</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 创建文件文件夹并将其添加到版本控制中，相当于使用系统命令mkdir创建文件夹再使用svn add 文件夹</span><br><span class="line">svn mkdir 文件夹</span><br></pre></td></tr></table></figure></p><p><strong>7. svn cat  不检出工作副本直接查看指定文件</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 脱离工作副本查看线上版本库(即svn服务端)的文件</span><br><span class="line">svn cat 线上版本库文件路径</span><br><span class="line">如：svn cat svn://192.168.0.130/index.html</span><br></pre></td></tr></table></figure></p><p>*8. svn revert [–recursive][filename|] 工作副本的还原**<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 还原工作副本的文件</span><br><span class="line">svn revert 文件名</span><br><span class="line"></span><br><span class="line"># 还原工作副本当前目录的文件，不会递归扫描所有目录的文件</span><br><span class="line">svn revert *</span><br><span class="line"></span><br><span class="line"># 还原工作副本所有的文件，会递归扫描所有目录的文件</span><br><span class="line">svn revert --recursive *</span><br></pre></td></tr></table></figure></p><h2 id="二进制冲突与树冲突"><a href="#二进制冲突与树冲突" class="headerlink" title="二进制冲突与树冲突"></a>二进制冲突与树冲突</h2><ol><li>冲突与产生条件</li></ol><ul><li>冲突出现于工作副本长时间未更新时</li><li>更新到的数据与工作副本的修改正好在同一处</li></ul><ol start="2"><li>树冲突</li></ol><ul><li>发生树冲突的文件都不是二进制文本文件</li><li>树冲突无法精确到行并且处理树冲突必须处理整个文件</li></ul><ol start="3"><li>冲突处理</li></ol><ul><li>发现冲突推荐选择（p）推迟处理，原因是选择mc或者tc会将修改直接提交到svn版本库中，推迟处理可以将冲突保存在工作副本中，不会提交到svn服务端。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># svn处理工作副本的冲突命令</span><br><span class="line">svn resolve 文件名</span><br><span class="line"></span><br><span class="line"># 告知svn服务端本地工作副本已处理完某文件的冲突, 采用编辑文件的方式解决的冲突必须采用以下命令标志解决冲突，而采用svn resolve 解决冲突可以不必使用以下命令标志。</span><br><span class="line">svn resolved 文件名</span><br></pre></td></tr></table></figure></li></ul><h2 id="锁定与解锁"><a href="#锁定与解锁" class="headerlink" title="锁定与解锁"></a>锁定与解锁</h2><p><strong>1. svn lock  锁定文件，防止其他成员对文件进行提交</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 锁定文件，锁定文件并不需要提交，但是默认工作副本提交后会自动解锁文件</span><br><span class="line">svn lock 文件名</span><br><span class="line"></span><br><span class="line"># 工作副本提交后不自动解锁文件</span><br><span class="line">svn commit -m &quot;&quot; --no-unlock 文件名</span><br></pre></td></tr></table></figure></p><p><strong>2. svn unlock  解锁文件</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 解锁文件，解锁文件并不需要提交</span><br><span class="line">svn unlock 文件名</span><br></pre></td></tr></table></figure></p><h2 id="svn进阶"><a href="#svn进阶" class="headerlink" title="svn进阶"></a>svn进阶</h2><ol><li><p>svn list 列出当前目录下处于版本控制的所有文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 列出当前目录处于版本控制的文件，无版本控制的文件不会列出，文件夹内容不会递归显示</span><br><span class="line">svn list</span><br><span class="line"></span><br><span class="line"># 列出当前目录处于版本控制的文件，文件夹内容会递归显示，而无版本控制的文件不会列出，</span><br><span class="line">svn list --recursive</span><br><span class="line"></span><br><span class="line"># 查看处于版本控制的文件（夹）的详细信息， 文件夹内容不会递归显示</span><br><span class="line">svn ls -v</span><br><span class="line"></span><br><span class="line"># 查看处于版本控制的文件（夹）的详细信息， 文件夹内容会递归显示</span><br><span class="line">svn ls -v --recursive</span><br></pre></td></tr></table></figure></li><li><p>svn status 列出工作副本中对文件（文件夹）状态</p></li></ol><ul><li>?     无版本控制</li><li>M     已被编辑过 </li><li>D     已被标记从版本库中删除</li><li>A     已被标记增加到版本控制中</li><li>R     文件被替换</li><li>C     文件存在冲突</li><li>!     文件缺失</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看出工作副本中对文件（文件夹）状态</span><br><span class="line">svn status</span><br></pre></td></tr></table></figure><ol start="3"><li><p>svn log 查看提交日志（来自svn commit 的-m参数）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 查看所有的提交日志</span><br><span class="line">svn log</span><br><span class="line"></span><br><span class="line"># 查看指定文件相关的提交日志</span><br><span class="line">svn log 文件名</span><br></pre></td></tr></table></figure></li><li><p>snv info 工作副本及文件（文件夹）的详细信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查看整个版本库信息</span><br><span class="line">svn info</span><br><span class="line"></span><br><span class="line"># 查看版本库指定文件的xx</span><br><span class="line">svn info 文件名</span><br><span class="line"></span><br><span class="line"># 查看整个版本库信息，并且以xml显示和以管道输出到当前info.xml文件中</span><br><span class="line">svn info --xml &gt;&gt; info.xml</span><br></pre></td></tr></table></figure></li></ol><h2 id="多版本库解决方案"><a href="#多版本库解决方案" class="headerlink" title="多版本库解决方案"></a>多版本库解决方案</h2><ol><li><p>使用不同端口号使用多个版本库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 创建版本库</span><br><span class="line">svnadmin create 库名</span><br><span class="line"></span><br><span class="line"># 以指定端口号运行版本库，默认端口号是3690</span><br><span class="line">svnserve  -d  -r 库名 --listen-port 端口号</span><br><span class="line">举例: svnserve -d  -r  /svnroot/hello  --listen-port 3691</span><br></pre></td></tr></table></figure></li><li><p>使用一个端口号运行多个版本库,多个版本库存放在同一个目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 以指定端口号运行版本库，默认端口号是3690</span><br><span class="line">svnserve  -d  -r 多个版本库对应根目录</span><br><span class="line">举例: svnserve -d  -r  /svnroot</span><br><span class="line"></span><br><span class="line"># 检出版本库</span><br><span class="line">svn checkout 地址/版本库名称</span><br><span class="line">举例：svn checkout svn://192.168.0.1/hello</span><br></pre></td></tr></table></figure></li></ol><h2 id="svn-copy"><a href="#svn-copy" class="headerlink" title="svn copy"></a>svn copy</h2><ul><li>工作副本 -&gt; 工作副本</li><li>工作副本 -&gt; 版本库（不可跨版本库操作！）</li><li>版本库 -&gt; 工作副本 （可跨版本库操作！）</li><li>版本库 -&gt; 版本库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 复制工作副本单个文件并重新命名，复制后的文件默认加入版本控制中</span><br><span class="line">svn copy  源文件 目标文件</span><br><span class="line"></span><br><span class="line"># 复制工作副本指定版本库单个文件并重新命名，复制后的文件默认加入版本控制中</span><br><span class="line">svn copy  -r  版本号 源文件 目标文件</span><br><span class="line"></span><br><span class="line"># 复制工作副本多个文件，复制后的文件默认加入版本控制中</span><br><span class="line">svn copy  源文件 源文件 源文件 目标文件夹</span><br><span class="line"></span><br><span class="line"># 复制工作副本到线上版本库</span><br><span class="line">svn copy 源文件  线上版本库地址 -m &quot;备注&quot;</span><br><span class="line"></span><br><span class="line"># 复制线上版本库文件到工作副本</span><br><span class="line">svn copy 线上版本库地址  目标文件 -m &quot;备注&quot;</span><br></pre></td></tr></table></figure><h2 id="主干版本和分支版本"><a href="#主干版本和分支版本" class="headerlink" title="主干版本和分支版本"></a>主干版本和分支版本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 复制线上版本库文件</span><br><span class="line">svn copy 线上版本库地址  线上版本库地址  -m &quot;备注&quot;</span><br><span class="line">举例：svn copy svn://192.168.0.130/imooc svn://192.168.0.130/imooc/trunk -m &quot;trunk&quot;</span><br></pre></td></tr></table></figure><h2 id="svn高级应用"><a href="#svn高级应用" class="headerlink" title="svn高级应用"></a>svn高级应用</h2><h3 id="HOOKS钩子应用"><a href="#HOOKS钩子应用" class="headerlink" title="HOOKS钩子应用"></a>HOOKS钩子应用</h3><blockquote><p>钩子位于版本库的hooks文件夹下</p></blockquote><h3 id="版本库精简与丢弃"><a href="#版本库精简与丢弃" class="headerlink" title="版本库精简与丢弃"></a>版本库精简与丢弃</h3><ol><li><p>停止svn服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall svnserve</span><br></pre></td></tr></table></figure></li><li><p>备份版本库系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svnadmin dump 版本库文件系统路径 -r 版本号 : 版本号 &gt;&gt;  目录  文件名</span><br></pre></td></tr></table></figure></li><li><p>新建版本库，并将备份版本库放到该版本库中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svnadmin create 版本库</span><br><span class="line">svnadmin load 版本库  &lt;  备份文件名</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>版本库精简后，以前的工作副本不可再使用，需要重新检出版本库的一份工作副本。</p></blockquote><h3 id="版本库迁移与switch重定向"><a href="#版本库迁移与switch重定向" class="headerlink" title="版本库迁移与switch重定向"></a>版本库迁移与switch重定向</h3><h4 id="版本库迁移步骤："><a href="#版本库迁移步骤：" class="headerlink" title="版本库迁移步骤："></a>版本库迁移步骤：</h4><ol><li>killall svnserve</li><li>把/svnroot/repo压缩成repo.zip</li><li>复制repo.zip到新服务器并解压</li><li>在新服务器运行repo版本库</li></ol><h4 id="工作副本switch重定向"><a href="#工作副本switch重定向" class="headerlink" title="工作副本switch重定向"></a>工作副本switch重定向</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn switch --relocate 旧版本库地址 新版本库地址</span><br></pre></td></tr></table></figure><h2 id="svn常见的坑"><a href="#svn常见的坑" class="headerlink" title="svn常见的坑"></a>svn常见的坑</h2><ol><li>忘记配置svnserve.conf</li><li>运行版本库路径问题</li><li>svnadmin dump／load 管道符号问题</li></ol>]]></content>
      
      
      <categories>
          
          <category> 术业专攻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> svn </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
